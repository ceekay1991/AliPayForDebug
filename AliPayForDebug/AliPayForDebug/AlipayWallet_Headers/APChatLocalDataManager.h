//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class APCustomStorage, NSMutableDictionary;
@protocol APChatMessageProxy, APChatQueqeMessageProxy, APChatSendMessageProxy, APSnapChatMessageProxy;

@interface APChatLocalDataManager : NSObject
{
    NSMutableDictionary *_contactNameCache;
    id <APSnapChatMessageProxy> _snapChatProxy;
    id <APChatSendMessageProxy> _sendMessageProxy;
    id <APChatQueqeMessageProxy> _queqeMessageProxy;
    APCustomStorage *_storage;
    NSMutableDictionary *_tableNameCache;
    id <APChatMessageProxy> _messageProxy;
}

+ (id)chatTableNameWithUserId:(id)arg1 userType:(id)arg2;
+ (id)sharedInstance;
@property(retain, nonatomic) id <APChatMessageProxy> messageProxy; // @synthesize messageProxy=_messageProxy;
@property(retain, nonatomic) NSMutableDictionary *tableNameCache; // @synthesize tableNameCache=_tableNameCache;
@property(retain) APCustomStorage *storage; // @synthesize storage=_storage;
- (void).cxx_destruct;
- (id)deleteAllBurnRecord;
- (id)deleteBurnRecordWithClientMsgIds:(id)arg1;
- (id)deleteBurnRecordWithClientMsgId:(id)arg1;
- (id)deleteBurnRecordWithUserId:(id)arg1 userType:(id)arg2;
- (id)queryAllBurnRecord;
- (id)queryBurnRecordWithUserId:(id)arg1 userType:(id)arg2;
- (id)insertBurnRecordList:(id)arg1;
- (id)insertBurnRecord:(id)arg1;
- (_Bool)checkHasBizRecordWithUserID:(id)arg1 bizType:(id)arg2;
- (id)queryAllChatQueueMessages:(id)arg1;
- (void)insertChatQueueMessage:(id)arg1;
- (void)deleteChatQueueMessgeWithClientMsgIDs:(id)arg1;
- (void)deleteSendMessagesTable;
- (void)updateSendingMessageStatus:(id)arg1 clientMsgIDs:(id)arg2;
- (void)updateAllessagesSendingStatus:(id)arg1;
- (id)querySendingAllMessage;
- (id)querySendMessageWithClientMsgIDs:(id)arg1;
- (void)deleteSendMessages:(id)arg1;
- (id)querySendMessageWithClientMsgID:(id)arg1;
- (void)insertSendingMessage:(id)arg1;
- (void)deletePrivateMessageTable:(id)arg1;
- (void)deleteTabel:(id)arg1 toType:(id)arg2;
- (void)deleteLoacalMessgeWithClientMsgIDs:(id)arg1 userId:(id)arg2 toType:(id)arg3;
- (id)updateMessagesExceptCreatTime:(id)arg1 userID:(id)arg2 toType:(id)arg3;
- (void)updateMessageExceptCreateTime:(id)arg1 userID:(id)arg2;
- (void)updateMessages:(id)arg1 userID:(id)arg2 toType:(id)arg3;
- (void)updateMessage:(id)arg1 userID:(id)arg2;
- (id)insertChatMessages:(id)arg1 userID:(id)arg2 userType:(id)arg3 updateArray:(id)arg4;
- (void)insertHistoryMessagesAtHeadOnceWith:(id)arg1 userID:(id)arg2 userType:(id)arg3;
- (_Bool)insertChatMessage:(id)arg1 userID:(id)arg2 userType:(id)arg3;
- (long long)getTotalMsgCountOfSession:(id)arg1 userType:(id)arg2;
- (long long)queryLocalIdWithClientMsgID:(id)arg1 userID:(id)arg2 userType:(id)arg3;
- (id)queryMessageWithClientMsgID:(id)arg1 userID:(id)arg2 userType:(id)arg3;
- (void)deleteMessageProxyTables:(CDUnknownBlockType)arg1;
- (void)deleteAllBCMessages:(CDUnknownBlockType)arg1;
- (void)deleteMessageProxyTablesWithSessionType:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (id)queryMessageByClientMsgIDs:(id)arg1 tableName:(id)arg2 userType:(id)arg3;
- (id)queryMessageByClientMsgIDs:(id)arg1 tableName:(id)arg2;
- (id)queryLastIDMsgWithUser:(id)arg1 userType:(id)arg2 limit:(long long)arg3;
- (id)queryAfterMessagesWithFirstLoacalId:(id)arg1 sessionId:(id)arg2 toType:(id)arg3 limit:(long long)arg4;
- (id)queryBeforeMessagesWithFirstLoacalId:(id)arg1 sessionId:(id)arg2 toType:(id)arg3 limit:(long long)arg4;
- (id)queryMessageWithTemplateCodes:(id)arg1 userID:(id)arg2 userType:(id)arg3;
- (id)queryMessageWithTemplateCode:(id)arg1 userID:(id)arg2 userType:(id)arg3;
- (id)queryMessageNotEqualToBizType:(id)arg1 bizMemo:(id)arg2 userID:(id)arg3 userType:(id)arg4;
- (void)switchMessageProxy:(id)arg1 toUser:(id)arg2 userType:(id)arg3;
- (id)tableNameForUser:(id)arg1 userType:(id)arg2;
- (id)chatPorxy;
- (void)checkUpdateTableState;
- (id)getSearchDictWithArguments:(id)arg1;
- (void)registerChatGlobeSearch;
- (void)registMessageChange;
- (id)init;

@end

