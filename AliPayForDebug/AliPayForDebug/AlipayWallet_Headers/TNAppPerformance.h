//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSString, NSTimer;

@interface TNAppPerformance : NSObject
{
    NSMutableDictionary *_resourseLoadDict;
    NSMutableDictionary *_pagePerfDict;
    NSMutableDictionary *_tinyAppStartTimestamp;
    NSMutableDictionary *_prepareTimeFinishTimestamp;
    NSMutableDictionary *_appLoadedTimestamp;
    NSMutableDictionary *_businessFinishTimestamp;
    NSMutableDictionary *_workerFrameworkLoadedCost;
    NSMutableDictionary *_prepareFinishDetail;
    _Bool _pageInfoHasSent;
    _Bool _isPreload;
    _Bool _isBasePreLoad;
    _Bool _downLoadFromWeb;
    NSString *_appId;
    double _tinyAppStartTime;
    double _tinyAppBundleStartLoadingTime;
    double _bizBundleStartInstallTime;
    double _bundleStartDownloadingTime;
    double _bundleFinishDownLoadingTime;
    double _bundleStartAnalyzeTime;
    double _bundleFinishAnalyzeTime;
    double _bizBundleFinishInstallTime;
    double _appxBundleStartLoadingTime;
    double _appxBundleFinishLoadingTime;
    double _bizBundleJSStartLoadingTime;
    double _bizBundleJSFinishLoadingTime;
    double _tinyAppBundleFinishLoadingTime;
    double _firstPageStartLoadingTime;
    double _firstPageRenderContentTime;
    double _firstPageDidAppearTime;
    double _firstPageFinishLoadingTime;
    double _pageNavigateStartTime;
    double _pageFinishLoadingTime;
    NSString *_toPageURL;
    NSString *_firstPageURL;
    NSString *_currentPageName;
    NSString *_bundleVersion;
    NSMutableDictionary *_pageLoadStatus;
    NSTimer *_pageInfoTimer;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSTimer *pageInfoTimer; // @synthesize pageInfoTimer=_pageInfoTimer;
@property(retain, nonatomic) NSMutableDictionary *pageLoadStatus; // @synthesize pageLoadStatus=_pageLoadStatus;
@property(nonatomic) _Bool downLoadFromWeb; // @synthesize downLoadFromWeb=_downLoadFromWeb;
@property(nonatomic) _Bool isBasePreLoad; // @synthesize isBasePreLoad=_isBasePreLoad;
@property(nonatomic) _Bool isPreload; // @synthesize isPreload=_isPreload;
@property(nonatomic) _Bool pageInfoHasSent; // @synthesize pageInfoHasSent=_pageInfoHasSent;
@property(retain, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(retain, nonatomic) NSString *currentPageName; // @synthesize currentPageName=_currentPageName;
@property(retain, nonatomic) NSString *firstPageURL; // @synthesize firstPageURL=_firstPageURL;
@property(retain, nonatomic) NSString *toPageURL; // @synthesize toPageURL=_toPageURL;
@property(nonatomic) double pageFinishLoadingTime; // @synthesize pageFinishLoadingTime=_pageFinishLoadingTime;
@property(nonatomic) double pageNavigateStartTime; // @synthesize pageNavigateStartTime=_pageNavigateStartTime;
@property(nonatomic) double firstPageFinishLoadingTime; // @synthesize firstPageFinishLoadingTime=_firstPageFinishLoadingTime;
@property(nonatomic) double firstPageDidAppearTime; // @synthesize firstPageDidAppearTime=_firstPageDidAppearTime;
@property(nonatomic) double firstPageRenderContentTime; // @synthesize firstPageRenderContentTime=_firstPageRenderContentTime;
@property(nonatomic) double firstPageStartLoadingTime; // @synthesize firstPageStartLoadingTime=_firstPageStartLoadingTime;
@property(nonatomic) double tinyAppBundleFinishLoadingTime; // @synthesize tinyAppBundleFinishLoadingTime=_tinyAppBundleFinishLoadingTime;
@property(nonatomic) double bizBundleJSFinishLoadingTime; // @synthesize bizBundleJSFinishLoadingTime=_bizBundleJSFinishLoadingTime;
@property(nonatomic) double bizBundleJSStartLoadingTime; // @synthesize bizBundleJSStartLoadingTime=_bizBundleJSStartLoadingTime;
@property(nonatomic) double appxBundleFinishLoadingTime; // @synthesize appxBundleFinishLoadingTime=_appxBundleFinishLoadingTime;
@property(nonatomic) double appxBundleStartLoadingTime; // @synthesize appxBundleStartLoadingTime=_appxBundleStartLoadingTime;
@property(nonatomic) double bizBundleFinishInstallTime; // @synthesize bizBundleFinishInstallTime=_bizBundleFinishInstallTime;
@property(nonatomic) double bundleFinishAnalyzeTime; // @synthesize bundleFinishAnalyzeTime=_bundleFinishAnalyzeTime;
@property(nonatomic) double bundleStartAnalyzeTime; // @synthesize bundleStartAnalyzeTime=_bundleStartAnalyzeTime;
@property(nonatomic) double bundleFinishDownLoadingTime; // @synthesize bundleFinishDownLoadingTime=_bundleFinishDownLoadingTime;
@property(nonatomic) double bundleStartDownloadingTime; // @synthesize bundleStartDownloadingTime=_bundleStartDownloadingTime;
@property(nonatomic) double bizBundleStartInstallTime; // @synthesize bizBundleStartInstallTime=_bizBundleStartInstallTime;
@property(nonatomic) double tinyAppBundleStartLoadingTime; // @synthesize tinyAppBundleStartLoadingTime=_tinyAppBundleStartLoadingTime;
@property(nonatomic) double tinyAppStartTime; // @synthesize tinyAppStartTime=_tinyAppStartTime;
@property(retain, nonatomic) NSString *appId; // @synthesize appId=_appId;
- (void).cxx_destruct;
- (void)stopTinyAppPerfFPSLagMonitor;
- (void)startTinyAppPerfFPSLagMonitor;
- (void)sendPageChangeInfo;
- (void)sendAppLaunchData;
- (void)sendPagePerformanceInfo:(id)arg1;
- (void)setFirstPagePath:(id)arg1;
- (void)startNavigateTo:(id)arg1 toPage:(id)arg2;
- (void)tinyAppQuit;
- (void)resourceLoadComplete:(id)arg1 withResourceName:(id)arg2;
- (id)resourceStartLoad:(id)arg1 withResourceName:(id)arg2;
- (void)notifyPageHasLeft;
- (void)pageFinishLoading;
- (void)pageDidAppear;
- (void)pageRenderContent;
- (void)pageStartLoading:(id)arg1;
- (void)tinyAppBundleFinishLoad;
- (void)bizBundleJSFinishLoading;
- (void)bizBundleJSStartLoading:(id)arg1;
- (void)appxBundleFinishLoading;
- (void)appxBundleStartLoading;
- (void)bizBundleFinishInstall;
- (void)bundleFinishAnalyze:(id)arg1;
- (void)bundleStartAnalyze:(id)arg1;
- (void)bundleFinishDownload;
- (void)bundleStartDownload;
- (void)needDownload;
- (void)bundleStartInstall;
- (void)tinyAppBundleStartLoad;
- (void)tinyAppStart:(id)arg1;
- (void)hasBasePreload;
- (void)hasPreLoad;
- (void)resetContext;
- (id)init;

@end

