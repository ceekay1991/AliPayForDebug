//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AMMAudioRecordDelegate-Protocol.h"

@class AMMAudioPlayer, AMMAudioRecord, APMAudioRecordCallback, APMTaskScheduler, NSDate, NSMutableDictionary, NSOperationQueue, NSString, NetworkSetting, VoiceCache2, VoiceTask;
@protocol OS_dispatch_queue;

@interface APVoiceManager : NSObject <AMMAudioRecordDelegate>
{
    _Bool _enableUploadWhileRecord;
    _Bool _cancelRecordByUser;
    _Bool _audioSilkLocalIdGeneratedYet;
    _Bool _stopByUser;
    _Bool _oldScreenOnStatus;
    AMMAudioRecord *_audioRecorder;
    AMMAudioPlayer *_audioPlayer;
    CDUnknownBlockType _processHandler;
    APMAudioRecordCallback *_callback;
    NSString *_business;
    NSMutableDictionary *_localIdhandlerDic;
    NSMutableDictionary *_cloudIdhandlerDic;
    VoiceCache2 *_voiceCache;
    NSString *_recordTaskKey;
    NSOperationQueue *_downloadQueue;
    NSOperationQueue *_uploadQueue;
    VoiceTask *_audStreamUpLoadTaskRecord;
    NetworkSetting *_networkCloudSetting;
    NSMutableDictionary *_localIDRequestIDDict;
    double _timeout4Upload;
    double _timeout4Download;
    NSDate *_stopOrCancelRecordCalledTime;
    NSObject<OS_dispatch_queue> *_taskQueue;
    APMTaskScheduler *_uploadTaskScheduler;
    APMTaskScheduler *_downloadTaskScheduler;
    unsigned long long _memCacheCount;
    unsigned long long _diskCacheCount;
    unsigned long long _noCacheCount;
}

+ (id)getMessageWithLocalId:(id)arg1;
+ (unsigned long long)getListionMode;
+ (void)changeListionMode:(unsigned long long)arg1;
+ (void)requestMicrophonePermission:(CDUnknownBlockType)arg1;
+ (id)sharedManager;
@property(nonatomic) unsigned long long noCacheCount; // @synthesize noCacheCount=_noCacheCount;
@property(nonatomic) unsigned long long diskCacheCount; // @synthesize diskCacheCount=_diskCacheCount;
@property(nonatomic) unsigned long long memCacheCount; // @synthesize memCacheCount=_memCacheCount;
@property(retain, nonatomic) APMTaskScheduler *downloadTaskScheduler; // @synthesize downloadTaskScheduler=_downloadTaskScheduler;
@property(retain, nonatomic) APMTaskScheduler *uploadTaskScheduler; // @synthesize uploadTaskScheduler=_uploadTaskScheduler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(nonatomic) _Bool oldScreenOnStatus; // @synthesize oldScreenOnStatus=_oldScreenOnStatus;
@property(retain, nonatomic) NSDate *stopOrCancelRecordCalledTime; // @synthesize stopOrCancelRecordCalledTime=_stopOrCancelRecordCalledTime;
@property(nonatomic) double timeout4Download; // @synthesize timeout4Download=_timeout4Download;
@property(nonatomic) double timeout4Upload; // @synthesize timeout4Upload=_timeout4Upload;
@property(nonatomic, getter=isStopByUser) _Bool stopByUser; // @synthesize stopByUser=_stopByUser;
@property(retain, nonatomic) NSMutableDictionary *localIDRequestIDDict; // @synthesize localIDRequestIDDict=_localIDRequestIDDict;
@property(nonatomic, getter=isAudioSilkLocalIdGeneratedYet) _Bool audioSilkLocalIdGeneratedYet; // @synthesize audioSilkLocalIdGeneratedYet=_audioSilkLocalIdGeneratedYet;
@property(nonatomic, getter=isCancelRecordByUser) _Bool cancelRecordByUser; // @synthesize cancelRecordByUser=_cancelRecordByUser;
@property(retain, nonatomic) NetworkSetting *networkCloudSetting; // @synthesize networkCloudSetting=_networkCloudSetting;
@property(nonatomic) _Bool enableUploadWhileRecord; // @synthesize enableUploadWhileRecord=_enableUploadWhileRecord;
@property(retain, nonatomic) VoiceTask *audStreamUpLoadTaskRecord; // @synthesize audStreamUpLoadTaskRecord=_audStreamUpLoadTaskRecord;
@property(retain, nonatomic) NSOperationQueue *uploadQueue; // @synthesize uploadQueue=_uploadQueue;
@property(retain, nonatomic) NSOperationQueue *downloadQueue; // @synthesize downloadQueue=_downloadQueue;
@property(retain, nonatomic) NSString *recordTaskKey; // @synthesize recordTaskKey=_recordTaskKey;
@property(retain, nonatomic) VoiceCache2 *voiceCache; // @synthesize voiceCache=_voiceCache;
@property(retain, nonatomic) NSMutableDictionary *cloudIdhandlerDic; // @synthesize cloudIdhandlerDic=_cloudIdhandlerDic;
@property(retain, nonatomic) NSMutableDictionary *localIdhandlerDic; // @synthesize localIdhandlerDic=_localIdhandlerDic;
@property(retain, nonatomic) NSString *business; // @synthesize business=_business;
@property(readonly, nonatomic) APMAudioRecordCallback *callback; // @synthesize callback=_callback;
@property(readonly, copy, nonatomic) CDUnknownBlockType processHandler; // @synthesize processHandler=_processHandler;
@property(retain, nonatomic) AMMAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) AMMAudioRecord *audioRecorder; // @synthesize audioRecorder=_audioRecorder;
- (void).cxx_destruct;
- (_Bool)enableUploadWhileRecordingWithBusiness:(id)arg1;
- (_Bool)sendLastPacket2MassproxyWithLocalID:(id)arg1 timeout4Upload:(double)arg2 progress:(CDUnknownBlockType)arg3 uploadHandler:(CDUnknownBlockType)arg4;
- (void)cancelUploadingUsingMassproxy:(id)arg1;
- (void)sendLasPacketToEndUploadingWithRequestID:(id)arg1 taskRecord:(id)arg2 timeout4Upload:(double)arg3 needProcessCompeteBlock:(_Bool)arg4;
- (void)recordAudioDidInterupted;
- (void)recordAudioConvertData:(id)arg1 averageCostTime:(double)arg2 error:(id)arg3 time:(id)arg4;
- (void)recordFinishWithPCMData:(id)arg1 encodeData:(id)arg2 duration:(double)arg3 format:(struct AudioStreamBasicDescription)arg4 isKeepData:(_Bool)arg5 finishState:(unsigned long long)arg6;
- (void)clearCacheForIdentifier:(id)arg1;
- (id)cachePathWithIdentifier:(id)arg1;
- (id)getCacheVoiceForCloudId:(id)arg1;
- (void)doDownloadCompleteCallback:(id)arg1 status:(unsigned long long)arg2 cloudId:(id)arg3 error:(id)arg4 deleteFrom:(id)arg5;
- (void)doUploadCompleteCallback:(id)arg1 status:(unsigned long long)arg2 localId:(id)arg3 cloudId:(id)arg4 error:(id)arg5 deleteFrom:(id)arg6;
- (id)createProgressDictionary:(double)arg1 partialBytes:(long long)arg2 totalBytes:(long long)arg3;
- (void)checkCallbackTimecostWithStartTime:(id)arg1 endTime:(id)arg2;
- (_Bool)decodeSilk2Wave:(id)arg1 cloudID:(id)arg2 business:(id)arg3 expirationTime:(int)arg4 taskRecord:(id)arg5 useMassProxy:(_Bool)arg6;
- (void)resumeScreenOnStatus;
- (void)setScreenOnStatus;
- (_Bool)isPlaying;
- (_Bool)isRecording;
- (void)stopAudioPlay;
- (void)playAudioWithCloudId:(id)arg1 business:(id)arg2 resumeActive:(_Bool)arg3 downLoadHandler:(CDUnknownBlockType)arg4 playHandler:(CDUnknownBlockType)arg5;
- (void)playAudioWithCloudId:(id)arg1 business:(id)arg2 downLoadHandler:(CDUnknownBlockType)arg3 playHandler:(CDUnknownBlockType)arg4;
- (void)resumePlay;
- (double)pausePlay;
- (double)getCurrentPlayTime;
- (void)playAudioWithLocalId:(id)arg1 resumeActive:(_Bool)arg2 playHandler:(CDUnknownBlockType)arg3;
- (void)playAudioWithLocalId:(id)arg1 playHandler:(CDUnknownBlockType)arg2;
- (id)downLoadAudioInternalWithCloudId:(id)arg1 business:(id)arg2 bizType:(id)arg3 expirationTime:(int)arg4 useHttps:(_Bool)arg5 md5:(id)arg6 priority:(unsigned long long)arg7 downLoadHandler:(CDUnknownBlockType)arg8;
- (id)getAudio:(id)arg1 request:(id)arg2;
- (void)downLoadAudioWithCloudId:(id)arg1 business:(id)arg2 downLoadHandler:(CDUnknownBlockType)arg3;
- (void)cancelRecord;
- (void)realStop;
- (void)resumeRecord;
- (void)pauseRecord;
- (void)stopRecord;
- (void)uploadAudioWithLocalId:(id)arg1 request:(id)arg2;
- (void)uploadAudioWithLocalId:(id)arg1 business:(id)arg2 progress:(CDUnknownBlockType)arg3 uploadHandler:(CDUnknownBlockType)arg4;
- (void)startRecordWithRecordSetting:(id)arg1 business:(id)arg2 callback:(id)arg3;
- (void)startRecordWithRecordSetting:(id)arg1 business:(id)arg2 micPower:(CDUnknownBlockType)arg3 recordedTime:(CDUnknownBlockType)arg4 recordStartHandler:(CDUnknownBlockType)arg5 recordStopHandler:(CDUnknownBlockType)arg6 frameRecordedHandler:(CDUnknownBlockType)arg7;
- (void)startRecordWithMaxSec:(double)arg1 minSec:(double)arg2 resumeActive:(_Bool)arg3 thirdAudioPlaying:(_Bool)arg4 business:(id)arg5 micPower:(CDUnknownBlockType)arg6 recordedTime:(CDUnknownBlockType)arg7 recordStartHandler:(CDUnknownBlockType)arg8 recordStopHandler:(CDUnknownBlockType)arg9;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

