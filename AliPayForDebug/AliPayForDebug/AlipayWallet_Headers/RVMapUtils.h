//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface RVMapUtils : NSObject
{
}

+ (id)getCurrentDeviceModel;
+ (id)applyImage:(id)arg1 byAlpha:(double)arg2;
+ (id)rotateImage:(id)arg1 byDegrees:(double)arg2;
+ (id)scaleImage:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)hashForImage:(id)arg1 imageData:(id)arg2;
+ (id)downsampleImageWithData:(id)arg1 size:(struct CGSize)arg2;
+ (id)convertViewToImage:(id)arg1;
+ (id)transforColorStrToArgbWithColorStr:(id)arg1;
+ (id)getColorWithColorStr:(id)arg1;
+ (_Bool)inDisplayRanges:(id)arg1 scale:(double)arg2;
+ (_Bool)inDisplayRange:(id)arg1 scale:(double)arg2;
+ (id)appendImage:(id)arg1 text:(id)arg2 textAlignment:(long long)arg3 fontType:(id)arg4 color:(id)arg5 bgColor:(id)arg6;
+ (id)appendImage:(id)arg1 withText:(id)arg2 withColor:(id)arg3;
+ (id)getWayPointsWithThroughPoints:(id)arg1;
+ (_Bool)isEqualCoordinate:(struct CLLocationCoordinate2D)arg1 and:(struct CLLocationCoordinate2D)arg2;
+ (double)fixNewDirection:(double)arg1 basedOnOldDirection:(double)arg2;
+ (double)calculateCourseFromCoordinate:(struct CLLocationCoordinate2D)arg1 to:(struct CLLocationCoordinate2D)arg2;
+ (double)calculateCourseFromMapPoint:(struct MAMapPoint)arg1 to:(struct MAMapPoint)arg2;
+ (struct MAMapRect)minMapRectForAnnotations:(id)arg1;
+ (struct MAMapRect)minMapRectForMapPoints:(struct MAMapPoint *)arg1 count:(unsigned long long)arg2;
+ (id)polylineForBusLine:(id)arg1;
+ (id)polylineForCoordinateString:(id)arg1;
+ (struct CLLocationCoordinate2D *)coordinatesForString:(id)arg1 coordinateCount:(unsigned long long *)arg2 parseToken:(id)arg3;
+ (id)polylinesForPath:(id)arg1;
+ (struct CLLocationCoordinate2D)getCoordinateWithDictionary:(id)arg1;
+ (id)getPointsWithWKTString:(id)arg1;
+ (id)fallbackCalculteWithData:(id)arg1;
+ (id)calculateDistanceWithData:(id)arg1;
+ (id)getWktPointWithDictionary:(id)arg1;
+ (double)calculateLineDistance:(id)arg1 endPoint:(id)arg2;
+ (double)calculateDistance:(id)arg1;
+ (id)getPointOnline:(id)arg1 endPoint:(id)arg2 distance:(double)arg3;
+ (id)getPointOnline:(id)arg1 distance:(double)arg2;
+ (id)getPointsOnline:(id)arg1 distance:(double)arg2;

@end

