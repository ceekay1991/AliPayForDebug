//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RVRAppInterfaceDelegate-Protocol.h"
#import "RVRConfigManagerDelegate-Protocol.h"
#import "RVRLogManagerDelegate-Protocol.h"
#import "RVRMonitorDelegate-Protocol.h"
#import "RVRRequestCenterDelegate-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString, RVRRequestManager;
@protocol OS_dispatch_queue, RVRAppInterfaceDelegate, RVRAppPoolManagerProtocol, RVRConfigManagerDelegate, RVRDownloadManagerDelegate, RVRLogManagerDelegate, RVRMonitorDelegate, RVRPresetConfigDelegate, RVRRequestCenterDelegate, RVRRequestManagerDelegate, RVRSignVerifyDelegate, RVRZipArchiveManagerDelegate;

@interface RVRConfigCenter : NSObject <RVRAppInterfaceDelegate, RVRConfigManagerDelegate, RVRMonitorDelegate, RVRLogManagerDelegate, RVRRequestCenterDelegate>
{
    id <RVRRequestManagerDelegate> _requestManagerDelegate;
    id <RVRDownloadManagerDelegate> _downloadManagerDelegate;
    id <RVRZipArchiveManagerDelegate> _zipArchiveDelegate;
    id <RVRAppPoolManagerProtocol> _appPoolManagerDelegate;
    id <RVRPresetConfigDelegate> _presetConfigDelegate;
    id <RVRSignVerifyDelegate> _signVerifyDelegate;
    NSDictionary *_useBrowserCacheConfig;
    NSString *_currentLanguage;
    NSString *_presetAppPackagePath;
    NSString *_unzipRootPath;
    NSString *_downloadRootPath;
    NSString *_templateConfigRootPath;
    RVRRequestManager *_rvrRequestManager;
    NSMutableDictionary *_dicRequestManagers;
    NSObject<OS_dispatch_queue> *_queue;
    id <RVRLogManagerDelegate> _logManagerDelegate;
    id <RVRMonitorDelegate> _monitorDelegate;
    id <RVRRequestCenterDelegate> _requestCenterDelegate;
    id <RVRConfigManagerDelegate> _configManagerDelegate;
    id <RVRAppInterfaceDelegate> _appInterfaceDelegate;
}

+ (id)shared;
@property(nonatomic) __weak id <RVRAppInterfaceDelegate> appInterfaceDelegate; // @synthesize appInterfaceDelegate=_appInterfaceDelegate;
@property(nonatomic) __weak id <RVRConfigManagerDelegate> configManagerDelegate; // @synthesize configManagerDelegate=_configManagerDelegate;
@property(nonatomic) __weak id <RVRRequestCenterDelegate> requestCenterDelegate; // @synthesize requestCenterDelegate=_requestCenterDelegate;
@property(nonatomic) __weak id <RVRMonitorDelegate> monitorDelegate; // @synthesize monitorDelegate=_monitorDelegate;
@property(nonatomic) __weak id <RVRLogManagerDelegate> logManagerDelegate; // @synthesize logManagerDelegate=_logManagerDelegate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSMutableDictionary *dicRequestManagers; // @synthesize dicRequestManagers=_dicRequestManagers;
@property(retain, nonatomic) RVRRequestManager *rvrRequestManager; // @synthesize rvrRequestManager=_rvrRequestManager;
@property(copy, nonatomic) NSString *templateConfigRootPath; // @synthesize templateConfigRootPath=_templateConfigRootPath;
@property(copy, nonatomic) NSString *downloadRootPath; // @synthesize downloadRootPath=_downloadRootPath;
@property(copy, nonatomic) NSString *unzipRootPath; // @synthesize unzipRootPath=_unzipRootPath;
@property(copy, nonatomic) NSString *presetAppPackagePath; // @synthesize presetAppPackagePath=_presetAppPackagePath;
@property(retain, nonatomic) NSString *currentLanguage; // @synthesize currentLanguage=_currentLanguage;
@property(retain, nonatomic) NSDictionary *useBrowserCacheConfig; // @synthesize useBrowserCacheConfig=_useBrowserCacheConfig;
@property(nonatomic) __weak id <RVRSignVerifyDelegate> signVerifyDelegate; // @synthesize signVerifyDelegate=_signVerifyDelegate;
@property(nonatomic) __weak id <RVRPresetConfigDelegate> presetConfigDelegate; // @synthesize presetConfigDelegate=_presetConfigDelegate;
@property(nonatomic) __weak id <RVRAppPoolManagerProtocol> appPoolManagerDelegate; // @synthesize appPoolManagerDelegate=_appPoolManagerDelegate;
@property(nonatomic) __weak id <RVRZipArchiveManagerDelegate> zipArchiveDelegate; // @synthesize zipArchiveDelegate=_zipArchiveDelegate;
@property(nonatomic) __weak id <RVRDownloadManagerDelegate> downloadManagerDelegate; // @synthesize downloadManagerDelegate=_downloadManagerDelegate;
@property(nonatomic) __weak id <RVRRequestManagerDelegate> requestManagerDelegate; // @synthesize requestManagerDelegate=_requestManagerDelegate;
- (void).cxx_destruct;
- (void)log:(id)arg1;
- (void)logWithLogId:(id)arg1 params:(id)arg2 targetApp:(id)arg3;
- (void)logWithLogId:(id)arg1 params:(id)arg2 targetPage:(id)arg3;
- (void)logWithLogId:(id)arg1 params:(id)arg2;
- (double)preferConfigWaitTime;
- (id)appxngAppId;
- (_Bool)enableUseAppxNG;
- (_Bool)enableUseAppxHtml;
- (_Bool)enableTemplateApp;
- (void)updateConfig:(id)arg1;
- (id)filteredCommonApplist;
- (id)signPublicKey;
- (_Bool)cacheReqTime;
- (id)tinyAppPublicURL;
- (id)resManifestSwitchers;
- (_Bool)shouldWKWebViewForceFreshResponse;
- (_Bool)shouldUseConditionalResponse;
- (_Bool)shouldLogResponse;
- (double)updateReqRate;
- (double)limitReqRate;
- (double)resMainDocInvalidTime;
- (_Bool)callbackInHighPriorityAfterUnzip;
- (id)commonAppList;
- (_Bool)enableFixHexValue;
- (_Bool)enableSyncUnzipPresetAmr;
- (id)presetAmrApps;
- (id)sceneForApp:(id)arg1;
- (id)findApp:(id)arg1 version:(id)arg2;
- (_Bool)enableStableReq;
- (_Bool)isNeed2VerifyApp;
- (_Bool)enableCommonResourceDegrade:(id)arg1;
- (_Bool)isResApp:(id)arg1;
- (_Bool)enableLoadPkgResApps:(id *)arg1;
- (_Bool)enableLoadPubAppId:(id)arg1 contextApp:(id)arg2 version:(id *)arg3;
- (_Bool)supportNebulaApp:(id)arg1 version:(id)arg2 nebulaVersion:(id *)arg3;
- (_Bool)isNebulaApp:(id)arg1 nebulaVersion:(id *)arg2;
- (void)removeUnavailablelist:(id)arg1;
- (void)refreshFullDoseReqTimeWithLimited:(_Bool)arg1;
- (_Bool)fullDoseRequestExpired;
- (void)removeRequestManagerForKey:(id)arg1;
- (id)requestManagerForKey:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

