//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XMediaBaseFunctor.h"

@class NSString, XMediaAdaptiveRegulator, XMediaDetectResult, XMediaFaceFunctor, XNNWrapper;

@interface XMediaFacialExpressionFunctor : XMediaBaseFunctor
{
    _Bool _initialized;
    _Bool _adaptiveEnable;
    XMediaFaceFunctor *_faceFunctor;
    XNNWrapper *_smileClassify;
    double _smileDetectCostTime;
    double _smileClassifyCostTime;
    unsigned long long _rotate;
    XMediaDetectResult *_detectResult;
    unsigned long long _facialExpressionType;
    long long _faceDetType;
    NSString *_detectLabel;
    XMediaAdaptiveRegulator *_adaptiveRegulator;
}

+ (_Bool)isSupported;
@property(retain, nonatomic) XMediaAdaptiveRegulator *adaptiveRegulator; // @synthesize adaptiveRegulator=_adaptiveRegulator;
@property(nonatomic) _Bool adaptiveEnable; // @synthesize adaptiveEnable=_adaptiveEnable;
@property(retain, nonatomic) NSString *detectLabel; // @synthesize detectLabel=_detectLabel;
@property(nonatomic) long long faceDetType; // @synthesize faceDetType=_faceDetType;
@property(nonatomic) unsigned long long facialExpressionType; // @synthesize facialExpressionType=_facialExpressionType;
@property(retain, nonatomic) XMediaDetectResult *detectResult; // @synthesize detectResult=_detectResult;
@property(nonatomic) unsigned long long rotate; // @synthesize rotate=_rotate;
@property(nonatomic) double smileClassifyCostTime; // @synthesize smileClassifyCostTime=_smileClassifyCostTime;
@property(nonatomic) double smileDetectCostTime; // @synthesize smileDetectCostTime=_smileDetectCostTime;
@property(nonatomic) _Bool initialized; // @synthesize initialized=_initialized;
@property(retain, nonatomic) XNNWrapper *smileClassify; // @synthesize smileClassify=_smileClassify;
@property(retain, nonatomic) XMediaFaceFunctor *faceFunctor; // @synthesize faceFunctor=_faceFunctor;
- (void).cxx_destruct;
- (void)remoteLog;
- (float)facialExpressionScore:(id)arg1;
- (id)facialExpressionDetect:(struct __CVBuffer *)arg1 cameraOrientation:(long long)arg2 isFrontCamera:(_Bool)arg3 options:(id)arg4;
- (id)initWithBizId:(id)arg1 modelId:(id)arg2 modelPath:(id)arg3 facialExpressionType:(unsigned long long)arg4 options:(id)arg5;
- (void)dealloc;

@end

