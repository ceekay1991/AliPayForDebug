//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface GLESObjCCallback : NSObject
{
    // Error parsing type: ^{GLESVideoMixer=^^?{FilterFactory={map<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}d{weak_ptr<videocore::IOutput>=^{IOutput}^{__shared_weak_count}}{vector<std::__1::weak_ptr<videocore::ISource>, std::__1::allocator<std::__1::weak_ptr<videocore::ISource> > >=^{weak_ptr<videocore::ISource>}^{weak_ptr<videocore::ISource>}{__compressed_pair<std::__1::weak_ptr<videocore::ISource> *, std::__1::allocator<std::__1::weak_ptr<videocore::ISource> > >=^{weak_ptr<videocore::ISource>}}}{thread=^{_opaque_pthread_t}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}^{__CVPixelBufferPool}[2^{__CVBuffer}]^{__CVOpenGLESTextureCache}[2^{__CVBuffer}]^v^vII[2I]IIii{pair<int, int>=ii}{map<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >={__tree<std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::less<int>, true> >=Q}}}{map<unsigned long, glm::detail::tmat4x4<float>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, glm::detail::tmat4x4<float> > > >={__tree<std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, std::__1::less<unsigned long>, true> >=Q}}}{unordered_map<unsigned long, videocore::IVideoFilter *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, videocore::IVideoFilter *> > >={__hash_table<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<unsigned long, videocore::iOS::SourceBuffer, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, videocore::iOS::SourceBuffer> > >={__hash_table<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::equal_to<unsigned long>, true> >=f}}}{time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >={duration<long long, std::__1::ratio<1, 1000000000> >=q}}{time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >={duration<long long, std::__1::ratio<1, 1000000000> >=q}}{time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >={duration<long long, std::__1::ratio<1, 1000000000> >=q}}{duration<long long, std::__1::ratio<1, 1000000> >=q}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}BB}, name: _mixer
}

-     // Error parsing type: v24@0:8^{GLESVideoMixer=^^?{FilterFactory={map<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<videocore::IFilter, std::__1::default_delete<videocore::IFilter> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}d{weak_ptr<videocore::IOutput>=^{IOutput}^{__shared_weak_count}}{vector<std::__1::weak_ptr<videocore::ISource>, std::__1::allocator<std::__1::weak_ptr<videocore::ISource> > >=^{weak_ptr<videocore::ISource>}^{weak_ptr<videocore::ISource>}{__compressed_pair<std::__1::weak_ptr<videocore::ISource> *, std::__1::allocator<std::__1::weak_ptr<videocore::ISource> > >=^{weak_ptr<videocore::ISource>}}}{thread=^{_opaque_pthread_t}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}^{__CVPixelBufferPool}[2^{__CVBuffer}]^{__CVOpenGLESTextureCache}[2^{__CVBuffer}]^v^vII[2I]IIii{pair<int, int>=ii}{map<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >={__tree<std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >, std::__1::less<int>, true> >=Q}}}{map<unsigned long, glm::detail::tmat4x4<float>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, glm::detail::tmat4x4<float> > > >={__tree<std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, glm::detail::tmat4x4<float> >, std::__1::less<unsigned long>, true> >=Q}}}{unordered_map<unsigned long, videocore::IVideoFilter *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, videocore::IVideoFilter *> > >={__hash_table<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::IVideoFilter *>, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<unsigned long, videocore::iOS::SourceBuffer, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, videocore::iOS::SourceBuffer> > >={__hash_table<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, videocore::iOS::SourceBuffer>, std::__1::equal_to<unsigned long>, true> >=f}}}{time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >={duration<long long, std::__1::ratio<1, 1000000000> >=q}}{time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >={duration<long long, std::__1::ratio<1, 1000000000> >=q}}{time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >={duration<long long, std::__1::ratio<1, 1000000000> >=q}}{duration<long long, std::__1::ratio<1, 1000000> >=q}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}BB}16, name: setMixer:
- (void)notification:(id)arg1;
- (void)dealloc;
- (id)init;

@end

