//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface CKPlatformLayoutUtil : NSObject
{
}

+     // Error parsing type: ^{CKLabelLayoutObject=^^?{atomic<int>=Ai}^{CKPlatformObject}{CKStyleSize=dd}{vector<CKLabelLayoutLink *, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}^^{CKLabelLayoutLink}{__compressed_pair<CKLabelLayoutLink **, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}}}{vector<CKLabelLayoutLink *, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}^^{CKLabelLayoutLink}{__compressed_pair<CKLabelLayoutLink **, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}}}}80@0:8@16^{CKTextParseResult=^^?{atomic<int>=Ai}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{vector<CSTextComponent, std::__1::allocator<CSTextComponent> >=^{CSTextComponent}^{CSTextComponent}{__compressed_pair<CSTextComponent *, std::__1::allocator<CSTextComponent> >=^{CSTextComponent}}}{vector<CSTextComponent, std::__1::allocator<CSTextComponent> >=^{CSTextComponent}^{CSTextComponent}{__compressed_pair<CSTextComponent *, std::__1::allocator<CSTextComponent> >=^{CSTextComponent}}}^{CKParseConfig}}24^{CSAttributeRichLabelObject=^^?^{CKAccessibilityElement}^{CKValue}^{CKValue}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}id{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}iiBiiB}32^{CKLabelRenderStyle=^^?id{CKStyleBackground={CKStyleGradientLinear=f{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{CKStyleBackgroundPosition=iffff}{CKStyleBackgroundSize=iffff}i{CKStyleBackgroundRepeat=BB}}{CKStyleBoxShadow={CKStyleSize=dd}diB}{CKStyleBorderRadius={CKStyleRadii={CKStyleLength=di}dd}{CKStyleRadii={CKStyleLength=di}dd}{CKStyleRadii={CKStyleLength=di}dd}{CKStyleRadii={CKStyleLength=di}dd}}{CKStyleBorder={CKStyleSingleBorder=di{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}}{CKStyleSingleBorder=di{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}}{CKStyleSingleBorder=di{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}}{CKStyleSingleBorder=di{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}}}{CKStyleEdgeInsets=dddd}dBBBBi{CKStyleFont=idi{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}}iiiid{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}i{CKStylePoint=dd}d}40{CGSize=dd}48{CGSize=dd}64, name: createRichLabelLayout:richText:attributes:css:maxSize:contentSize:
+ (void)parseInlineStyle:(map_c2514eff)arg1 attributeString:(id)arg2 range:(struct _NSRange)arg3 protocol:(int)arg4 css:(struct CKLabelRenderStyle *)arg5;
+ (void)parseInlineColor:(map_c2514eff)arg1 attributeString:(id)arg2 range:(struct _NSRange)arg3 protocol:(int)arg4;
+ (void)parseInlineFont:(map_c2514eff)arg1 attributeString:(id)arg2 range:(struct _NSRange)arg3 protocol:(int)arg4;
+ (id)parseInlineImg:(int)arg1 alignment:(int)arg2 width:(double)arg3 height:(double)arg4 font:(id)arg5 attributeString:(id)arg6 range:(struct _NSRange)arg7;
+     // Error parsing type: ^{CKLabelLayoutObject=^^?{atomic<int>=Ai}^{CKPlatformObject}{CKStyleSize=dd}{vector<CKLabelLayoutLink *, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}^^{CKLabelLayoutLink}{__compressed_pair<CKLabelLayoutLink **, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}}}{vector<CKLabelLayoutLink *, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}^^{CKLabelLayoutLink}{__compressed_pair<CKLabelLayoutLink **, std::__1::allocator<CKLabelLayoutLink *> >=^^{CKLabelLayoutLink}}}}48@0:8^{CKLayoutLabel=^^?{atomic<int>=Ai}{CKStyleRect={CKStylePoint=dd}{CKStyleSize=dd}}{CKStyleRect={CKStylePoint=dd}{CKStyleSize=dd}}BBBBBBs{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}^{YGNode}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}^{map<ACKString, ACKString, std::__1::less<ACKString>, std::__1::allocator<std::__1::pair<const ACKString, ACKString> > >}^{CKValue}^{CKRenderStyle}^{CKRenderStyle}^{map<ACKString, ACKString, std::__1::less<ACKString>, std::__1::allocator<std::__1::pair<const ACKString, ACKString> > >}^{CSAttributeObject}^{map<ACKString, ACKString, std::__1::less<ACKString>, std::__1::allocator<std::__1::pair<const ACKString, ACKString> > >}{CKStylePoint=dd}{CKStyleRect={CKStylePoint=dd}{CKStyleSize=dd}}{CKStyleSize=dd}i{CKStyleEdgeInsets=dddd}{vector<CKLayoutNode *, std::__1::allocator<CKLayoutNode *> >=^^{CKLayoutNode}^^{CKLayoutNode}{__compressed_pair<CKLayoutNode **, std::__1::allocator<CKLayoutNode *> >=^^{CKLayoutNode}}}^{CKLayoutNode}^{CKTextLayoutObject}B}16{CGSize=dd}24B40B44, name: createLabelLayout:maxSize:exactlyWidth:exactlyHeight:
+ (struct CGSize)sizeOfWidgetView:(id)arg1 viewData:(id)arg2 attributes:(id)arg3 css:(id)arg4 superFrame:(struct CGRect)arg5;
+ (id)getColorMap:(map_c2514eff)arg1;
+ (id)getFontMap:(map_c2514eff)arg1 font:(id)arg2;
+ (id)getAutoLinkMap:(map_c2514eff)arg1;
+ (id)getHrefMap:(map_c2514eff)arg1;

@end

