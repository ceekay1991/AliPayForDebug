//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AFWStockDetailBaseCell.h"

#import "AFCGestureDelegate-Protocol.h"
#import "CSGTrendViewDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"

@class AFCBaseChartView, AFCGestureUtil, NSString, NSTimer, SDChartHeadTipView, SDKLineIndicatorView, SDSwitch, SGFuquanTabView, UIView;

@interface SDStockKLineBaseCell : AFWStockDetailBaseCell <UIActionSheetDelegate, CSGTrendViewDelegate, AFCGestureDelegate>
{
    _Bool _fuquanShowed;
    _Bool _isBackLoadingData;
    AFCBaseChartView *_kLineTrendView;
    AFCGestureUtil *_gestureManager;
    UIView *_graphicsBgView;
    SGFuquanTabView *_fuquanTabView;
    SDChartHeadTipView *_headTipView;
    SDKLineIndicatorView *_indicatorView;
    UIView *_indicatorLoadingView;
    NSTimer *_timer;
    SDSwitch *_signalSwitch;
}

@property(retain, nonatomic) SDSwitch *signalSwitch; // @synthesize signalSwitch=_signalSwitch;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) UIView *indicatorLoadingView; // @synthesize indicatorLoadingView=_indicatorLoadingView;
@property(nonatomic) _Bool isBackLoadingData; // @synthesize isBackLoadingData=_isBackLoadingData;
@property(retain, nonatomic) SDKLineIndicatorView *indicatorView; // @synthesize indicatorView=_indicatorView;
@property(retain, nonatomic) SDChartHeadTipView *headTipView; // @synthesize headTipView=_headTipView;
@property(retain, nonatomic) SGFuquanTabView *fuquanTabView; // @synthesize fuquanTabView=_fuquanTabView;
@property(retain, nonatomic) UIView *graphicsBgView; // @synthesize graphicsBgView=_graphicsBgView;
@property(retain, nonatomic) AFCGestureUtil *gestureManager; // @synthesize gestureManager=_gestureManager;
@property(retain, nonatomic) AFCBaseChartView *kLineTrendView; // @synthesize kLineTrendView=_kLineTrendView;
- (void).cxx_destruct;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)refreshSingnalSwitchState;
- (void)refreshKlineSignalGraph:(id)arg1 hasNewData:(_Bool)arg2 recoverType:(long long)arg3;
- (void)refreshKlineGraph:(id)arg1 hasNewData:(_Bool)arg2 recoverType:(long long)arg3;
- (void)refreshIndicator:(id)arg1 recoverType:(long long)arg2;
- (void)refreshGraphic:(_Bool)arg1;
- (void)onSwitchTouched;
- (void)hideHeadTip:(id)arg1;
- (void)handlePinchingGesture:(id)arg1;
- (void)handlePanningGesture:(id)arg1;
- (void)handleLongPressGesture:(id)arg1;
- (unsigned long long)colorWithPrice:(double)arg1 lastClose:(double)arg2;
- (void)handleDoubleTapGesture:(id)arg1;
- (void)handleTapGesture:(id)arg1;
- (void)changeTabCellToTag:(id)arg1;
- (void)removeAllGestures;
- (void)addGestures;
- (_Bool)showRecoverdButton;
- (void)createSignalSwitch;
- (void)createGraphicsView;
- (void)queryIndicatorWithEndDate:(id)arg1 indicatorName:(id)arg2;
- (void)querykLineDataWithEndDate:(id)arg1 recoveredType:(long long)arg2;
- (void)showLoading;
- (void)queryKlineSignaDatalWithEndDate:(id)arg1;
- (void)queryKlineDataAndIndicatorWithEndDate:(id)arg1 indicatorName:(id)arg2;
- (void)requestHistoryDataWithEndTime:(CDStruct_7f4a1e90)arg1;
- (void)queryKLineAndIndicators;
- (void)queryData;
- (_Bool)isMinuteKLine;
- (id)currentKLineType;
- (void)cellExpoFrame:(struct CGRect)arg1;
- (_Bool)isShowEmpty;
- (void)cellWillDisplay;
- (void)viewDidDisappear;
- (void)cellEndDisplay;
- (void)viewDidAppear;
- (void)cellDidLoad;
- (id)kTagFrom:(id)arg1;
- (void)viewDidLoad;
- (void)viewFirstLoadInTab;
- (void)dealloc;
- (id)currentSignalDataModel;
@property(nonatomic) _Bool signalSwitchState;
- (_Bool)isRequestSignal;
- (id)kLinelogTag;
- (id)tab_name;
- (_Bool)isDefaultStyle;
- (_Bool)indicatorIsVol:(id)arg1;
- (_Bool)hasDataWithRecoverType:(long long)arg1;
- (id)kLineParam;
- (void)setCurrentIndicator:(id)arg1;
- (id)currentIndicator;
- (void)setCurrentRecoveredType:(long long)arg1;
- (long long)currentRecoveredType;
- (id)stockContext;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

