//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "AMapSearchDelegate-Protocol.h"
#import "APMapViewProtocol-Protocol.h"
#import "MAMapViewDelegate-Protocol.h"
#import "ZebraDataSource-Protocol.h"

@class AMapGeoPoint, AMapRoute, AMapSearchAPI, APMapClusterMarkerManager, APMapRoutePlanRequest, MAAnnotationView, MAMapView, MANaviRoute, MAPolyline, MAUserLocation, NSArray, NSCache, NSDate, NSMutableArray, NSMutableDictionary, NSString;
@protocol APMapViewDataSource, APMapViewDelegate;

@interface APMAMapView : UIView <MAMapViewDelegate, AMapSearchDelegate, ZebraDataSource, APMapViewProtocol>
{
    NSArray *_controls;
    NSArray *_incluePoints;
    struct UIEdgeInsets _includePadding;
    _Bool _includePointsAnimation;
    _Bool _isAnimating;
    double _cameraDegree;
    struct CLLocationCoordinate2D _centerCoordinate;
    CDUnknownBlockType _tappedBlock;
    CDUnknownBlockType _controlTappedBlock;
    CDUnknownBlockType _markerTappedBlock;
    CDUnknownBlockType _calloutTappedBlock;
    CDUnknownBlockType _regionChangedBlock;
    CDUnknownBlockType _translateMarkerEndBlock;
    CDUnknownBlockType _poiTappedBlock;
    MAAnnotationView *_userLocationAnnotationView;
    double _zoomLevel;
    NSDate *_userStartLocationTime;
    NSDate *_createMapStartTime;
    NSString *_customMapStyleDataMD5Str;
    NSString *_customWorldMapStylePathMD5Str;
    NSString *_textureResourcePathMD5Str;
    NSMutableArray *_rangeDisplayAnnos;
    NSMutableArray *_rangeDisplayPolygons;
    _Bool _hasReportAbroad;
    _Bool _enableDSLCache;
    _Bool _degradeClusterChange;
    _Bool _enableCluster;
    _Bool _fixPolyline;
    MAUserLocation *_userLocation;
    NSString *_appId;
    MAPolyline *_currentPolyline;
    NSMutableDictionary *_markerAnimateDic;
    NSMutableDictionary *_polylineAnimateDic;
    NSCache *_iconCache;
    NSMutableDictionary *_annoDic;
    NSMutableDictionary *_canShowOnTapAnnoDic;
    long long _zebraImageCacheMaxNum;
    APMapClusterMarkerManager *_clusterMarkerMgr;
    id <APMapViewDelegate> _pDelegate;
    id <APMapViewDataSource> _pDataSource;
    AMapSearchAPI *_search;
    MAMapView *_mapView;
    APMapRoutePlanRequest *_routePlanRequest;
    CDUnknownBlockType _pathLineCallBack;
    long long _routeSearchType;
    AMapGeoPoint *_routeStartPoint;
    AMapGeoPoint *_routeEndPoint;
    MANaviRoute *_naviRoute;
    AMapRoute *_route;
    NSCache *_zebraImageCache;
    struct CLLocationCoordinate2D _mapCenter;
}

@property(nonatomic) _Bool fixPolyline; // @synthesize fixPolyline=_fixPolyline;
@property(nonatomic) _Bool enableCluster; // @synthesize enableCluster=_enableCluster;
@property(nonatomic) _Bool degradeClusterChange; // @synthesize degradeClusterChange=_degradeClusterChange;
@property(nonatomic) _Bool enableDSLCache; // @synthesize enableDSLCache=_enableDSLCache;
@property(retain, nonatomic) NSCache *zebraImageCache; // @synthesize zebraImageCache=_zebraImageCache;
@property(retain, nonatomic) AMapRoute *route; // @synthesize route=_route;
@property(retain, nonatomic) MANaviRoute *naviRoute; // @synthesize naviRoute=_naviRoute;
@property(retain, nonatomic) AMapGeoPoint *routeEndPoint; // @synthesize routeEndPoint=_routeEndPoint;
@property(retain, nonatomic) AMapGeoPoint *routeStartPoint; // @synthesize routeStartPoint=_routeStartPoint;
@property(nonatomic) long long routeSearchType; // @synthesize routeSearchType=_routeSearchType;
@property(copy, nonatomic) CDUnknownBlockType pathLineCallBack; // @synthesize pathLineCallBack=_pathLineCallBack;
@property(retain, nonatomic) APMapRoutePlanRequest *routePlanRequest; // @synthesize routePlanRequest=_routePlanRequest;
@property(retain, nonatomic) MAMapView *mapView; // @synthesize mapView=_mapView;
@property(retain, nonatomic) AMapSearchAPI *search; // @synthesize search=_search;
@property(nonatomic) __weak id <APMapViewDataSource> pDataSource; // @synthesize pDataSource=_pDataSource;
@property(nonatomic) __weak id <APMapViewDelegate> pDelegate; // @synthesize pDelegate=_pDelegate;
@property(retain, nonatomic) APMapClusterMarkerManager *clusterMarkerMgr; // @synthesize clusterMarkerMgr=_clusterMarkerMgr;
@property(nonatomic) long long zebraImageCacheMaxNum; // @synthesize zebraImageCacheMaxNum=_zebraImageCacheMaxNum;
@property(retain, nonatomic) NSMutableDictionary *canShowOnTapAnnoDic; // @synthesize canShowOnTapAnnoDic=_canShowOnTapAnnoDic;
@property(retain, nonatomic) NSMutableDictionary *annoDic; // @synthesize annoDic=_annoDic;
@property(retain, nonatomic) NSCache *iconCache; // @synthesize iconCache=_iconCache;
@property(retain, nonatomic) NSMutableDictionary *polylineAnimateDic; // @synthesize polylineAnimateDic=_polylineAnimateDic;
@property(retain, nonatomic) NSMutableDictionary *markerAnimateDic; // @synthesize markerAnimateDic=_markerAnimateDic;
@property(retain, nonatomic) MAPolyline *currentPolyline; // @synthesize currentPolyline=_currentPolyline;
@property(nonatomic) struct CLLocationCoordinate2D mapCenter; // @synthesize mapCenter=_mapCenter;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(retain, nonatomic) MAUserLocation *userLocation; // @synthesize userLocation=_userLocation;
- (void).cxx_destruct;
- (void)dealloc;
- (void)mapDidReceiveMemoryWarning:(id)arg1;
- (void)addRangeDisplayPolygon:(id)arg1;
- (void)clearRangeDisplayPolygons;
- (void)removeRangeDisplayAnno:(id)arg1;
- (void)addRangeDisplayAnno:(id)arg1;
- (id)markerViewConfig;
- (_Bool)isAnimatingPolyline:(id)arg1;
- (_Bool)isAnimatingMarker:(id)arg1;
- (void)hideCustomCalloutWithoutMarkerId:(id)arg1;
- (void)updateDisplayRangePolygons;
- (void)displayPolygonsWithScale:(double)arg1;
- (void)updateDisplayRangeMarkers;
- (void)displayAnnotationsWithScale:(double)arg1;
- (id)genarateMarkerImage4Type3WithData:(id)arg1;
- (id)genarateMarkerImage4Type1_2WithData:(id)arg1;
- (id)getAnnotationImageForMarker:(id)arg1;
- (id)findCommonMapPolylineWithId:(id)arg1;
- (id)findCommonAnnotationWithId:(id)arg1;
- (id)findCommonAnnotationWithIntId:(long long)arg1;
- (void)controlClicked:(id)arg1;
- (void)translateAnimateEnd:(id)arg1;
- (void)markerDidSelected:(id)arg1 latitude:(double)arg2 longitude:(double)arg3;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)setVisibleMapRectWithIncludePoints:(id)arg1 config:(id)arg2 animated:(_Bool)arg3;
- (void)zebraImageResourceOfUrl:(id)arg1 size:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;
- (void)zebraResourceOfUrl:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)zebraImageKeyWithParams:(id)arg1 layoutString:(id)arg2 src:(id)arg3;
- (void)handleDSLWithParams:(id)arg1 layoutString:(id)arg2 src:(id)arg3 needCache:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)handleDSLWithParams:(id)arg1 layoutString:(id)arg2 src:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setCustomWorldMapStyleWithPath:(id)arg1;
- (void)setCustomTextureResourcePath:(id)arg1;
- (void)setCustomMapStyleWithWebData:(id)arg1;
- (void)setCustomMapStyleWithId:(id)arg1;
- (double)metersPerPointForZoomLevel:(double)arg1;
- (void)updateClusterMarkers;
- (void)updateClusterTreeWithDatas:(id)arg1;
- (void)updateClusterTree;
- (void)setupClusterSetting:(id)arg1;
- (_Bool)setPolylineWithCoordinates:(struct CLLocationCoordinate2D *)arg1 count:(long long)arg2;
- (void)stopSmoothMovePolylineAnimate:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)showSmoothMovePolylineAnimate:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)stopSmoothMoveMarkerAnimate:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)showSmoothMoveMarkerAnimate:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)showTranslateMarker:(long long)arg1 markerData:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)showAnimateWithMarkerData:(long long)arg1;
- (void)setLimitRegion:(id)arg1;
@property(nonatomic) double cameraDegree;
- (void)setCameraDegree:(double)arg1 animated:(_Bool)arg2 duration:(double)arg3;
@property(nonatomic) double rotationDegree;
- (void)rotateCameraEnabled:(_Bool)arg1;
- (void)changeLogoPosition:(struct CGPoint)arg1;
- (void)showsLabels:(_Bool)arg1;
- (void)showsTraffic:(_Bool)arg1;
- (void)showsCompass:(_Bool)arg1;
- (void)showSatelliteMap:(_Bool)arg1;
- (void)showsScale:(_Bool)arg1;
- (void)gestureEnable:(_Bool)arg1;
- (struct MAMapRect)visibleMapRect;
- (id)getVisibleRegion;
- (double)getMapZoomLevel;
- (struct CLLocationCoordinate2D)getCenterLocation;
- (void)moveToLocation;
- (_Bool)isEmptyLocaiton:(struct CLLocationCoordinate2D)arg1;
- (void)setIncludePoints:(id)arg1 config:(id)arg2;
- (void)setIncluePoints:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType translateMarkerEndBlock;
@property(copy, nonatomic) CDUnknownBlockType regionChangedBlock;
@property(copy, nonatomic) CDUnknownBlockType poiTappedBlock;
@property(copy, nonatomic) CDUnknownBlockType calloutTappedBlock;
@property(copy, nonatomic) CDUnknownBlockType markerTappedBlock;
@property(copy, nonatomic) CDUnknownBlockType controlTappedBlock;
@property(copy, nonatomic) CDUnknownBlockType tappedBlock;
@property(nonatomic) _Bool includePointsAnimation;
@property(nonatomic) struct UIEdgeInsets includePadding;
- (id)viewForAnnotation:(id)arg1;
- (void)setControls:(id)arg1;
- (void)setPolygons:(id)arg1;
- (void)addPolylines:(id)arg1;
- (void)setPolylines:(id)arg1;
- (void)addCircles:(id)arg1;
- (void)removeGroundOverlays;
- (void)removeTileOverlays;
- (void)addGroundOverLay:(id)arg1;
- (void)addTileOverLay:(id)arg1;
- (void)addOverlay:(id)arg1 level:(long long)arg2;
- (void)removeRouteAnntations;
- (void)removeAPMapAnnotations;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)hiddenAnnotations:(id)arg1;
- (void)hiddenAnnotation:(id)arg1;
- (void)showAnnotations:(id)arg1;
- (void)showAnnotation:(id)arg1;
- (id)annotations;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
@property(nonatomic) _Bool allowsAnnotationViewSorting;
@property(nonatomic) _Bool showsUserLocation;
@property(nonatomic) struct CLLocationCoordinate2D centerCoordinate;
@property(readonly, nonatomic) _Bool isSupportOversea;
@property(readonly, nonatomic) NSString *sdkName;
@property(readonly, nonatomic) NSString *sdkVersion;
@property(nonatomic) double zoomLevel;
@property(nonatomic) __weak id <APMapViewDelegate> delegate;
@property(nonatomic) __weak id <APMapViewDataSource> dataSource;
- (void)mapView:(id)arg1 didTouchPois:(id)arg2;
- (void)mapView:(id)arg1 didDeselectAnnotationView:(id)arg2;
- (void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2;
- (void)mapView:(id)arg1 didSingleTappedAtCoordinate:(struct CLLocationCoordinate2D)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 didAnnotationViewCalloutTapped:(id)arg2;
- (void)mapViewWillStartLocatingUser:(id)arg1;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2 updatingLocation:(_Bool)arg3;
- (void)resetZoomLevel;
- (void)resetCoorAndZoomLevel;
- (void)mapInitComplete:(id)arg1;
- (id)mapView:(id)arg1 rendererForOverlay:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)createMapViewWithFrame:(struct CGRect)arg1;
- (void)setupParams;
- (id)initWithFrame:(struct CGRect)arg1 longitude:(double)arg2 latitude:(double)arg3 appId:(id)arg4;
- (void)presentCurrentWalkLine;
- (void)presentCurrentRideLine;
- (void)presentCurrentDriveLineWithWayPoints:(id)arg1;
- (void)presentCurrentBusLine;
- (void)addAnnotationsWithWayPoints:(id)arg1;
- (void)addDefaultAnnotations;
- (long long)getRouteSearchTypeWithStr:(id)arg1;
- (void)AMapSearchRequest:(id)arg1 didFailWithError:(id)arg2;
- (void)onRouteSearchDone:(id)arg1 response:(id)arg2;
- (void)clearRouteAnntations;
- (void)clearRouteLine;
- (void)routePlanWithRequest:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)updateAnnotationView:(id)arg1 annotation:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

