//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MASSStreamUnit.h"

@class ConnectTimer, FlowStatisticInfo, MASSChannelInstance, NSData, NSDictionary, NSMutableArray, NSMutableData, NSString, UploadResponseTimer;

@interface MASSDataBaseUpTask : MASSStreamUnit
{
    _Bool _partComplated;
    _Bool _needCrypto;
    NSString *_taskId;
    NSString *_fileName;
    NSString *_fileMd5;
    unsigned long long _fileWholeSize;
    unsigned long long _partFileStart;
    unsigned long long _partFileStop;
    NSData *_toSendData;
    NSMutableArray *_piceReqStarts;
    long long _taskConfirmedPiceTop;
    NSMutableData *_tcpSendData;
    NSMutableArray *_tcpReqStarts;
    unsigned long long _dataSended;
    NSMutableData *_tcpRspData;
    MASSChannelInstance *_netInstance;
    ConnectTimer *_connTimer;
    UploadResponseTimer *_rspTimer;
    NSString *_traceId;
    NSString *_serverAddress;
    NSDictionary *_extParams;
    long long _clearRetryCount;
    FlowStatisticInfo *_flowStatis;
}

@property(retain, nonatomic) FlowStatisticInfo *flowStatis; // @synthesize flowStatis=_flowStatis;
@property(nonatomic) long long clearRetryCount; // @synthesize clearRetryCount=_clearRetryCount;
@property(retain, nonatomic) NSDictionary *extParams; // @synthesize extParams=_extParams;
@property(nonatomic) _Bool needCrypto; // @synthesize needCrypto=_needCrypto;
@property(retain, nonatomic) NSString *serverAddress; // @synthesize serverAddress=_serverAddress;
@property(retain, nonatomic) NSString *traceId; // @synthesize traceId=_traceId;
@property(nonatomic) _Bool partComplated; // @synthesize partComplated=_partComplated;
@property(retain, nonatomic) UploadResponseTimer *rspTimer; // @synthesize rspTimer=_rspTimer;
@property(retain, nonatomic) ConnectTimer *connTimer; // @synthesize connTimer=_connTimer;
@property(retain, nonatomic) MASSChannelInstance *netInstance; // @synthesize netInstance=_netInstance;
@property(retain, nonatomic) NSMutableData *tcpRspData; // @synthesize tcpRspData=_tcpRspData;
@property(nonatomic) unsigned long long dataSended; // @synthesize dataSended=_dataSended;
@property(retain, nonatomic) NSMutableArray *tcpReqStarts; // @synthesize tcpReqStarts=_tcpReqStarts;
@property(retain, nonatomic) NSMutableData *tcpSendData; // @synthesize tcpSendData=_tcpSendData;
@property(nonatomic) long long taskConfirmedPiceTop; // @synthesize taskConfirmedPiceTop=_taskConfirmedPiceTop;
@property(retain, nonatomic) NSMutableArray *piceReqStarts; // @synthesize piceReqStarts=_piceReqStarts;
@property(retain, nonatomic) NSData *toSendData; // @synthesize toSendData=_toSendData;
@property(nonatomic) unsigned long long partFileStop; // @synthesize partFileStop=_partFileStop;
@property(nonatomic) unsigned long long partFileStart; // @synthesize partFileStart=_partFileStart;
@property(nonatomic) unsigned long long fileWholeSize; // @synthesize fileWholeSize=_fileWholeSize;
@property(retain, nonatomic) NSString *fileMd5; // @synthesize fileMd5=_fileMd5;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSString *taskId; // @synthesize taskId=_taskId;
- (void).cxx_destruct;
- (id)toString;
- (void)noticeUploadPiceProgress;
- (void)noticeUploadComplated:(id)arg1 fileId:(id)arg2 zooms:(id)arg3 jsonResult:(id)arg4;
- (long long)getPresentUploadedSize;
- (float)getPresentPercertage;
- (long long)getServerRcvedTopIndex:(id)arg1;
- (void)clearForNewRequest;
- (void)dealTcpRspData;
- (unsigned long long)fillHttpRequestDataStart:(unsigned long long)arg1 end:(unsigned long long)arg2;
- (void)onDataComming;
- (void)onCloseHappens;
- (void)onDataCanSending;
- (void)onConnectComplate;
- (void)startRequest;
- (void)makePieces;
- (void)dealloc;
- (id)initWithFileName:(id)arg1 taskId:(id)arg2 size:(unsigned long long)arg3 filemd5:(id)arg4 startPos:(unsigned long long)arg5 stopPos:(unsigned long long)arg6 content:(id)arg7 withTraceId:(id)arg8 onInstance:(id)arg9 needCrypto:(_Bool)arg10;

@end

