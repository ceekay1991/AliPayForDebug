//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class NSTimer, UIColor, UIControl, UIFont, UIImage, UIImageView, UILabel, UINotificationFeedbackGenerator, UIVisualEffectView, UIWindow, ZDocProgressAnimatedView, ZDocRadialGradientLayer;

@interface ZDocProgressHUD : UIView
{
    _Bool _isInitializing;
    _Bool _shouldTintImages;
    _Bool _hapticsEnabled;
    long long _defaultStyle;
    unsigned long long _defaultMaskType;
    unsigned long long _defaultAnimationType;
    UIView *_containerView;
    double _ringThickness;
    double _ringRadius;
    double _ringNoTextRadius;
    double _cornerRadius;
    UIFont *_font;
    UIColor *_backgroundColor;
    UIColor *_foregroundColor;
    UIColor *_backgroundLayerColor;
    UIImage *_infoImage;
    UIImage *_successImage;
    UIImage *_errorImage;
    UIView *_viewForExtension;
    double _graceTimeInterval;
    double _minimumDismissTimeInterval;
    double _maximumDismissTimeInterval;
    double _fadeInAnimationDuration;
    double _fadeOutAnimationDuration;
    double _maxSupportedWindowLevel;
    NSTimer *_graceTimer;
    NSTimer *_fadeOutTimer;
    UIControl *_controlView;
    UIView *_backgroundView;
    ZDocRadialGradientLayer *_backgroundRadialGradientLayer;
    UIVisualEffectView *_hudView;
    UILabel *_statusLabel;
    UIImageView *_imageView;
    UIView *_indefiniteAnimatedView;
    ZDocProgressAnimatedView *_ringView;
    ZDocProgressAnimatedView *_backgroundRingView;
    double _progress;
    unsigned long long _activityCount;
    UIWindow *_frontWindow;
    UINotificationFeedbackGenerator *_hapticGenerator;
    struct CGSize _minimumSize;
    struct CGSize _imageViewSize;
    struct UIOffset _offsetFromCenter;
    struct CGPoint _desiredCenter;
}

+ (double)displayDurationForString:(id)arg1;
+ (_Bool)iZDocisible;
+ (void)resetOffsetFromCenter;
+ (void)setOffsetFromCenter:(struct UIOffset)arg1;
+ (void)dismissWithDelay:(double)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)dismissWithDelay:(double)arg1;
+ (void)dismissWithCompletion:(CDUnknownBlockType)arg1;
+ (void)dismiss;
+ (void)popActivity;
+ (void)showImage:(id)arg1 status:(id)arg2 maskType:(unsigned long long)arg3;
+ (void)showImage:(id)arg1 status:(id)arg2;
+ (void)showErrorWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showErrorWithStatus:(id)arg1;
+ (void)showSuccessWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showSuccessWithStatus:(id)arg1;
+ (void)showInfoWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showInfoWithStatus:(id)arg1;
+ (void)showProgress:(float)arg1 status:(id)arg2 maskType:(unsigned long long)arg3;
+ (void)showProgress:(float)arg1 status:(id)arg2;
+ (void)showProgress:(float)arg1 maskType:(unsigned long long)arg2;
+ (void)showProgress:(float)arg1;
+ (void)showWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showWithStatus:(id)arg1;
+ (void)showWithMaskType:(unsigned long long)arg1;
+ (void)show;
+ (void)setHapticsEnabled:(_Bool)arg1;
+ (void)setMaxSupportedWindowLevel:(double)arg1;
+ (void)setFadeOutAnimationDuration:(double)arg1;
+ (void)setFadeInAnimationDuration:(double)arg1;
+ (void)setMaximumDismissTimeInterval:(double)arg1;
+ (void)setMinimumDismissTimeInterval:(double)arg1;
+ (void)setGraceTimeInterval:(double)arg1;
+ (void)setViewForExtension:(id)arg1;
+ (void)setErrorImage:(id)arg1;
+ (void)setSuccessImage:(id)arg1;
+ (void)setInfoImage:(id)arg1;
+ (void)setShouldTintImages:(_Bool)arg1;
+ (void)setImageViewSize:(struct CGSize)arg1;
+ (void)setBackgroundLayerColor:(id)arg1;
+ (void)setBackgroundColor:(id)arg1;
+ (void)setForegroundColor:(id)arg1;
+ (void)setFont:(id)arg1;
+ (void)setBorderWidth:(double)arg1;
+ (void)setBorderColor:(id)arg1;
+ (void)setCornerRadius:(double)arg1;
+ (void)setRingNoTextRadius:(double)arg1;
+ (void)setRingRadius:(double)arg1;
+ (void)setRingThickness:(double)arg1;
+ (void)setMinimumSize:(struct CGSize)arg1;
+ (void)setContainerView:(id)arg1;
+ (void)setDefaultAnimationType:(unsigned long long)arg1;
+ (void)setDefaultMaskType:(unsigned long long)arg1;
+ (void)setDefaultStyle:(long long)arg1;
+ (void)setStatus:(id)arg1;
+ (void)setDesiredCenter:(struct CGPoint)arg1;
+ (_Bool)isVisible;
+ (id)sharedView;
@property(retain, nonatomic) UINotificationFeedbackGenerator *hapticGenerator; // @synthesize hapticGenerator=_hapticGenerator;
@property(retain, nonatomic) UIWindow *frontWindow; // @synthesize frontWindow=_frontWindow;
@property(nonatomic) unsigned long long activityCount; // @synthesize activityCount=_activityCount;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain, nonatomic) ZDocProgressAnimatedView *backgroundRingView; // @synthesize backgroundRingView=_backgroundRingView;
@property(retain, nonatomic) ZDocProgressAnimatedView *ringView; // @synthesize ringView=_ringView;
@property(retain, nonatomic) UIView *indefiniteAnimatedView; // @synthesize indefiniteAnimatedView=_indefiniteAnimatedView;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UILabel *statusLabel; // @synthesize statusLabel=_statusLabel;
@property(retain, nonatomic) UIVisualEffectView *hudView; // @synthesize hudView=_hudView;
@property(retain, nonatomic) ZDocRadialGradientLayer *backgroundRadialGradientLayer; // @synthesize backgroundRadialGradientLayer=_backgroundRadialGradientLayer;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) UIControl *controlView; // @synthesize controlView=_controlView;
@property(retain, nonatomic) NSTimer *fadeOutTimer; // @synthesize fadeOutTimer=_fadeOutTimer;
@property(retain, nonatomic) NSTimer *graceTimer; // @synthesize graceTimer=_graceTimer;
@property(nonatomic) struct CGPoint desiredCenter; // @synthesize desiredCenter=_desiredCenter;
@property(nonatomic) _Bool hapticsEnabled; // @synthesize hapticsEnabled=_hapticsEnabled;
@property(nonatomic) double maxSupportedWindowLevel; // @synthesize maxSupportedWindowLevel=_maxSupportedWindowLevel;
@property(nonatomic) double fadeOutAnimationDuration; // @synthesize fadeOutAnimationDuration=_fadeOutAnimationDuration;
@property(nonatomic) double fadeInAnimationDuration; // @synthesize fadeInAnimationDuration=_fadeInAnimationDuration;
@property(nonatomic) struct UIOffset offsetFromCenter; // @synthesize offsetFromCenter=_offsetFromCenter;
@property(nonatomic) double maximumDismissTimeInterval; // @synthesize maximumDismissTimeInterval=_maximumDismissTimeInterval;
@property(nonatomic) double minimumDismissTimeInterval; // @synthesize minimumDismissTimeInterval=_minimumDismissTimeInterval;
@property(nonatomic) double graceTimeInterval; // @synthesize graceTimeInterval=_graceTimeInterval;
@property(retain, nonatomic) UIView *viewForExtension; // @synthesize viewForExtension=_viewForExtension;
@property(retain, nonatomic) UIImage *errorImage; // @synthesize errorImage=_errorImage;
@property(retain, nonatomic) UIImage *successImage; // @synthesize successImage=_successImage;
@property(retain, nonatomic) UIImage *infoImage; // @synthesize infoImage=_infoImage;
@property(nonatomic) _Bool shouldTintImages; // @synthesize shouldTintImages=_shouldTintImages;
@property(nonatomic) struct CGSize imageViewSize; // @synthesize imageViewSize=_imageViewSize;
@property(retain, nonatomic) UIColor *backgroundLayerColor; // @synthesize backgroundLayerColor=_backgroundLayerColor;
@property(retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double ringNoTextRadius; // @synthesize ringNoTextRadius=_ringNoTextRadius;
@property(nonatomic) double ringRadius; // @synthesize ringRadius=_ringRadius;
@property(nonatomic) double ringThickness; // @synthesize ringThickness=_ringThickness;
@property(nonatomic) struct CGSize minimumSize; // @synthesize minimumSize=_minimumSize;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(nonatomic) unsigned long long defaultAnimationType; // @synthesize defaultAnimationType=_defaultAnimationType;
@property(nonatomic) unsigned long long defaultMaskType; // @synthesize defaultMaskType=_defaultMaskType;
@property(nonatomic) long long defaultStyle; // @synthesize defaultStyle=_defaultStyle;
- (void).cxx_destruct;
- (void)dealloc;
- (void)fadeOutEffects;
- (void)fadeInEffects;
@property(readonly, nonatomic) double visibleKeyboardHeight;
- (id)backgroundColorForStyle;
- (id)foregroundColorForStyle;
- (void)cancelIndefiniteAnimatedViewAnimation;
- (void)cancelRingLayerAnimation;
- (void)dismissWithDelay:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismiss;
- (void)fadeIn:(id)arg1;
- (void)showImage:(id)arg1 status:(id)arg2 duration:(double)arg3;
- (void)showProgress:(float)arg1 status:(id)arg2;
- (void)controlViewDidReceiveTouchEvent:(id)arg1 forEvent:(id)arg2;
- (void)moveToPoint:(struct CGPoint)arg1 rotateAngle:(double)arg2;
- (void)positionHUD:(id)arg1;
- (id)notificationUserInfo;
- (void)registerNotifications;
- (void)setStatus:(id)arg1;
- (void)updateViewHierarchy;
- (void)updateMotionEffectForXMotionEffectType:(long long)arg1 yMotionEffectType:(long long)arg2;
- (void)updateMotionEffectForOrientation:(long long)arg1;
- (void)updateHUDFrame;
- (id)initWithFrame:(struct CGRect)arg1;

@end

