//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "APDAOProxyDelegate-Protocol.h"
#import "APSharedPreferencesRunMode-Protocol.h"

@class APDatabaseConnection, APDatabaseLock, APExistenceTable, APLRUMemoryCache, APReadConnectionManager, APSharedPreferencesMemoryPolicy, NSMutableArray, NSMutableSet, NSString, RavenPreferences;
@protocol APDAOHistoryManager, APDAOVersionManager, OS_dispatch_queue, OS_dispatch_semaphore;

@interface APSharedPreferences : NSObject <APDAOProxyDelegate, APSharedPreferencesRunMode>
{
    NSString *_refinedPath;
    NSString *_lockTag;
    APDatabaseLock *_dbLock;
    APDatabaseConnection *_dbConnection;
    double _lockTime;
    NSObject<OS_dispatch_queue> *_detachedDBQueue;
    APLRUMemoryCache *_cache;
    APExistenceTable *_deletedKeys;
    id <APDAOVersionManager> _versionManager;
    id <APDAOHistoryManager> _historyManager;
    _Bool _shouldReloadDatabase;
    _Bool _orphanPreferences;
    _Bool _asynchronousMode;
    _Bool _shouldRetryOnSQLiteFull;
    unsigned int _preferencesType;
    int _daoProxyReferenceCount;
    double _lastUsedTimestamp;
    _Bool _shouldReportConnectionEvent;
    NSMutableArray *_parallelConnections;
    int _parallelLockCount;
    _Bool _openEventDone;
    NSObject<OS_dispatch_semaphore> *_openEventSemaphore;
    _Bool _collectPreloadData;
    double _createTimestamp;
    NSMutableSet *_collectedPreloadKeys;
    unsigned long long _isBlackListNumber;
    NSMutableArray *_blackListArray;
    RavenPreferences *_raven;
    _Bool _isOpenReadParallel;
    APReadConnectionManager *_readConnectionManager;
    _Bool _isAsyncCheckingPoint;
    CDUnknownBlockType _setKeyblock;
    _Bool _isAPXLite;
    NSString *_path;
}

+ (void)setSqliteInsertionListener:(CDUnknownFunctionPointerType)arg1;
+ (void)setSqliteConnectionEventListener:(CDUnknownFunctionPointerType)arg1;
+ (void)initialize;
+ (void)clearCacheConnection;
+ (id)connectionForDatabasePath:(id)arg1;
+ (void)cacheConnection:(id)arg1 databasePath:(id)arg2;
@property(readonly, nonatomic) APDatabaseConnection *dbConnection; // @synthesize dbConnection=_dbConnection;
@property(readonly) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) RavenPreferences *raven; // @synthesize raven=_raven;
@property _Bool shouldReportConnnectionEvent; // @synthesize shouldReportConnnectionEvent=_shouldReportConnectionEvent;
@property double lastUsedTimestamp; // @synthesize lastUsedTimestamp=_lastUsedTimestamp;
@property int daoProxyReferenceCount; // @synthesize daoProxyReferenceCount=_daoProxyReferenceCount;
@property unsigned int preferencesType; // @synthesize preferencesType=_preferencesType;
@property _Bool asynchronousMode; // @synthesize asynchronousMode=_asynchronousMode;
@property _Bool orphanPreferences; // @synthesize orphanPreferences=_orphanPreferences;
- (void).cxx_destruct;
- (_Bool)saveJsonObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4 options:(unsigned int)arg5;
- (_Bool)saveJsonObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4;
- (_Bool)saveJsonObject:(id)arg1 forKey:(id)arg2 business:(id)arg3;
- (_Bool)archiveObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4 options:(unsigned int)arg5;
- (_Bool)archiveObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4;
- (_Bool)archiveObject:(id)arg1 forKey:(id)arg2 business:(id)arg3;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4 options:(unsigned int)arg5;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2 business:(id)arg3;
- (id)objectForKey:(id)arg1 business:(id)arg2 expectedClass:(Class)arg3 error:(id *)arg4;
- (id)parallelObjectForKey:(id)arg1 business:(id)arg2 extension:(struct APDataCrypt *)arg3 connectionLevel:(unsigned int)arg4;
- (id)objectForKey:(id)arg1 business:(id)arg2 extension:(struct APDataCrypt *)arg3 connectionLevel:(unsigned int)arg4;
- (id)objectForKey:(id)arg1 business:(id)arg2 extension:(struct APDataCrypt *)arg3;
- (id)objectForKey:(id)arg1 business:(id)arg2;
- (_Bool)setString:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4;
- (_Bool)setString:(id)arg1 forKey:(id)arg2 business:(id)arg3;
- (id)parallelStringForKey:(id)arg1 business:(id)arg2 extension:(struct APDataCrypt *)arg3 connectionLevel:(unsigned int)arg4;
- (id)stringForKey:(id)arg1 business:(id)arg2 extension:(struct APDataCrypt *)arg3 connectionLevel:(unsigned int)arg4;
- (id)stringForKey:(id)arg1 business:(id)arg2 extension:(struct APDataCrypt *)arg3;
- (id)stringForKey:(id)arg1 business:(id)arg2;
- (_Bool)setDouble:(double)arg1 forKey:(id)arg2 business:(id)arg3;
- (double)doubleForKey:(id)arg1 business:(id)arg2 defaultValue:(double)arg3 connectionLevel:(unsigned int)arg4;
- (double)doubleForKey:(id)arg1 business:(id)arg2 defaultValue:(double)arg3;
- (double)doubleForKey:(id)arg1 business:(id)arg2;
- (_Bool)setBool:(_Bool)arg1 forKey:(id)arg2 business:(id)arg3;
- (_Bool)boolForKey:(id)arg1 business:(id)arg2 defaultValue:(_Bool)arg3 connectionLevel:(unsigned int)arg4;
- (_Bool)boolForKey:(id)arg1 business:(id)arg2 defaultValue:(_Bool)arg3;
- (_Bool)boolForKey:(id)arg1 business:(id)arg2;
- (_Bool)setLongLong:(long long)arg1 forKey:(id)arg2 business:(id)arg3;
- (long long)longLongForKey:(id)arg1 business:(id)arg2 defaultValue:(long long)arg3 connectionLevel:(unsigned int)arg4;
- (long long)longLongForKey:(id)arg1 business:(id)arg2 defaultValue:(long long)arg3;
- (long long)longLongForKey:(id)arg1 business:(id)arg2;
- (_Bool)setInteger:(long long)arg1 forKey:(id)arg2 business:(id)arg3;
- (long long)integerForKey:(id)arg1 business:(id)arg2 defaultValue:(long long)arg3 connectionLevel:(unsigned int)arg4;
- (long long)integerForKey:(id)arg1 business:(id)arg2 defaultValue:(long long)arg3;
- (long long)integerForKey:(id)arg1 business:(id)arg2;
- (void)removePurgeableItems;
- (unsigned long long)approximateSizeOfBusiness:(id)arg1;
- (id)allKeysOfBusiness:(id)arg1;
- (id)allKeys;
- (_Bool)itemExistsForKey:(id)arg1 business:(id)arg2;
- (_Bool)removeItemsLike:(id)arg1 business:(id)arg2;
- (_Bool)removeItemForKey:(id)arg1 business:(id)arg2;
- (_Bool)removeDatabaseFile;
- (void)reset;
- (_Bool)insertObject:(id)arg1 forKey:(id)arg2 business:(id)arg3 extension:(struct APDataCrypt *)arg4 options:(unsigned int)arg5 dataType:(unsigned int)arg6 block:(CDUnknownBlockType)arg7;
- (id)fetchDecryptData:(struct FMResultSet *)arg1 extension:(struct APDataCrypt *)arg2;
- (id)getParallelReadConnection:(unsigned int)arg1;
- (_Bool)isInCacheBlackList:(id)arg1;
- (void)finishCachePreloadData;
- (void)didReadCacheItemForKey:(id)arg1;
- (void)handleSQLiteError:(id)arg1;
- (_Bool)isInternalKey:(id)arg1;
- (void)cachePreloadDefaults;
- (void)createMasterTables;
- (void)dbFinalize;
- (void)_doCheckPointHookAsync;
- (void)doCheckPoint;
- (void)tryCheckPoint;
- (void)openDatabase;
- (void)configureCheckpoint;
- (void)configurePragmas;
- (void)configureAPXLitePragmas;
- (void)unregisterNotifications;
- (void)vacuumDatabase;
- (void)waitUntilDatabaseOpenEventDone;
- (void)backupAndResetDatabase:(id)arg1;
- (void)checkNSUserDefaultsData;
- (_Bool)repairDatabaseWithBackupDirectory:(id)arg1;
- (void)handleFatalError:(int)arg1 errorString:(id)arg2;
- (_Bool)isFatalError:(int)arg1 errorString:(id)arg2;
- (void)unregisterProxy;
- (void)registerProxy;
- (id)daoTransaction:(unsigned int)arg1;
- (id)historyManager;
- (id)versionManager;
- (void)reportInsertion:(id)arg1 rowId:(long long)arg2 tableName:(id)arg3;
- (void)prepareParallelConnection:(double)arg1;
- (void)releaseParallelDatabaseConnection:(id)arg1;
- (id)parallelDatabaseConnection;
- (id)__prepareParallelConnection:(double)arg1;
- (id)databaseConnection;
- (void)setTempStoreToFile;
- (_Bool)shouldRetryOnSQLiteFull;
- (_Bool)databaseLocked;
- (void)databaseConnectionUnlock;
- (void)databaseConnectionLock:(id)arg1;
- (_Bool)goodConnection;
- (void)didReceiveUserRenewNotification;
- (void)didReceiveHeartbeatNotification;
- (void)doCloseDatabase:(_Bool)arg1;
@property(readonly) APSharedPreferencesMemoryPolicy *memoryPolicy;
- (void)reportSqliteConnectionOpenEvent;
@property(readonly) struct sqlite3 *sqliteHandle;
- (_Bool)shouldCacheStatements;
- (void)dealloc;
- (void)endPreloadData;
- (void)startupEnd;
- (void)setBlackListFromConfig;
- (id)initWithPath:(id)arg1 customIdentifier:(id)arg2 setEncryptionkeyBlock:(CDUnknownBlockType)arg3;
- (id)initWithPath:(id)arg1 customIdentifier:(id)arg2;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

