//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "FileCache2.h"

@class APCacheCounter, APMMemoryCache, ImageCacheItemQuery, ImageCacheQuery, NSObject;
@protocol OS_dispatch_queue;

@interface ImageCache2 : FileCache2
{
    APCacheCounter *_counter;
    ImageCacheQuery *_query;
    ImageCacheItemQuery *_originalItemquery;
    ImageCacheItemQuery *_bigItemquery;
    ImageCacheItemQuery *_scaleItemquery;
    ImageCacheItemQuery *_cropItemquery;
    APMMemoryCache *_dbQueryLockCache;
    APMMemoryCache *_highPriorityMemoryCache;
    CDUnknownBlockType _highPriorityCheckBlock;
    NSObject<OS_dispatch_queue> *_updateAccessTimeQueue;
    NSObject<OS_dispatch_queue> *_mainTheadSynQueryCacheExeQueue;
    struct _opaque_pthread_mutex_t _addDbQueryLockCacheMutex;
}

+ (id)defaultCache;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *mainTheadSynQueryCacheExeQueue; // @synthesize mainTheadSynQueryCacheExeQueue=_mainTheadSynQueryCacheExeQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *updateAccessTimeQueue; // @synthesize updateAccessTimeQueue=_updateAccessTimeQueue;
@property(nonatomic) struct _opaque_pthread_mutex_t addDbQueryLockCacheMutex; // @synthesize addDbQueryLockCacheMutex=_addDbQueryLockCacheMutex;
@property(copy, nonatomic) CDUnknownBlockType highPriorityCheckBlock; // @synthesize highPriorityCheckBlock=_highPriorityCheckBlock;
@property(retain, nonatomic) APMMemoryCache *highPriorityMemoryCache; // @synthesize highPriorityMemoryCache=_highPriorityMemoryCache;
@property(retain, nonatomic) APMMemoryCache *dbQueryLockCache; // @synthesize dbQueryLockCache=_dbQueryLockCache;
@property(retain, nonatomic) ImageCacheItemQuery *cropItemquery; // @synthesize cropItemquery=_cropItemquery;
@property(retain, nonatomic) ImageCacheItemQuery *scaleItemquery; // @synthesize scaleItemquery=_scaleItemquery;
@property(retain, nonatomic) ImageCacheItemQuery *bigItemquery; // @synthesize bigItemquery=_bigItemquery;
@property(retain, nonatomic) ImageCacheItemQuery *originalItemquery; // @synthesize originalItemquery=_originalItemquery;
@property(retain, nonatomic) ImageCacheQuery *query; // @synthesize query=_query;
@property(retain, nonatomic) APCacheCounter *counter; // @synthesize counter=_counter;
- (void).cxx_destruct;
- (void)releaseLockForUUID:(id)arg1;
- (id)requestLockForUUID:(id)arg1;
- (_Bool)isGifImage:(id)arg1;
- (id)proceedImage:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)responseWithObject:(id)arg1 repsonseType:(unsigned long long)arg2;
- (id)objectFromDBForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)objectFromFileSystemForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)objectFromDiskForKeyInternal:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)objectFromDiskForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)objectFromMemoryForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)generatePathForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (unsigned long long)costWithObject:(id)arg1;
- (id)generateMemoryKeyFromKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)infoWithType:(unsigned long long)arg1 size:(struct CGSize)arg2 options:(id)arg3;
- (id)constructQuery;
- (void)removeAllObjects;
- (id)objectForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (id)objectPathForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (id)generatePathForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3;
- (id)objectForKey:(id)arg1 type:(unsigned long long)arg2 size:(struct CGSize)arg3 options:(id)arg4;
- (void)setObject:(id)arg1 forKey:(id)arg2 type:(unsigned long long)arg3 size:(struct CGSize)arg4 options:(id)arg5;
- (id)initWithName:(id)arg1;

@end

