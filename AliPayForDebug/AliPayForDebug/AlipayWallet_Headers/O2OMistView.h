//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "VZFNodeHostingView.h"

#import "VZFNodeProvider-Protocol.h"
#import "VZMistItem-Protocol.h"

@class JSContext, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, UIViewController, VZFNode, VZMistAppearMap, VZMistSelectorMap, VZMistTemplate, VZMistTemplateController, VZTExpressionContext;
@protocol O2OMistViewProtocol, VZFPageProtocol;

@interface O2OMistView : VZFNodeHostingView <VZFNodeProvider, VZMistItem>
{
    NSMutableArray *_stateUpdates;
    _Bool _useInitialState;
    _Bool _hasData;
    _Bool _cacheFirst;
    VZMistTemplateController *_tplController;
    NSDictionary *_data;
    VZTExpressionContext *_expressionContext;
    NSMutableDictionary *_customData;
    UIViewController *_viewController;
    NSString *_templateJson;
    NSDictionary *_state;
    id <O2OMistViewProtocol> _mistViewDelegate;
    NSString *_tplId;
    VZMistTemplate *_tpl;
    VZFNode *_node;
    NSString *_bundleName;
    NSDictionary *_templateJSONDict;
    struct NSDictionary *_templateInfos;
    NSString *_pageName;
}

+ (id)nodeForItem:(id)arg1 Store:(id)arg2 Context:(id)arg3;
@property(retain, nonatomic) NSString *pageName; // @synthesize pageName=_pageName;
@property(retain, nonatomic) NSDictionary *templateInfos; // @synthesize templateInfos=_templateInfos;
@property(nonatomic) _Bool cacheFirst; // @synthesize cacheFirst=_cacheFirst;
@property(copy, nonatomic) NSDictionary *templateJSONDict; // @synthesize templateJSONDict=_templateJSONDict;
@property(retain, nonatomic) NSString *bundleName; // @synthesize bundleName=_bundleName;
@property(nonatomic) _Bool hasData; // @synthesize hasData=_hasData;
@property(readonly, nonatomic) VZFNode *node; // @synthesize node=_node;
@property(retain, nonatomic) VZMistTemplate *tpl; // @synthesize tpl=_tpl;
@property(retain, nonatomic) NSString *tplId; // @synthesize tplId=_tplId;
@property(nonatomic) _Bool useInitialState; // @synthesize useInitialState=_useInitialState;
@property(nonatomic) __weak id <O2OMistViewProtocol> mistViewDelegate; // @synthesize mistViewDelegate=_mistViewDelegate;
@property(readonly, nonatomic) NSDictionary *state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *templateJson; // @synthesize templateJson=_templateJson;
@property(readonly, nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) NSMutableDictionary *customData; // @synthesize customData=_customData;
@property(readonly, nonatomic) VZTExpressionContext *expressionContext; // @synthesize expressionContext=_expressionContext;
@property(retain, nonatomic) NSDictionary *data; // @synthesize data=_data;
@property(readonly, nonatomic) VZMistTemplateController *tplController; // @synthesize tplController=_tplController;
- (void).cxx_destruct;
@property(readonly, nonatomic) VZMistAppearMap *appearMap;
@property(readonly, nonatomic) VZMistSelectorMap *selectorMap;
@property(readonly, nonatomic) struct CGSize windowSize;
@property(readonly, nonatomic) __weak id <VZFPageProtocol> page;
@property(readonly, nonatomic) _Bool isApp;
- (Class)templateControllerClass;
- (id)defaultBusiness;
- (void)writeExposureLog:(id)arg1;
- (void)failWithError:(id)arg1;
- (void)updateState:(CDUnknownBlockType)arg1;
- (void)prepareForRender;
- (void)render;
- (id)pageVersion;
- (id)initWithTplId:(id)arg1 delegate:(id)arg2 data:(id)arg3 viewController:(id)arg4;
- (id)initWithTplId:(id)arg1 bundleName:(id)arg2 delegate:(id)arg3 data:(id)arg4 viewController:(id)arg5;
- (id)initWithTplId:(id)arg1 bundleName:(id)arg2 templateInfo:(struct NSDictionary *)arg3 delegate:(id)arg4 data:(id)arg5 viewController:(id)arg6 pageName:(id)arg7 cacheFirst:(_Bool)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) JSContext *jsContext;
@property(readonly, nonatomic) NSDictionary *rawData;
@property(readonly) Class superclass;

@end

