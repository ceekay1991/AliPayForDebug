//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FMDatabaseQueue, NSString;

@interface DTNetDB : NSObject
{
    _Bool _hasRead;
    _Bool _hasBackup;
    int _errorReadOnlyCount;
    int _errorCantOpenCount;
    int _errorIOErrCount;
    int _specCodeCount;
    int _lastCount;
    int _storeIOErrCount;
    NSString *_extErrorInfo;
    FMDatabaseQueue *_dbQueue;
    NSString *_dbPath;
}

+ (void)configurePragmas:(struct sqlite3 *)arg1;
@property(nonatomic) int storeIOErrCount; // @synthesize storeIOErrCount=_storeIOErrCount;
@property(nonatomic) int lastCount; // @synthesize lastCount=_lastCount;
@property(nonatomic) _Bool hasBackup; // @synthesize hasBackup=_hasBackup;
@property(nonatomic) _Bool hasRead; // @synthesize hasRead=_hasRead;
@property(retain, nonatomic) NSString *dbPath; // @synthesize dbPath=_dbPath;
@property(nonatomic) int specCodeCount; // @synthesize specCodeCount=_specCodeCount;
@property(nonatomic) int errorIOErrCount; // @synthesize errorIOErrCount=_errorIOErrCount;
@property(nonatomic) int errorCantOpenCount; // @synthesize errorCantOpenCount=_errorCantOpenCount;
@property(nonatomic) int errorReadOnlyCount; // @synthesize errorReadOnlyCount=_errorReadOnlyCount;
@property(retain, nonatomic) FMDatabaseQueue *dbQueue; // @synthesize dbQueue=_dbQueue;
@property(retain, nonatomic) NSString *extErrorInfo; // @synthesize extErrorInfo=_extErrorInfo;
- (void).cxx_destruct;
- (_Bool)repairDatabaseWithBackupDirectory:(id)arg1 connection:(id)arg2;
- (_Bool)cloneDatabase:(id *)arg1 connection:(id)arg2 path:(id)arg3;
- (_Bool)cloneDatabase:(id *)arg1 connection:(id)arg2;
- (void)handleSqliteErrorReBuild:(id)arg1;
- (id)valueForSaveKey:(id)arg1;
- (_Bool)saveValue:(id)arg1 key:(id)arg2;
- (_Bool)saveCountIO;
- (void)readCountIO;
- (void)dealWithIOError;
- (void)__handleSqliteError:(id)arg1 sql:(id)arg2;
- (void)handleSqliteError:(id)arg1 sql:(id)arg2;
- (void)__backupAndResetDatabase:(id)arg1 backupName:(id)arg2 needExit:(_Bool)arg3;
- (void)__backupAndResetDatabase:(id)arg1 dbcode:(long long)arg2;
- (void)deleteMsgIdToCount:(long long)arg1 tablel:(id)arg2;
- (long long)queryCountFormTablel:(id)arg1;
- (id)executeQuery:(id)arg1;
- (_Bool)updateRecordWithTableName:(id)arg1 Data:(id)arg2 conditions:(id)arg3;
- (_Bool)insertRecordInDB:(id)arg1 withTableName:(id)arg2 record:(id)arg3;
- (void)buildParamer:(id)arg1 newCols:(id)arg2 newVals:(id)arg3;
- (_Bool)insertRecordWithTableName:(id)arg1 record:(id)arg2 error:(id *)arg3;
- (_Bool)deleteRecordWithTableName:(id)arg1 conditions:(id)arg2 error:(id *)arg3;
- (id)queryRecordWithTableName:(id)arg1 conditions:(id)arg2;
- (id)formatSetValue:(id)arg1;
- (id)formatWhereConditions:(id)arg1;
- (id)formatDictToString:(id)arg1 joinMark:(id)arg2;
- (id)formatValue:(id)arg1;
- (_Bool)createTableIndexWithTableName:(id)arg1 indexName:(id)arg2 conlumns:(id)arg3;
- (void)tableName:(id)arg1 addColumnNames:(id)arg2 columnTypes:(id)arg3;
- (_Bool)createTableWithTableName:(id)arg1 conlumns:(id)arg2 indexName:(id)arg3 indexConlumns:(id)arg4;
- (_Bool)createTableWithTableName:(id)arg1 conlumns:(id)arg2;
- (_Bool)tableExists:(id)arg1;
- (void)dealloc;
- (id)currentDBQueue;
- (void)configureDBPragma;
- (int)lastSystemErrorCode:(id)arg1;
- (int)lastExtendedErrorCode:(id)arg1;
- (void)dealWithOpenFail:(id)arg1;
- (_Bool)openDB:(id)arg1;
- (id)initWithDataBasePath:(id)arg1;
- (_Bool)resetSendStatus;
- (id)queryOpLogOrderAbsTimeTableName:(id)arg1 conditions:(id)arg2 extConditions:(id)arg3 limit:(int)arg4;
- (id)queryOpLogWithTableName:(id)arg1 conditions:(id)arg2 extConditions:(id)arg3;
- (long long)insertUpOpLog:(id)arg1 tableName:(id)arg2;

@end

