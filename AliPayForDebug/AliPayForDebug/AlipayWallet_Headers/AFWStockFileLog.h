//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AFWStockLogUploader, NSDateFormatter, NSMutableArray, NSMutableString, NSString, NSThread;

@interface AFWStockFileLog : NSObject
{
    NSThread *_logThread;
    NSDateFormatter *_pathFormatter;
    NSString *_rootPath;
    char _rootPathBuf[256];
    char _mmapPathNameBuf[256];
    char _newFormatMmapPathNameBuf[256];
    char _bufferMmapPathNameBuf[256];
    struct _AFWStockLogIO *_logIO;
    struct _AFWStockLogIO *_bufferIO;
    char _nameBuf[2][256];
    char *_pCurName;
    char *_pLogName;
    AFWStockLogUploader *normalUploader;
    _Bool _logToMemory;
    long long _logSlotSizeLimit;
    long long _logTotalSizeLimit;
    long long _maxCountsOfTotalLog;
    long long _maxLengthOfEachLog;
    NSString *_instId;
    int _currentCacheNum;
    int _totalCacheNum;
    NSMutableString *_currentLogString;
    NSMutableArray *_cacheMemoryLogArray;
    unsigned long long _bufferSize;
    NSString *_bufferFilePath;
    Class _appStateClass;
}

+ (id)sharedInstance;
@property(retain, nonatomic) Class appStateClass; // @synthesize appStateClass=_appStateClass;
@property(retain, nonatomic) NSString *bufferFilePath; // @synthesize bufferFilePath=_bufferFilePath;
@property(nonatomic) unsigned long long bufferSize; // @synthesize bufferSize=_bufferSize;
@property(retain, nonatomic) NSMutableArray *cacheMemoryLogArray; // @synthesize cacheMemoryLogArray=_cacheMemoryLogArray;
@property(retain, nonatomic) NSMutableString *currentLogString; // @synthesize currentLogString=_currentLogString;
- (void).cxx_destruct;
- (void)deleteMemoryCacheWhenMaxSize;
- (void)cacheMemoryLogString:(id)arg1;
- (id)logCreateTime;
- (void)uploadCacheLogImpl:(id)arg1;
- (void)uploadCacheLog:(id)arg1;
- (void)notifyUploading:(_Bool)arg1;
- (void)uploadFileLogImpl:(id)arg1;
- (void)uploadFileLog:(id)arg1;
- (void)getLogByPathImpl:(id)arg1;
- (void)getLogByPath:(id)arg1 resultBlock:(CDUnknownBlockType)arg2;
- (id)subFileOfPath:(id)arg1;
- (id)subFileOfLogPath;
- (long long)_folderSizeAtPath:(const char *)arg1;
- (void)deleteFileWhenTouchMaxSizeImpl;
- (void)deleteFileWhenTouchMaxSize;
- (void)deleteLogFileByPathImpl:(id)arg1;
- (void)deleteLogFileByPath:(id)arg1;
- (void)getPathByDeleteFileName:(char *)arg1;
- (void)buildNewFormatFileNameByTime;
- (void)writeAesFileNewFormatLogImpl:(id)arg1 forceFlushToFile:(_Bool)arg2;
- (void)writeAesFileNewFormatLogImpl:(id)arg1;
- (id)checkStringLength:(id)arg1;
- (_Bool)writeAesFileLog:(id)arg1;
- (void)fixFileAttributesForBgCrash:(id)arg1;
- (void)dealloc;
- (void)onCheckAndDeleteFile;
- (void)createBufferMmapIO;
- (void)flushLogBuffer:(id)arg1 forceFlushToFile:(_Bool)arg2;
- (_Bool)appStateInForeground;
- (void)onWillTerm;
- (void)onEnterBg;
- (void)onEnterFg;
- (void)runLogThread;
- (void)mkdirs:(char *)arg1;
- (void)initPath;
- (void)doInit;
- (id)cacheNumKey;
- (void)setLogConfigs;

@end

