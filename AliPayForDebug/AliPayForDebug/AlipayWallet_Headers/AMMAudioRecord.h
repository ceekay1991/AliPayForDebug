//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "APAudioSessionManagerDelegate-Protocol.h"
#import "WAudioInputQueueDelegate-Protocol.h"

@class APAudioRecordSetting, APMAudioRecordCallback, NSMutableData, NSString, NSTimer, WAudioInputQueue;
@protocol AMMAudioRecordDelegate, APAudioEncoder, OS_dispatch_queue;

@interface AMMAudioRecord : NSObject <WAudioInputQueueDelegate, APAudioSessionManagerDelegate>
{
    _Bool _isRecording;
    _Bool _hasInit;
    id <AMMAudioRecordDelegate> _delegate;
    APMAudioRecordCallback *_callback;
    APAudioRecordSetting *_recordSetting;
    double _maxDuration;
    double _minDuration;
    NSTimer *_micPowerTimer;
    NSObject<OS_dispatch_queue> *_recordQueue;
    id <APAudioEncoder> _audioEncoder;
    double _recordedDurationTime;
    WAudioInputQueue *_recorder;
    NSMutableData *_data;
    unsigned long long _pcmDataLength;
    unsigned long long _encodeFailedTimes;
    double _encodeTotalTimeInterval;
    NSMutableData *_frameData;
    struct AudioStreamBasicDescription _format;
}

+ (void)requestMicrophonePermission:(CDUnknownBlockType)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableData *frameData; // @synthesize frameData=_frameData;
@property(nonatomic) _Bool hasInit; // @synthesize hasInit=_hasInit;
@property(nonatomic) double encodeTotalTimeInterval; // @synthesize encodeTotalTimeInterval=_encodeTotalTimeInterval;
@property(nonatomic) unsigned long long encodeFailedTimes; // @synthesize encodeFailedTimes=_encodeFailedTimes;
@property(nonatomic) unsigned long long pcmDataLength; // @synthesize pcmDataLength=_pcmDataLength;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) WAudioInputQueue *recorder; // @synthesize recorder=_recorder;
@property(nonatomic) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(nonatomic) double recordedDurationTime; // @synthesize recordedDurationTime=_recordedDurationTime;
@property(retain, nonatomic) id <APAudioEncoder> audioEncoder; // @synthesize audioEncoder=_audioEncoder;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *recordQueue; // @synthesize recordQueue=_recordQueue;
@property(retain, nonatomic) NSTimer *micPowerTimer; // @synthesize micPowerTimer=_micPowerTimer;
@property(nonatomic) struct AudioStreamBasicDescription format; // @synthesize format=_format;
@property(nonatomic) double minDuration; // @synthesize minDuration=_minDuration;
@property(nonatomic) double maxDuration; // @synthesize maxDuration=_maxDuration;
@property(retain, nonatomic) APAudioRecordSetting *recordSetting; // @synthesize recordSetting=_recordSetting;
@property(retain, nonatomic) APMAudioRecordCallback *callback; // @synthesize callback=_callback;
@property(nonatomic) __weak id <AMMAudioRecordDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)delegateForAudioQueneDidInterupted;
- (void)notifyFrameRecordCallbackWithFrameData:(id)arg1 isLastFrame:(_Bool)arg2;
- (void)delegateForPCMData:(id)arg1 time:(id)arg2;
- (void)delegateForAudioQueneConvertFinish:(id)arg1;
- (void)delegateForAudioQueneConvertData:(id)arg1 averageCostTime:(double)arg2 error:(id)arg3 time:(id)arg4;
- (void)delegateForMicPower:(double)arg1;
- (void)delegateForCancel;
- (void)delegateForTimeNotEnough;
- (void)delegateForTimeOut:(id)arg1 encodeData:(id)arg2 duration:(double)arg3 format:(struct AudioStreamBasicDescription)arg4 isKeepData:(_Bool)arg5;
- (void)delegateForSuccess:(id)arg1 encodeData:(id)arg2 duration:(double)arg3 format:(struct AudioStreamBasicDescription)arg4 isKeepData:(_Bool)arg5;
- (void)delegateForTimer:(double)arg1;
- (void)delegateForRecording;
- (void)delegateForBegin;
- (void)inputQueue:(id)arg1 errorOccur:(id)arg2;
- (void)inputQueue:(id)arg1 inputData:(id)arg2 numberOfPackets:(unsigned int)arg3;
- (void)convertToSilkWithPCMData:(id)arg1 time:(id)arg2;
- (void)audioSessionManagerReceivePauseCommand:(id)arg1;
- (void)interrupted:(id)arg1;
- (void)cancelRecord;
- (void)voicePowerTimerCallback;
- (void)finishRecordCallback;
- (void)resumeRecord;
- (void)pauseRecord;
- (void)stopRecord;
- (void)startRecord;
- (void)dealloc;
- (void)configureWithAudioSetting:(id)arg1;
- (void)configureWithMaxSec:(double)arg1 minSec:(double)arg2;
- (id)initPrivate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

