//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "APAudioSessionManagerDelegate-Protocol.h"
#import "VideoPlayerViewDelegate-Protocol.h"

@class APMediaPlayerLogInfo, APVideoPlayer, AVPlayer, AVPlayerItem, AVPlayerItemVideoOutput, NSString, NSTimer, UIImage, UIImageView, VideoPlayerState, VideoPlayerView;
@protocol APVideoPlayerDelegate;

@interface VideoPlayerInternal : UIView <APAudioSessionManagerDelegate, VideoPlayerViewDelegate>
{
    _Bool _muted;
    _Bool _replayAfterPlayedToEnd;
    _Bool _mixAudioWithOthers;
    _Bool _allowsExternalPlayback;
    _Bool _preloadData;
    _Bool _audio;
    _Bool _obeyMuteSwitch;
    _Bool _hls;
    _Bool _isCloudId;
    _Bool _encrypted;
    _Bool _loadingFinished;
    _Bool _shouldPauseWhenAppResignActive;
    _Bool _audioSessionConfugurationChanged;
    float _volume;
    float _rate;
    float _startTime;
    UIImage *_placeHolderImage;
    id <APVideoPlayerDelegate> _delegate;
    double _durationWatchedInterval;
    APVideoPlayer *_ownedPlayer;
    long long _currentInterfaceOrientation;
    unsigned long long _fillingMode;
    UIImageView *_thumbnailView;
    AVPlayer *_player;
    AVPlayerItem *_currentItem;
    AVPlayerItemVideoOutput *_playerOutput;
    NSString *_identifier;
    NSString *_business;
    unsigned long long _renderEffect;
    APMediaPlayerLogInfo *_logInfo;
    NSString *_customRemoteLogInfo;
    NSString *_cloudID;
    NSString *_resourceUrl;
    unsigned long long _videoType;
    NSTimer *_reportCurTimer;
    unsigned long long _itemLoadingStatus;
    CDUnknownBlockType _loadingCompleteAction;
    VideoPlayerState *_state;
    unsigned long long _videoPlayerState;
    VideoPlayerState *_initedState;
    VideoPlayerState *_videoNotAvailableState;
    VideoPlayerState *_videoAvailableState;
    VideoPlayerState *_readyForPlayState;
    VideoPlayerState *_playingState;
    VideoPlayerState *_pauseState;
    VideoPlayerState *_seekingState;
    VideoPlayerState *_loadingState;
    double _lastLoadTime;
    VideoPlayerView *_videoPlayerView;
}

+ (id)identifierWithData:(id)arg1 extension:(id)arg2 business:(id)arg3;
@property(nonatomic) _Bool audioSessionConfugurationChanged; // @synthesize audioSessionConfugurationChanged=_audioSessionConfugurationChanged;
@property(retain, nonatomic) VideoPlayerView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(nonatomic) double lastLoadTime; // @synthesize lastLoadTime=_lastLoadTime;
@property(retain, nonatomic) VideoPlayerState *loadingState; // @synthesize loadingState=_loadingState;
@property(retain, nonatomic) VideoPlayerState *seekingState; // @synthesize seekingState=_seekingState;
@property(retain, nonatomic) VideoPlayerState *pauseState; // @synthesize pauseState=_pauseState;
@property(retain, nonatomic) VideoPlayerState *playingState; // @synthesize playingState=_playingState;
@property(retain, nonatomic) VideoPlayerState *readyForPlayState; // @synthesize readyForPlayState=_readyForPlayState;
@property(retain, nonatomic) VideoPlayerState *videoAvailableState; // @synthesize videoAvailableState=_videoAvailableState;
@property(retain, nonatomic) VideoPlayerState *videoNotAvailableState; // @synthesize videoNotAvailableState=_videoNotAvailableState;
@property(retain, nonatomic) VideoPlayerState *initedState; // @synthesize initedState=_initedState;
@property(nonatomic) unsigned long long videoPlayerState; // @synthesize videoPlayerState=_videoPlayerState;
@property(retain, nonatomic) VideoPlayerState *state; // @synthesize state=_state;
@property(copy, nonatomic) CDUnknownBlockType loadingCompleteAction; // @synthesize loadingCompleteAction=_loadingCompleteAction;
@property(nonatomic) unsigned long long itemLoadingStatus; // @synthesize itemLoadingStatus=_itemLoadingStatus;
@property(nonatomic) _Bool shouldPauseWhenAppResignActive; // @synthesize shouldPauseWhenAppResignActive=_shouldPauseWhenAppResignActive;
@property(nonatomic) _Bool loadingFinished; // @synthesize loadingFinished=_loadingFinished;
@property(retain, nonatomic) NSTimer *reportCurTimer; // @synthesize reportCurTimer=_reportCurTimer;
@property(nonatomic) unsigned long long videoType; // @synthesize videoType=_videoType;
@property(nonatomic) _Bool encrypted; // @synthesize encrypted=_encrypted;
@property(copy, nonatomic) NSString *resourceUrl; // @synthesize resourceUrl=_resourceUrl;
@property(retain, nonatomic) NSString *cloudID; // @synthesize cloudID=_cloudID;
@property(nonatomic) _Bool isCloudId; // @synthesize isCloudId=_isCloudId;
@property(nonatomic) float startTime; // @synthesize startTime=_startTime;
@property(nonatomic, getter=isHls) _Bool hls; // @synthesize hls=_hls;
@property(nonatomic) _Bool obeyMuteSwitch; // @synthesize obeyMuteSwitch=_obeyMuteSwitch;
@property(nonatomic) float rate; // @synthesize rate=_rate;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic, getter=isAudio) _Bool audio; // @synthesize audio=_audio;
@property(nonatomic) _Bool preloadData; // @synthesize preloadData=_preloadData;
@property(copy, nonatomic) NSString *customRemoteLogInfo; // @synthesize customRemoteLogInfo=_customRemoteLogInfo;
@property(retain, nonatomic) APMediaPlayerLogInfo *logInfo; // @synthesize logInfo=_logInfo;
@property(nonatomic) unsigned long long renderEffect; // @synthesize renderEffect=_renderEffect;
@property(nonatomic) _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(retain, nonatomic) NSString *business; // @synthesize business=_business;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) AVPlayerItemVideoOutput *playerOutput; // @synthesize playerOutput=_playerOutput;
@property(retain, nonatomic) AVPlayerItem *currentItem; // @synthesize currentItem=_currentItem;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) UIImageView *thumbnailView; // @synthesize thumbnailView=_thumbnailView;
@property(nonatomic) _Bool mixAudioWithOthers; // @synthesize mixAudioWithOthers=_mixAudioWithOthers;
@property(nonatomic) unsigned long long fillingMode; // @synthesize fillingMode=_fillingMode;
@property(nonatomic) long long currentInterfaceOrientation; // @synthesize currentInterfaceOrientation=_currentInterfaceOrientation;
@property(nonatomic) __weak APVideoPlayer *ownedPlayer; // @synthesize ownedPlayer=_ownedPlayer;
@property(nonatomic) double durationWatchedInterval; // @synthesize durationWatchedInterval=_durationWatchedInterval;
@property(nonatomic) __weak id <APVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImage *placeHolderImage; // @synthesize placeHolderImage=_placeHolderImage;
@property(nonatomic) _Bool replayAfterPlayedToEnd; // @synthesize replayAfterPlayedToEnd=_replayAfterPlayedToEnd;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
- (void).cxx_destruct;
- (void)playerResignActvie:(id)arg1;
- (void)playerBecomeActvie:(id)arg1;
- (void)handleSwipeEnd:(id)arg1;
- (void)handleSwipeBegan:(id)arg1;
- (void)handleAudioSessionRouteChange:(id)arg1;
- (void)handleInterruption:(id)arg1;
- (_Bool)shouldTryRecoverFromMediaServicesResetWithPreState:(id)arg1;
- (void)handleMediaServicesResetNotification:(id)arg1;
- (void)removeNotifications;
- (void)addNotifications;
@property(readonly, nonatomic) struct CGSize naturalSize;
- (id)getVideoItemWithIdentifier:(id)arg1;
- (struct CGRect)inflateFakeFillFrame:(struct CGRect)arg1;
- (struct CGRect)getFakeFillFrameWithFrame:(struct CGRect)arg1;
- (_Bool)isCurrentUIOrientationPortrait;
- (_Bool)isCurrentVideoPortrait;
- (_Bool)isVideoOrientationSameWithUIOrientation;
- (void)resume;
- (void)interupt;
- (void)setIdentifierInternal:(id)arg1;
- (void)unloadPlayer;
- (void)loadPlayer;
- (void)notifyDelegateDidEndSeek:(_Bool)arg1;
- (void)notifyDelegateDidStartSeek;
- (void)notifyDelegateWithNewState:(unsigned long long)arg1 oldState:(unsigned long long)arg2;
- (void)notifyDelegateCurrentPlayTime:(CDStruct_1b6d18a9)arg1;
- (void)notifyDelegateDidFinishPlay;
- (void)notifyDelegateDidStartPlay;
- (void)notifyDelegateDidReadyToPlay;
- (void)notifyDelegateWithStatus:(unsigned long long)arg1;
- (void)hidePlayer;
- (void)showPlayer;
- (void)videoDidPlayToEnd:(id)arg1;
- (_Bool)replaceCurrentItem;
- (_Bool)replaceCurrentItemWithIdentifier:(id)arg1;
- (_Bool)loadVideoWithIdentifier:(id)arg1;
- (void)loadThumbnailWithImage:(id)arg1 error:(id)arg2;
- (void)loadThumbnail;
- (_Bool)checkVideoAvailable:(id)arg1;
- (void)cleanInternal;
- (void)stopInternal;
- (void)seekInternal:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekInternal:(CDStruct_1b6d18a9)arg1;
- (void)pauseInternal;
- (void)playInternal;
- (void)restoreAudioSession;
- (unsigned long long)audioSessionMode;
- (void)configAudioSession;
- (void)reportCurrtime;
- (void)reportCurrtimerStop;
- (void)reportCurrtimerPause;
- (void)reportCurrtimerStart;
- (void)setAudioTrackEnabled:(_Bool)arg1;
- (void)handleAudioTrack;
- (void)layoutSubviews;
- (void)audioSessionManagerReceiveResumeCommand:(id)arg1;
- (void)audioSessionManagerReceivePauseCommand:(id)arg1;
- (void)didStartToRenderFrame;
- (void)readyForDisplayChanged:(_Bool)arg1;
- (void)reportRemoteLog;
- (struct __CVBuffer *)pixelBufferForCurrentFrame;
@property(readonly, nonatomic, getter=isReadyForDisplay) _Bool readyForDisplay;
- (double)getDurationLoaded;
- (double)getDurationWatched;
- (double)getTotalDuration;
- (_Bool)isPlaying;
- (void)seekEnd;
- (void)seek:(CDStruct_1b6d18a9)arg1;
- (void)clean;
- (void)pause;
- (void)stop;
- (void)play;
- (void)retryLoadingThumbnail;
- (void)reset;
- (void)setIdentifier:(id)arg1 business:(id)arg2;
- (void)dealloc;
- (void)doInit;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

