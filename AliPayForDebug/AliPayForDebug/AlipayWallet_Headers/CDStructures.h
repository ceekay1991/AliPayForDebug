//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSArray, NSAttributedString, NSMutableDictionary, NSString, UIColor, UIFont, UIImage, VZCustomGestuerManager, VZFBlockAction, VZFBlockGesture, VZFNode, VZLinearGradient;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ACKString {
    int _field1;
    int _field2;
    void *_field3;
    basic_string_90719d97 _field4;
};

struct AKQuad {
    struct CGPoint tl;
    struct CGPoint tr;
    struct CGPoint bl;
    struct CGPoint br;
};

struct APBAttitude_t {
    float pitch;
    float yaw;
    float roll;
};

struct APDAOMethodLookupItem {
    SEL _field1;
    unsigned int _field2;
    id _field3;
    struct APDAOMethodLookupItem *_field4;
};

struct APDAOPackClassInfo {
    Class _field1;
    int _field2;
    struct APDAOPackPropertyInfo *_field3;
    struct APDAOPackClassInfo *_field4;
};

struct APDAOPackPropertyInfo;

struct APDataCrypt {
    _Bool _field1;
    char _field2[32];
    unsigned int _field3;
    CDUnknownFunctionPointerType _field4;
};

struct APMOpusEncoder {
    struct Config _field1;
    struct vector<short, std::__1::allocator<short>> _field2;
    struct vector<short, std::__1::allocator<short>> _field3;
    struct SMOpusEncInst *_field4;
    int _field5;
};

struct APMTTSAdapter {
    struct APMTTSCallbackInterface *_field1;
    id _field2;
    id _field3;
    id _field4;
};

struct APMTTSCallbackInterface;

struct APMTTSCallbackInterfaceImpl {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct APMTextureView {
    Class _field1;
};

struct APNGImageNodeSpecs {
    UIImage *image;
    NSString *apngUrl;
    NSString *imageUrl;
    UIImage *errorImage;
    long long contentMode;
    _Bool detectLowerDevice;
    _Bool fourGEnable;
    VZFBlockAction *completion;
    id context;
};

struct APToygerService {
    struct ZFace *_field1;
};

struct AR3DGamePlayObserver {
    CDUnknownFunctionPointerType *_field1;
    struct IJSBridge *_field2;
};

struct AR3DViewControlImp {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct ARJSBridgeSupport {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    long long _field4;
    _Bool _field5;
};

struct Ahp3Decoder {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    char *_field7;
    int *_field8;
    int _field9;
    struct ahp3_t _field10;
    char *_field11;
    char *_field12;
    char *_field13;
    char *_field14;
};

struct AlgPara {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct AliPlayer;

struct AnimationController;

struct Ant3DAnimListener;

struct Ant3DGameObserver4TinyApp {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct Ant3dAnimation;

struct Ant3dCamera {
    CDUnknownFunctionPointerType *_field1;
    struct Camera *_field2;
    struct Node *_field3;
    struct Node *_field4;
    struct Node *_field5;
    float _field6;
    struct Vector3 _field7;
    float _field8;
    float _field9;
    _Bool _field10;
    float _field11;
    struct BoundingBox {
        struct Vector3 _field1;
        struct Vector3 _field2;
    } _field12;
    struct Rectangle _field13;
};

struct Ant3dConfig {
    vector_ebb6ef3e _resourcePaths;
    basic_string_90719d97 _scenePath;
    basic_string_90719d97 _jsPath;
    float _fovy;
    void *_context;
    CDUnknownFunctionPointerType _onCallBack;
    CDUnknownFunctionPointerType _logFunction;
    CDUnknownFunctionPointerType _fileFunction;
    _Bool _useCompressedTexture;
    _Bool _useHEVCCompressed;
    _Bool _useStbImageLib;
    _Bool _useUIScriptElement;
    basic_string_90719d97 _animFilePath;
    basic_string_90719d97 _uiPath;
};

struct Ant3dEngine {
    CDUnknownFunctionPointerType *_field1;
    struct Properties *_field2;
    _Bool _field3;
    int _field4;
    unsigned int _field5;
    double _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    struct Rectangle _field11;
    unsigned int _field12;
    struct Vector4 _field13;
    float _field14;
    int _field15;
    struct AnimationController *_field16;
    struct priority_queue<gameplay::Game::TimeEvent, std::__1::vector<gameplay::Game::TimeEvent, std::__1::allocator<gameplay::Game::TimeEvent>>, std::__1::less<gameplay::Game::TimeEvent>> *_field17;
    struct ScriptTarget *_field18;
    _Bool _field19;
    double _field20;
    double _field21;
    CDUnknownFunctionPointerType *_field22;
    float _field23;
    struct Node *_field24;
    struct IGameplayCallback *_field25;
    struct Scene *_field26;
    struct vector<gameplay::Ant3dUIManager *, std::__1::allocator<gameplay::Ant3dUIManager *>> _field27;
    struct Ant3dConfig *_field28;
    struct Ant3dAnimation *_field29;
    struct Ant3DAnimListener *_field30;
    struct Ant3dCamera _field31;
    struct Ant3dCamera _field32;
    struct list<std::__1::function<void ()>, std::__1::allocator<std::__1::function<void ()>>> _field33;
    struct recursive_mutex _field34;
    struct Matrix _field35;
    struct Matrix _field36;
    float _field37;
    float _field38;
    _Bool _field39;
    int _field40;
    _Bool _field41;
    struct Node *_field42;
    struct Vector3 _field43;
    struct vector<gameplay::Node *, std::__1::allocator<gameplay::Node *>> _field44;
    struct vector<gameplay::Node *, std::__1::allocator<gameplay::Node *>> _field45;
    vector_ebb6ef3e _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    int _field50;
    _Bool _field51;
    _Bool _field52;
    struct OITBlender *_field53;
    struct FrameBuffer *_field54;
    struct Camera *_field55;
    struct Node *_field56;
    struct Sampler *_field57;
    struct Vector2 _field58;
    struct Matrix _field59;
    float _field60;
    struct Node *_field61;
};

struct Ant3dUIManager;

struct AppCache {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    basic_string_90719d97 _field5;
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>>> _field6;
    struct ThreadRWLock _field7;
    unsigned long long _field8;
    struct shared_ptr<bif::cache::MappedFile> _field9;
    struct IndexHeader *_field10;
    struct SMap _field11;
    struct shared_ptr<bif::cache::ProcessRWLock> _field12;
    int _field13;
};

struct Array {
    int size;
    int mallocsize;
    void ***pIndexData;
    int pIndexNum;
    void **pDataEnd;
    CDUnknownFunctionPointerType Append;
    CDUnknownFunctionPointerType Insert;
    CDUnknownFunctionPointerType Remove;
    CDUnknownFunctionPointerType Reset;
    CDUnknownFunctionPointerType GetValue;
};

struct AspectTransform;

struct AssStyle;

struct Audio {
    int _field1;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int mNumberBuffers;
    struct AudioBuffer mBuffers[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioDecoderFactory;

struct AudioDevice {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct VoiceProcessingAudioUnit *_field3;
    struct AudioBufferList _field4;
    struct unique_ptr<signed char [], std::__1::default_delete<signed char []>> _field5;
    struct unique_ptr<signed char [], std::__1::default_delete<signed char []>> _field6;
};

struct AudioDeviceModule {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioEncoderFactory;

struct AudioProcessing;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioSourceInterface;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AudioTrackInterface;

struct BitrateAdjuster;

struct BitrateAllocationStrategy;

struct BoundingSphere {
    struct Vector3 _field1;
    float _field2;
};

struct Buffer {
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct ButtonNodeSpecs {
    double fontSize;
    NSString *fontName;
    unsigned long long fontStyle;
    struct _StatefulValue<NSString *, true> title;
    struct _StatefulValue<UIColor *, true> titleColor;
    struct _StatefulValue<UIImage *, true> backgroundImage;
    struct _StatefulValue<UIImage *, true> image;
    struct _Value<CGSize, &CGSizeZero, true> enlargeSize;
    UIFont *_font;
    VZFBlockAction *action;
    unsigned long long fontWeight;
};

struct CAMapSrvProj {
    CDUnknownFunctionPointerType *_field1;
    struct tagAMAPSRVPROJECTION _field2;
    int _field3;
};

struct CAMapSrvVectorOverLay {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    struct CAMapSrvView *_field11;
    long long _field12;
    int _field13;
    int _field14;
    struct CAMapSrvView *_field15;
    void *_field16;
    void *_field17;
    void *_field18;
    void *_field19;
    int _field20;
};

struct CAMapSrvView;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CAnAppInstance {
    CDUnknownFunctionPointerType *_field1;
    struct CAnServiceViewMgr *_field2;
    struct CAnResTmStmpRecord *_field3;
};

struct CAnResTmStmpRecord;

struct CAnServiceViewMgr;

struct CFaceTrackEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct CFit3DFaceEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CIdCardTextCut;

struct CIdcardCheck {
    struct CIdCardTextCut *_field1;
};

struct CIdcardCheck_991 {
    struct CIdCardTextCut *_field1;
    struct CParams *_field2;
};

struct CKLabelRenderStyle {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    double _field3;
    struct CKStyleBackground _field4;
    struct CKStyleBoxShadow _field5;
    struct CKStyleBorderRadius _field6;
    struct CKStyleBorder _field7;
    struct CKStyleEdgeInsets _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    int _field14;
    struct CKStyleFont _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    double _field20;
    struct ACKString _field21;
    int _field22;
    struct CKStylePoint _field23;
    double _field24;
};

struct CKScrollRange {
    double begine;
    double end;
};

struct CKStyleBackground {
    struct CKStyleGradientLinear _field1;
    struct ACKString _field2;
    struct CKStyleBackgroundPosition _field3;
    struct CKStyleBackgroundSize _field4;
    int _field5;
    struct CKStyleBackgroundRepeat _field6;
};

struct CKStyleBackgroundPosition {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct CKStyleBackgroundRepeat {
    _Bool _field1;
    _Bool _field2;
};

struct CKStyleBackgroundSize {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct CKStyleBorder {
    struct CKStyleSingleBorder _field1;
    struct CKStyleSingleBorder _field2;
    struct CKStyleSingleBorder _field3;
    struct CKStyleSingleBorder _field4;
};

struct CKStyleBorderRadius {
    struct CKStyleRadii _field1;
    struct CKStyleRadii _field2;
    struct CKStyleRadii _field3;
    struct CKStyleRadii _field4;
};

struct CKStyleBoxShadow {
    struct CKStyleSize _field1;
    double _field2;
    int _field3;
    _Bool _field4;
};

struct CKStyleEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct CKStyleFont {
    int _field1;
    double _field2;
    int _field3;
    struct ACKString _field4;
};

struct CKStyleGradientLinear {
    float _field1;
    struct vector<int, std::__1::allocator<int>> _field2;
    struct vector<double, std::__1::allocator<double>> _field3;
};

struct CKStyleLength {
    double _field1;
    int _field2;
};

struct CKStylePoint {
    double _field1;
    double _field2;
};

struct CKStyleRadii {
    struct CKStyleLength _field1;
    double _field2;
    double _field3;
};

struct CKStyleRect;

struct CKStyleSingleBorder {
    double _field1;
    int _field2;
    struct ACKString _field3;
};

struct CKStyleSize {
    double _field1;
    double _field2;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CParams;

struct CRABezier {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct CRAPoint {
    double _field1;
    double _field2;
};

struct CRAnimationData {
    int _field1;
    double _field2;
    double _field3;
    int _field4;
    int _field5;
    _Bool _field6;
    struct CRAPoint _field7;
    int _field8;
    int _field9;
    _Bool _field10;
    int _field11;
    struct CRABezier _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct Cache {
    CDUnknownFunctionPointerType *_field1;
    struct Rep *_field2;
};

struct CacheItem;

struct CacheUrl {
    struct URL _field1;
    basic_string_90719d97 _field2;
    int _field3;
    int _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
    basic_string_90719d97 _field8;
    basic_string_90719d97 _field9;
    basic_string_90719d97 _field10;
    basic_string_90719d97 _field11;
    basic_string_90719d97 _field12;
    basic_string_90719d97 _field13;
};

struct Camera;

struct CameraSource;

struct Chromaticity {
    float _field1;
    float _field2;
};

struct Classify;

struct CodecBufferUsage;

struct CodecSpecificInfo {
    int _field1;
    union CodecSpecificInfoUnion _field2;
    struct optional<xwebrtc::GenericFrameInfo> _field3;
    struct optional<xwebrtc::TemplateStructure> _field4;
};

struct CodecSpecificInfoH264 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CodecSpecificInfoVP8 {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    char _field4;
    _Bool _field5;
    unsigned long long _field6[3];
    unsigned long long _field7;
    unsigned long long _field8[3];
    unsigned long long _field9;
};

struct CodecSpecificInfoVP9 {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned char _field6;
    _Bool _field7;
    _Bool _field8;
    unsigned char _field9;
    unsigned long long _field10;
    _Bool _field11;
    unsigned short _field12[8];
    unsigned short _field13[8];
    struct GofInfoVP9 _field14;
    unsigned char _field15;
    unsigned char _field16[3];
    _Bool _field17;
};

struct ColorSpace {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    int _field4;
    int _field5;
    int _field6;
    struct optional<xwebrtc::HdrMetadata> _field7;
};

struct CompressedTuple<std::__1::allocator<int>, unsigned long> {
    unsigned long long _field1;
};

struct CompressedTuple<std::__1::allocator<xwebrtc::CodecBufferUsage>, unsigned long> {
    unsigned long long _field1;
};

struct CompressedTuple<std::__1::allocator<xwebrtc::GenericFrameInfo::DecodeTargetIndication>, unsigned long> {
    unsigned long long _field1;
};

struct Config {
    int _field1;
    unsigned long long _field2;
    int _field3;
    int _field4;
    int _field5;
    _Bool _field6;
    int _field7;
};

struct ConfigManager;

struct Constraint;

struct Constraints {
    struct Constraint *_field1;
    struct Constraint *_field2;
    struct __compressed_pair<xwebrtc::MediaConstraints::Constraint *, std::__1::allocator<xwebrtc::MediaConstraints::Constraint>> {
        struct Constraint *_field1;
    } _field3;
};

struct CopyOnWriteBuffer {
    struct scoped_refptr<xrtc::RefCountedObject<xrtc::BufferT<unsigned char, false>>> buffer_;
};

struct CryptoOptions {
    struct Srtp _field1;
    struct SFrame _field2;
};

struct DB {
    CDUnknownFunctionPointerType *_field1;
};

struct DataBuffer {
    struct CopyOnWriteBuffer _field1;
    _Bool _field2;
};

struct DataChannelDelegateAdapter;

struct DataChannelInit {
    _Bool reliable;
    _Bool ordered;
    struct optional<int> maxRetransmitTime;
    struct optional<int> maxRetransmits;
    basic_string_90719d97 protocol;
    _Bool negotiated;
    int id;
};

struct DataChannelInterface;

struct DelayedMessage;

struct Detect;

struct DoubleSize {
    struct CGSize _field1;
    struct CGSize _field2;
};

struct DtmfSenderInterface;

struct EAGLContext {
    Class _field1;
    struct _EAGLContextPrivate *_field2;
};

struct Element;

struct EmotionParam {
    struct CGSize _field1;
    struct CGSize _field2;
    struct CGSize _field3;
    struct CGSize _field4;
    long long _field5;
    long long _field6;
};

struct EncodedImage {
    unsigned int _field1;
    unsigned int _field2;
    long long _field3;
    long long _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
    _Bool _field8;
    int _field9;
    struct PlayoutDelay _field10;
    struct Timing _field11;
    struct CopyOnWriteBuffer _field12;
    unsigned long long _field13;
    char *_field14;
    unsigned long long _field15;
    unsigned int _field16;
    struct optional<int> _field17;
    struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> _field18;
    struct optional<xwebrtc::ColorSpace> _field19;
};

struct EulerData {
    float _field1;
    float _field2;
    float _field3;
};

struct Event;

struct FMResultSet {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    _Bool _field6;
};

struct FalconImgBaseAlgInterface {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    int _field4;
    int _field5;
    int *_field6;
    int _field7;
    struct AlgPara _field8;
};

struct FalconRecogEngineBase {
    CDUnknownFunctionPointerType *_field1;
};

struct Falcon_FACE_TRACKING_RESULT {
    int face_id;
    float res_head_pose[6];
    struct YunOS_FACE_KEY_POINT_2D face_output_pt[18];
};

struct FeaturePoint {
    int _field1;
    struct KeyPoint _field2;
    struct Point_<float> _field3;
    struct Point_<float> _field4;
    _Bool _field5;
};

struct FileDescriptor {
    int _field1;
    long long _field2;
    void *_field3;
};

struct FilterPolicy {
    CDUnknownFunctionPointerType *_field1;
};

struct FluxAction {
    int _field1;
    int _field2;
    id _field3;
    id _field4;
};

struct FrameBuffer;

struct FrameDecryptorInterface;

struct FrameEncryptorInterface;

struct FrameFaceInfo {
    _Bool isPP;
    int faceid;
    int currentDHN;
};

struct GCanvas {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    struct GCanvasConfig _field3;
    struct GCanvasHooks *_field4;
    struct GCanvasContext *_field5;
};

struct GCanvasConfig {
    _Bool _field1;
    _Bool _field2;
};

struct GCanvasContext {
    CDUnknownFunctionPointerType *_field1;
    struct GCanvasConfig _field2;
    struct GCanvasState *_field3;
    float _field4;
    struct GTransform _field5;
    _Bool _field6;
    CDUnion_2664f680 _field7;
    short _field8;
    short _field9;
    short _field10;
    short _field11;
    int _field12;
    int _field13;
    _Bool _field14;
    struct map<std::__1::basic_string<char>, GFrameBufferObject, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GFrameBufferObject>>> _field15;
    struct GFontManager *_field16;
    struct GCanvasHooks *_field17;
    int _field18;
    _Bool _field19;
    long long _field20;
    int _field21;
    basic_string_90719d97 _field22;
    struct GPath _field23;
    struct vector<GCanvasState, std::__1::allocator<GCanvasState>> _field24;
    _Bool _field25;
    struct GShader *_field26;
    _Bool _field27;
    struct {
        CDStruct_b2fbf00d _field1;
        CDStruct_b2fbf00d _field2;
        CDUnion_2664f680 _field3;
    } _field28[2048];
    struct vector<GCanvasVertexShaderProperty, std::__1::allocator<GCanvasVertexShaderProperty>> _field29;
    _Bool _field30;
    struct GFrameBufferObjectPool _field31;
    struct GTexture *_field32;
    _Bool _field33;
};

struct GCanvasHooks {
    CDUnknownFunctionPointerType GCanvasException;
};

struct GCanvasState;

struct GCanvasVertexShaderProperty;

struct GFontManager;

struct GFontStyle {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    int _field3;
    int _field4;
    int _field5;
    float _field6;
    float _field7;
    basic_string_90719d97 _field8;
    float _field9;
    float _field10;
};

struct GFrameBufferObject {
    _Bool _field1;
    struct GTexture _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    struct GTransform _field6;
    int _field7;
    int _field8;
};

struct GFrameBufferObjectPool {
    struct multimap<std::__1::pair<int, int>, GFrameBufferObject *, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, GFrameBufferObject *>>> _field1;
};

struct GGlyph {
    int _field1;
    struct GTexture *_field2;
    char *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    int _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    int _field14;
    float _field15;
};

struct GGlyphCache {
    struct GCanvasContext *_field1;
    struct GFontManager *_field2;
    struct unordered_map<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph, key_hash, key_equal, std::__1::allocator<std::__1::pair<const std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>>> _field3;
};

struct GPath {
    CDStruct_b2fbf00d _field1;
    CDStruct_b2fbf00d _field2;
    _Bool _field3;
    struct {
        struct vector<GPoint, std::__1::allocator<GPoint>> _field1;
        _Bool _field2;
    } _field4;
    struct vector<tSubPath, std::__1::allocator<tSubPath>> _field5;
    float _field6;
    CDStruct_b2fbf00d _field7;
    CDStruct_b2fbf00d _field8;
    int _field9;
    struct GTransform _field10;
};

struct GShader;

struct GTexture {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct GTransform {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct GTreemap {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct Game;

struct GenericFrameInfo {
    long long _field1;
    int _field2;
    int _field3;
    struct InlinedVector<int, 10, std::__1::allocator<int>> _field4;
    struct InlinedVector<xwebrtc::GenericFrameInfo::DecodeTargetIndication, 10, std::__1::allocator<xwebrtc::GenericFrameInfo::DecodeTargetIndication>> _field5;
    struct InlinedVector<xwebrtc::CodecBufferUsage, 8, std::__1::allocator<xwebrtc::CodecBufferUsage>> _field6;
};

struct GofInfoVP9 {
    unsigned long long _field1;
    unsigned char _field2[255];
    _Bool _field3[255];
    unsigned char _field4[255];
    unsigned char _field5[255][3];
    unsigned short _field6;
};

struct H264BitstreamParser {
    CDUnknownFunctionPointerType *_vptr$BitstreamParser;
    struct optional<xwebrtc::SpsParser::SpsState> sps_;
    struct optional<xwebrtc::PpsParser::PpsState> pps_;
    struct optional<int> last_slice_qp_delta_;
};

struct HandGestureDetectWrapper {
    struct Image _field1;
    struct Image _field2;
    struct Image _field3;
    struct vector<double, std::__1::allocator<double>> _field4;
    struct shared_ptr<Classify> _field5;
    struct shared_ptr<Detect> _field6;
};

struct HandKpDet;

struct HandKpDetWrapper {
    struct vector<double, std::__1::allocator<double>> _field1;
    float _field2;
    float _field3[4];
    float _field4;
    struct Image _field5;
    struct Image _field6;
    struct shared_ptr<HandKpDet> _field7;
    struct shared_ptr<Detect> _field8;
};

struct HdrMasteringMetadata {
    struct Chromaticity _field1;
    struct Chromaticity _field2;
    struct Chromaticity _field3;
    struct Chromaticity _field4;
    float _field5;
    float _field6;
};

struct HdrMetadata {
    struct HdrMasteringMetadata _field1;
    int _field2;
    int _field3;
};

struct Header;

struct HttpCache {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    basic_string_90719d97 _field5;
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>>> _field6;
    struct ThreadRWLock _field7;
    unsigned long long _field8;
    struct shared_ptr<bif::cache::MappedFile> _field9;
    struct StatisticHeader *_field10;
    struct SMap _field11;
    struct shared_ptr<bif::cache::ProcessRWLock> _field12;
    int _field13;
    unsigned long long _field14;
    unsigned long long _field15;
    _Bool _field16;
};

struct HumanPoseDetect;

struct HumanPoseDetectWrapper {
    struct Image _field1;
    struct Image _field2;
    struct shared_ptr<HumanPoseDetect> _field3;
};

struct HumanPoseScoreWrapper {
    struct shared_ptr<PoseMatcher> _field1;
};

struct I420BufferInterface;

struct IAudioMixer;

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IGameplayCallback;

struct IJSBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct IJSBridgeSupport {
    CDUnknownFunctionPointerType *_field1;
};

struct IOutput;

struct IOutputSession;

struct ITransform;

struct IVideoMixer;

struct IceCandidateInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IceServer {
    basic_string_90719d97 _field1;
    vector_ebb6ef3e _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    int _field5;
    basic_string_90719d97 _field6;
    vector_ebb6ef3e _field7;
    vector_ebb6ef3e _field8;
};

struct IdBase;

struct Image {
    char *_field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
};

struct ImageNodeSpecs {
    UIImage *image;
    NSString *imageUrl;
    UIImage *errorImage;
    long long contentMode;
    VZFBlockAction *completion;
    id context;
};

struct IndexHeader;

struct IndicatorNodeSpecs {
    UIColor *color;
};

struct Inlined {
    struct type _field1[10];
};

struct InlinedVector<int, 10, std::__1::allocator<int>> {
    struct Storage<int, 10, std::__1::allocator<int>> _field1;
};

struct InlinedVector<xwebrtc::CodecBufferUsage, 8, std::__1::allocator<xwebrtc::CodecBufferUsage>> {
    struct Storage<xwebrtc::CodecBufferUsage, 8, std::__1::allocator<xwebrtc::CodecBufferUsage>> _field1;
};

struct InlinedVector<xwebrtc::GenericFrameInfo::DecodeTargetIndication, 10, std::__1::allocator<xwebrtc::GenericFrameInfo::DecodeTargetIndication>> {
    struct Storage<xwebrtc::GenericFrameInfo::DecodeTargetIndication, 10, std::__1::allocator<xwebrtc::GenericFrameInfo::DecodeTargetIndication>> _field1;
};

struct IntervalRange {
    int _field1;
    int _field2;
};

struct JMergePoint {
    int _field1;
    int _field2;
};

struct JSContext;

struct KeyPoint {
    struct Point_<float> _field1;
    float _field2;
    float _field3;
    float _field4;
    int _field5;
    int _field6;
};

struct KeyboardInfo {
    _Bool isLocal;
    unsigned long long curve;
    double duration;
    struct CGRect bounds;
    struct CGPoint centerBegin;
    struct CGPoint centerEnd;
    struct CGRect frameBegin;
    struct CGRect frameEnd;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LWSearchDataAdapter {
    struct Searcher *_field1;
    struct _ini_ctx_t *_field2;
    struct _DArray *_field3;
    struct ThreadMutex *_field4;
    struct ThreadMutex *_field5;
    struct ThreadMutex *_field6;
    _Bool _field7;
    struct _DArray *_field8;
    struct _str_buffer_t *_field9;
};

struct Light;

struct LineNodeSpecs {
    UIColor *color;
    double dashLength;
    double spaceLength;
};

struct Listener;

struct LiteVM {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
};

struct LiteVMContext {
    int _field1;
    struct _opaque_pthread_t *_field2;
    struct CacheItem *_field3;
    unsigned long long _field4;
    void *_field5;
    void *_field6;
    unsigned int _field7;
    struct Registers _field8;
};

struct Location {
    char *_field1;
    char *_field2;
};

struct MA3DModelObjFileParser {
    CDUnknownFunctionPointerType *_field1;
    struct vector<MA3DModleObjFile::Vec3, std::__1::allocator<MA3DModleObjFile::Vec3>> _field2;
    struct vector<MA3DModleObjFile::Vec2, std::__1::allocator<MA3DModleObjFile::Vec2>> _field3;
    struct vector<MA3DModleObjFile::Vertex, std::__1::allocator<MA3DModleObjFile::Vertex>> _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
};

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAMapEngineCallBack {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MAPolygonClipper {
    vector_f60ea51c *_field1;
    unsigned long long _field2;
    struct Vector3<float> *_field3;
    struct Vector3<float> _field4[4];
    struct Vector3<float> _field5[4];
    vector_f60ea51c _field6;
    struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    int _field15;
    vector_195fe69b _field16;
};

struct MAPolygonTriangulator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_f60ea51c *_field5;
    unsigned long long _field6;
    vector_195fe69b _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
};

struct MAQuadTreeNode {
    struct MAQuadTreeNode *_field1;
    struct MAQuadTreeNode *_field2;
    struct MAQuadTreeNode *_field3;
    struct MAQuadTreeNode *_field4;
    struct MAMapRect _field5;
    int _field6;
    struct MAQuadTreeNodeData *_field7;
    int _field8;
    int _field9;
};

struct MAQuadTreeNodeData;

struct MATile {
    unsigned int x;
    unsigned int y;
    short zoom;
};

struct MATileOverlayPath {
    long long x;
    long long y;
    long long z;
    double contentScaleFactor;
};

struct MP4Multiplexer;

struct MQPResult {
    Class _field1;
};

struct MapAnnotationSpecs {
    id _field1;
    double _field2;
    double _field3;
    id _field4;
    id _field5;
    id _field6;
    _Bool _field7;
    _Bool _field8;
};

struct MapOverlaySpecs {
    id _field1;
    struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> _field2;
    id _field3;
    double _field4;
};

struct MapTile {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    _Bool _field5;
    struct vector<RoadFeature<short>*, autonavi::irrAllocator<RoadFeature<short>*>> *_field6;
    struct vector<PointFeature<short>*, autonavi::irrAllocator<PointFeature<short>*>> *_field7;
    struct vector<PolygonFeature<short>*, autonavi::irrAllocator<PolygonFeature<short>*>> *_field8;
    struct vector<PolygonFeature<short>*, autonavi::irrAllocator<PolygonFeature<short>*>> *_field9;
    struct vector<MeshFeature, autonavi::irrAllocator<MeshFeature>> *_field10;
    struct vector<TileReference, autonavi::irrAllocator<TileReference>> _field11;
    struct vector<unsigned long long, autonavi::irrAllocator<unsigned long long>> _field12;
};

struct MapViewNodeSpecs {
    unsigned long long mapType;
    _Bool showsUserLocation;
    _Bool followUserLocation;
    _Bool showsAnnotationCallouts;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> zoomEnabled;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> scrollEnabled;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> rotateEnabled;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> pitchEnabled;
    struct _Value<MKCoordinateRegion, &VZ::DefaultAttributesValue::undefinedRegion, true> region;
    struct vector<VZ::MapAnnotationSpecs, std::__1::allocator<VZ::MapAnnotationSpecs>> annotations;
    struct vector<VZ::MapOverlaySpecs, std::__1::allocator<VZ::MapOverlaySpecs>> overlays;
    CDUnknownBlockType onAnnotationPress;
    CDUnknownBlockType onAnnotationFocus;
    CDUnknownBlockType onAnnotationBlur;
    CDUnknownBlockType onAnnotationDragStateChange;
};

struct MappedFile;

struct Mat {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct UMatData *u;
    struct MatSize size;
    struct MatStep step;
};

struct MatAllocator;

struct MatSize {
    int *p;
};

struct MatStep {
    unsigned long long *p;
    unsigned long long buf[2];
};

struct Mat_<float> {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct UMatData *u;
    struct MatSize size;
    struct MatStep step;
};

struct Matrix {
    float _field1[16];
};

struct MediaConfig {
    _Bool _field1;
    struct Video _field2;
    struct Audio _field3;
};

struct MediaConstraints;

struct MediaSourceInterface;

struct MediaStreamInterface;

struct MediaStreamTrackInterface;

struct MediaTransportFactory;

struct Mesh {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    basic_string_90719d97 _field3;
    struct VertexFormat _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8;
    struct MeshPart **_field9;
    _Bool _field10;
    struct BoundingBox {
        struct Vector3 _field1;
        struct Vector3 _field2;
    } _field11;
    struct BoundingSphere _field12;
};

struct MeshPart;

struct Message {
    struct Location _field1;
    struct MessageHandler *_field2;
    unsigned int _field3;
    struct MessageData *_field4;
    long long _field5;
};

struct MessageChannelIOS;

struct MessageData;

struct MessageDispatcher {
    CDUnknownFunctionPointerType *_field1;
    struct TLogBase *_field2;
    struct unordered_map<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>>> _field3;
    struct mutex _field4;
};

struct MessageHandler;

struct MicSource {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<videocore::iOS::MicSource> _field2;
    id _field3;
    struct OpaqueAudioComponentInstance *_field4;
    struct OpaqueAudioComponent *_field5;
    double _field6;
    int _field7;
    struct weak_ptr<videocore::IOutput> _field8;
    _Bool _field9;
    _Bool _field10;
};

struct ModuleData;

struct MountContext {
    id _field1;
    struct CGPoint _field2;
    struct UIEdgeInsets _field3;
};

struct MountResult {
    _Bool _field1;
    struct MountContext _field2;
};

struct NBLogRenderPixel {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NetworkControllerFactoryInterface;

struct Node {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct vector<gameplay::Animation::Channel *, std::__1::allocator<gameplay::Animation::Channel *>> *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct RegistryEntry *_field5;
    struct ScriptEntry *_field6;
    struct map<const gameplay::ScriptTarget::Event *, std::__1::vector<gameplay::ScriptTarget::CallbackFunction, std::__1::allocator<gameplay::ScriptTarget::CallbackFunction>>, std::__1::less<const gameplay::ScriptTarget::Event *>, std::__1::allocator<std::__1::pair<const gameplay::ScriptTarget::Event *const, std::__1::vector<gameplay::ScriptTarget::CallbackFunction, std::__1::allocator<gameplay::ScriptTarget::CallbackFunction>>>>> *_field7;
    struct Vector3 _field8;
    struct Quaternion _field9;
    struct Vector3 _field10;
    struct Matrix _field11;
    char _field12;
    struct list<gameplay::Transform::TransformListener, std::__1::allocator<gameplay::Transform::TransformListener>> *_field13;
    _Bool _field14;
    struct Vector3 _field15;
    struct Quaternion _field16;
    struct Vector3 _field17;
    CDUnknownFunctionPointerType *_field18;
    unsigned int _field19;
    struct Scene *_field20;
    basic_string_90719d97 _field21;
    struct Node *_field22;
    struct Node *_field23;
    struct Node *_field24;
    struct Node *_field25;
    unsigned int _field26;
    _Bool _field27;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field28;
    struct Drawable *_field29;
    struct Camera *_field30;
    struct Light *_field31;
    struct Ref *_field32;
    struct Matrix _field33;
    struct BoundingSphere _field34;
    int _field35;
    struct Matrix *_field36;
    struct Matrix _field37;
    struct Matrix _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    struct BoundingBox {
        struct Vector3 _field1;
        struct Vector3 _field2;
    } _field43;
};

struct NodeLayout {
    VZFNode *node;
    struct CGSize size;
    struct CGPoint origin;
    struct UIEdgeInsets margin;
    struct shared_ptr<std::__1::vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>>> children;
    struct CGRect displayFrame;
};

struct NodeSpecs {
    basic_string_90719d97 identifier;
    long long tag;
    _Bool clip;
    struct _Value<float, &VZ::DefaultAttributesValue::alpha, false> alpha;
    struct _Value<int, &VZ::DefaultAttributesValue::userInteractionEnabled, false> userInteractionEnabled;
    struct _Value<UIColor *, &VZ::DefaultAttributesValue::backgroundColor, false> backgroundColor;
    struct _Value<UIColor *, &VZ::DefaultAttributesValue::highlightBackgroundColor, false> highlightBackgroundColor;
    double cornerRadius;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusTopLeft;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusTopRight;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusBottomLeft;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusBottomRight;
    double borderWidth;
    UIColor *borderColor;
    UIImage *contents;
    CDUnknownBlockType unapplicator;
    CDUnknownBlockType applicator;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::width, true> width;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::height, true> height;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxWidth, true> maxWidth;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxHeight, true> maxHeight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::minWidth, true> minWidth;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::minHeight, true> minHeight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginLeft, true> marginLeft;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginRight, true> marginRight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginTop, true> marginTop;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginBottom, true> marginBottom;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingLeft, true> paddingLeft;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingRight, true> paddingRight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingTop, true> paddingTop;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingBottom, true> paddingBottom;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::margin, true> margin;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::padding, true> padding;
    struct _Value<float, &VZ::DefaultAttributesValue::flexGrow, false> flexGrow;
    struct _Value<float, &VZ::DefaultAttributesValue::flexShrink, false> flexShrink;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::flexBasis, true> flexBasis;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultAttributesValue::alignSelf, false> alignSelf;
    struct _Value<bool, &VZ::DefaultAttributesValue::fixed, false> fixed;
    struct _Value<int, &VZ::DefaultAttributesValue::userInteractionEnabled, false> isAccessibilityElement;
    NSString *accessibilityLabel;
    VZFBlockGesture *gesture;
    struct vector<VZFBlockGesture *, std::__1::allocator<VZFBlockGesture *>> gestures;
    VZFBlockAction *display;
    _Bool asyncDisplay;
    VZLinearGradient *backgroundImage;
    VZCustomGestuerManager *gestureManager;
    _Bool useGestureManager;
    VZFBlockAction *onAppear;
    VZFBlockAction *onDisappear;
    VZFBlockAction *onFirstAppear;
};

struct OCR;

struct OCRWrapper {
    int _field1;
    int _field2;
    struct Image _field3;
    struct Image _field4;
    struct shared_ptr<OCR> _field5;
};

struct OITBlender;

struct ObjCVideoTrackSource {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct list<xwebrtc::ObserverInterface *, std::__1::allocator<xwebrtc::ObserverInterface *>> _field4;
    struct VideoAdapter _field5;
    struct CriticalSection {
        struct _opaque_pthread_mutex_t _field1;
        struct _opaque_pthread_t *_field2;
        int _field3;
    } _field6;
    struct optional<xwebrtc::VideoTrackSourceInterface::Stats> _field7;
    struct VideoBroadcaster _field8;
    struct VideoBroadcaster _field9;
    struct TimestampAligner _field10;
    id _field11;
};

struct OpaqueAudioComponent;

struct OpaqueAudioComponentInstance;

struct Options {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    struct CryptoOptions _field6;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PagingNodeSpecs {
    int direction;
    struct _Value<bool, &VZ::PagingNodeSpecsDefault::scrollEnabled, false> scrollEnabled;
    struct _Value<bool, &VZ::PagingNodeSpecsDefault::scrollEnabled, false> paging;
    float autoScroll;
    _Bool infiniteLoop;
    struct _Value<float, &VZ::PagingNodeSpecsDefault::animationDuration, false> animationDuration;
    _Bool pageControl;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginLeft;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginRight;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginTop;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginBottom;
    struct _Value<float, &VZ::PagingNodeSpecsDefault::pageControlScale, false> pageControlScale;
    UIColor *pageControlColor;
    UIColor *pageControlSelectedColor;
    CDUnknownBlockType switched;
    _Bool reuseEnabled;
};

struct PeerConnectionDelegateAdapter;

struct PeerConnectionFactoryInterface;

struct PeerConnectionInterface;

struct PickerNodeSpecs {
    NSArray *items;
    struct _Value<long, &VZ::DefaultAttributesValue::selectedIndex, false> selectedIndex;
    CDUnknownBlockType onChange;
};

struct PictureOption {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    char *_field21;
    char *_field22;
    int _field23;
    int _field24;
};

struct PixelBufferOutput;

struct PixelBufferSource;

struct Platform {
    struct Game *_field1;
};

struct PlaylistItemInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct vector<int, std::__1::allocator<int>> _field13;
    basic_string_90719d97 _field14;
    int _field15;
    basic_string_90719d97 _field16;
    int _field17;
    _Bool _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
};

struct PlayoutDelay {
    int _field1;
    int _field2;
};

struct Point_<float> {
    float _field1;
    float _field2;
};

struct PoseMatcher;

struct PositionTransform;

struct PpsState {
    _Bool bottom_field_pic_order_in_frame_present_flag;
    _Bool weighted_pred_flag;
    _Bool entropy_coding_mode_flag;
    unsigned int weighted_bipred_idc;
    unsigned int redundant_pic_cnt_present_flag;
    int pic_init_qp_minus26;
    unsigned int id;
    unsigned int sps_id;
};

struct PriorityQueue {
    struct vector<xrtc::DelayedMessage, std::__1::allocator<xrtc::DelayedMessage>> _field1;
    struct less<xrtc::DelayedMessage> _field2;
};

struct ProcessRWLock;

struct ProfileLevelId {
    int profile;
    int level;
};

struct Properties {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    struct list<gameplay::Properties::Property, std::__1::allocator<gameplay::Properties::Property>> _field4;
    struct __list_iterator<gameplay::Properties::Property, void *> {
        struct __list_node_base<gameplay::Properties::Property, void *> *_field1;
    } _field5;
    struct vector<gameplay::Properties *, std::__1::allocator<gameplay::Properties *>> _field6;
    struct __wrap_iter<gameplay::Properties *const *> {
        struct Properties **_field1;
    } _field7;
    struct vector<gameplay::Properties::Property, std::__1::allocator<gameplay::Properties::Property>> *_field8;
    basic_string_90719d97 *_field9;
    _Bool _field10;
    struct Properties *_field11;
};

struct QuadTreeNode {
    struct QuadTreeNode *_field1;
    struct QuadTreeNode *_field2;
    struct QuadTreeNode *_field3;
    struct QuadTreeNode *_field4;
    struct BoundingBox {
        double _field1;
        double _field2;
        double _field3;
        double _field4;
    } _field5;
    int _field6;
    struct QuadTreeNodeData *_field7;
    int _field8;
};

struct QuadTreeNodeData;

struct Quaternion {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct RCTJSContextData {
    _Bool _field1;
    id _field2;
    id _field3;
};

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RTCStats {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    long long _field3;
};

struct RTCStatsReport {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct map<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>>> _field3;
};

struct RTPFragmentationHeader {
    unsigned short _field1;
    unsigned long long *_field2;
    unsigned long long *_field3;
};

struct RandomAccessBundleData {
    struct unique_ptr<__sFILE, int (*)(__sFILE *)> bundle;
    unsigned long long baseOffset;
    unsigned long long numTableEntries;
    struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> table;
};

struct ReadOptions {
    _Bool verify_checksums;
    _Bool fill_cache;
    struct Snapshot *snapshot;
};

struct Rectangle {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct Ref;

struct RefCountedObject<xrtc::BufferT<unsigned char, false>>;

struct Registers {
    unsigned long long _field1[32];
};

struct RegistryEntry;

struct RemoraConfig {
    _Bool _field1;
    id _field2;
    int _field3;
};

struct RenderConfig {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    float _field6[16];
    struct _opaque_pthread_t *_field7;
    struct vector<void *, std::__1::allocator<void *>> _field8;
    int _field9;
};

struct Rep;

struct RtcpFeedback;

struct RtcpParameters {
    struct optional<unsigned int> _field1;
    basic_string_90719d97 _field2;
    _Bool _field3;
    _Bool _field4;
};

struct RtpCodecParameters {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    struct optional<int> _field4;
    struct optional<int> _field5;
    struct optional<int> _field6;
    struct optional<int> _field7;
    struct vector<xwebrtc::RtcpFeedback, std::__1::allocator<xwebrtc::RtcpFeedback>> _field8;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field9;
};

struct RtpEncodingParameters {
    struct optional<unsigned int> _field1;
    struct optional<int> _field2;
    struct optional<xwebrtc::RtpFecParameters> _field3;
    struct optional<xwebrtc::RtpRtxParameters> _field4;
    struct optional<xwebrtc::DtxStatus> _field5;
    double _field6;
    double _field7;
    struct optional<int> _field8;
    struct optional<int> _field9;
    struct optional<int> _field10;
    struct optional<int> _field11;
    struct optional<int> _field12;
    struct optional<double> _field13;
    struct optional<double> _field14;
    _Bool _field15;
    basic_string_90719d97 _field16;
    vector_ebb6ef3e _field17;
};

struct RtpExtension {
    basic_string_90719d97 _field1;
    int _field2;
    _Bool _field3;
};

struct RtpFecParameters {
    struct optional<unsigned int> _field1;
    int _field2;
};

struct RtpParameters {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct vector<xwebrtc::RtpCodecParameters, std::__1::allocator<xwebrtc::RtpCodecParameters>> _field3;
    struct vector<xwebrtc::RtpExtension, std::__1::allocator<xwebrtc::RtpExtension>> _field4;
    struct vector<xwebrtc::RtpEncodingParameters, std::__1::allocator<xwebrtc::RtpEncodingParameters>> _field5;
    struct RtcpParameters _field6;
    int _field7;
};

struct RtpReceiverDelegateAdapter;

struct RtpReceiverInterface;

struct RtpRtxParameters {
    struct optional<unsigned int> _field1;
};

struct RtpSenderInterface;

struct RtpTransceiverInit {
    int _field1;
    vector_ebb6ef3e _field2;
    struct vector<xwebrtc::RtpEncodingParameters, std::__1::allocator<xwebrtc::RtpEncodingParameters>> _field3;
};

struct RtpTransceiverInterface;

struct SBlock {
    struct Header *_field1;
    unsigned int *_field2;
    char *_field3;
    struct SProtect *_field4;
};

struct SFrame {
    _Bool _field1;
};

struct SMOpusEncInst;

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SMTransporter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct Transport *_field3;
    struct SMTransporterObserver *_field4;
    id _field5;
    id _field6;
    basic_string_90719d97 _field7;
    basic_string_90719d97 _field8;
    basic_string_90719d97 _field9;
    basic_string_90719d97 _field10;
    basic_string_90719d97 _field11;
    basic_string_90719d97 _field12;
    struct CriticalSection {
        struct _opaque_pthread_mutex_t _field1;
    } _field13;
    id _field14;
    double _field15;
    id _field16;
    double _field17;
};

struct SMTransporterObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct SMap {
    struct Header *_field1;
    struct SProtect _field2;
    unsigned int *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    struct SBlock _field7;
    struct SBlock _field8;
};

struct SProtect {
    struct Header *_field1;
    unsigned int _field2;
};

struct SRDelegateAvailableMethods {
    unsigned int didReceiveMessage:1;
    unsigned int didReceiveMessageWithString:1;
    unsigned int didReceiveMessageWithData:1;
    unsigned int didOpen:1;
    unsigned int didFailWithError:1;
    unsigned int didCloseWithCode:1;
    unsigned int didReceivePing:1;
    unsigned int didReceivePong:1;
    unsigned int shouldConvertTextFrameToString:1;
};

struct SampleInfo {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field5;
};

struct Sampler;

struct Scene;

struct ScriptEntry;

struct ScriptTarget;

struct ScrollNodeSpecs {
    struct _Value<VZ::ScrollDirection, &VZ::DefaultFlexAttributesValue::scrollDirection, false> scrollDirection;
    struct _Value<bool, &VZ::DefaultFlexAttributesValue::scrollEnabled, false> scrollEnabled;
    _Bool paging;
    struct _Value<double, &VZ::DefaultFlexAttributesValue::upperThreshold, false> upperThreshold;
    struct _Value<double, &VZ::DefaultFlexAttributesValue::lowerThreshold, false> lowerThreshold;
    CDUnknownBlockType onScroll;
    CDUnknownBlockType onScrollToUpper;
    CDUnknownBlockType onScrollToLower;
    struct _Value<double, &VZ::DefaultFlexAttributesValue::scrollTop, false> scrollTop;
    struct _Value<double, &VZ::DefaultFlexAttributesValue::scrollTop, false> scrollLeft;
    NSString *scrollIntoView;
};

struct SdpVideoFormat {
    basic_string_90719d97 _field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
};

struct SearchData;

struct SearchFlag {
    unsigned int searchState:2;
    struct CGRect searchBarFrame;
};

struct SearchPos;

struct SearchSort {
    struct SearchData *_field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    unsigned short *_field6;
};

struct SearchTree {
    struct Array SearchDataArray;
    struct Array iCachedHits[38];
    struct SearchData *iCurSeachData;
    struct Array iMatchTrace;
    struct Array SearchPosArray;
    int searchPosMallocSize;
    struct SearchPos *searchPosMalloc;
    int searchPosPtrMallocSize;
    struct SearchPos **searchPosPtrArray;
    unsigned short *iMatchFunc;
};

struct Searcher {
    struct ConfigManager *_field1;
    struct ThreadMutex *_field2;
    struct TokenParser *_field3;
};

struct SegmentedControlNodeSpecs {
    NSArray *items;
    CDUnknownBlockType onChange;
    struct _Value<long, &VZ::DefaultAttributesValue::noSegment, false> selectedSegmentedIndex;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> enabled;
};

struct SessionDescriptionInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct SinkPair;

struct Slice {
    char *_field1;
    unsigned long long _field2;
};

struct SmartSlice {
    unsigned long long _field1;
    basic_string_90719d97 _field2;
};

struct SmileCropUtility {
    int _field1;
    int _field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct Snapshot;

struct SocketServer;

struct SpatialLayer {
    unsigned short _field1;
    unsigned short _field2;
    float _field3;
    unsigned char _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
};

struct SpinLock {
    int _l;
};

struct Split;

struct SpsState {
    unsigned int width;
    unsigned int height;
    unsigned int delta_pic_order_always_zero_flag;
    unsigned int separate_colour_plane_flag;
    unsigned int frame_mbs_only_flag;
    unsigned int log2_max_frame_num;
    unsigned int log2_max_pic_order_cnt_lsb;
    unsigned int pic_order_cnt_type;
    unsigned int max_num_ref_frames;
    unsigned int vui_params_present;
    unsigned int id;
};

struct Srtp {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct StackNodeSpecs {
    struct _Value<VZFlexLayoutWrapMode, &VZ::DefaultStackAttributesValue::wrap, false> wrap;
    unsigned int lines;
    unsigned int itemsPerLine;
    struct _Value<VZFlexLayoutDirection, &VZ::DefaultStackAttributesValue::direction, false> direction;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::justifyContent, false> justifyContent;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignItems, false> alignItems;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignContent, false> alignContent;
    struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::spacing, true> spacing;
    struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::lineSpacing, true> lineSpacing;
};

struct StatisticHeader;

struct Stats {
    int _field1;
    int _field2;
};

struct StatsReport {
    struct scoped_refptr<xwebrtc::StatsReport::IdBase> _field1;
    double _field2;
    struct map<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>, std::__1::less<xwebrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>>> _field3;
};

struct StillDetector {
    int widthPrev;
    int heightPrev;
    int normWidth;
    int normHeight;
    float simThreshold;
    float *normDataPrev;
    float *normDataCurr;
};

struct Storage<int, 10, std::__1::allocator<int>> {
    struct CompressedTuple<std::__1::allocator<int>, unsigned long> _field1;
    union Data {
        struct Allocated {
            int *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct Storage<xwebrtc::CodecBufferUsage, 8, std::__1::allocator<xwebrtc::CodecBufferUsage>> {
    struct CompressedTuple<std::__1::allocator<xwebrtc::CodecBufferUsage>, unsigned long> _field1;
    union Data {
        struct Allocated {
            struct CodecBufferUsage *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct Storage<xwebrtc::GenericFrameInfo::DecodeTargetIndication, 10, std::__1::allocator<xwebrtc::GenericFrameInfo::DecodeTargetIndication>> {
    struct CompressedTuple<std::__1::allocator<xwebrtc::GenericFrameInfo::DecodeTargetIndication>, unsigned long> _field1;
    union Data {
        struct Allocated {
            int *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct StreamSession {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    struct function<void (videocore::IStreamSession &, long, void *)> _field6;
    long long _field7;
    int _field8;
    id _field9;
};

struct SubtitleData {
    _Bool _field1;
    long long _field2;
    long long _field3;
    int _field4;
    char *_field5;
    char *_field6;
    char *_field7;
    int _field8;
    struct AssStyle *_field9[0];
};

struct SwitchNodeSpecs {
    _Bool on;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> enabled;
    UIColor *onTintColor;
    UIColor *thumbTintColor;
    CDUnknownBlockType onChange;
};

struct TGCameraConfig {
    float color_intrin[9];
    float depth_intrin[9];
    float color2depth_extrin[16];
    struct TGIRect roiRect;
    _Bool isAligned;
    _Bool isMirror;
};

struct TGCommonConfig {
    int log_level;
    int product_code;
    int useXNN;
    basic_string_90719d97 xnn_engine_config;
};

struct TGConfig {
    struct TGQualityConfig quality_config;
    struct TGLivenessConfig liveness_config;
    struct TGCameraConfig camera_config;
    struct TGCommonConfig common_config;
};

struct TGDataInfo {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    int _field2;
};

struct TGFRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TGFaceAttr {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    struct TGFRect _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    short _field18;
    float _field19[10];
    _Bool _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    int _field28;
    float _field29;
    float _field30;
    int _field31;
    float _field32[8];
    int _field33;
};

struct TGFaceInfo {
    struct TGFrame _field1;
    struct TGFaceAttr _field2;
};

struct TGFrame {
    char *_field1;
    long long _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    int *_field9;
};

struct TGIRect {
    int left;
    int top;
    int right;
    int bottom;
};

struct TGLivenessConfig {
    basic_string_90719d97 liveness_combinations;
    basic_string_90719d97 collection;
    float bat_min_score;
    float dragonfly_min;
    float dragonfly_max;
    float gemini_min;
    float gemini_max;
    float eye_occlusion_threshold;
    float eye_blink_threshold;
    _Bool fpp_pre_processed;
    int faceActionType;
    _Bool detect_before_nano;
};

struct TGQualityConfig {
    int max_face_num;
    int max_face_distance;
    float min_brightness;
    float min_face_width;
    float min_integrity;
    float min_pitch;
    float max_pitch;
    float min_yaw;
    float max_yaw;
    float max_gaussian;
    float max_motion;
    float min_quality;
    float min_iod;
    float max_iod;
    float stack_time;
    float blink_openness;
    float eye_openness;
    float eye_occlusion;
    float quality_depth_min_quality;
    int depth_cache_num;
    int detectImageFormat;
    int detectMode;
    _Bool detectImageLight;
    int img_light;
    int max_image_light;
    _Bool uploadMultiFace;
    _Bool enableAttrDetect;
};

struct TLogBase;

struct TSGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct TemplateStructure {
    int _field1;
    struct vector<xwebrtc::GenericFrameInfo, std::__1::allocator<xwebrtc::GenericFrameInfo>> _field2;
};

struct TextFieldNodeSpecs {
    NSString *text;
    UIColor *color;
    float fontSize;
    NSString *fontName;
    unsigned long long fontStyle;
    long long alignment;
    NSString *placeholder;
    UIColor *placeholderColor;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> editable;
    _Bool secureTextEntry;
    long long keyboardType;
    long long keyboardAppearance;
    long long returnKeyType;
    long long clearButtonMode;
    struct _Value<unsigned long, &VZ::DefaultTextFieldAttrValue::defaultMaxLength, false> maxLength;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> blurOnSubmit;
    struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> autoFocus;
    struct _Value<int, &VZ::DefaultTextFieldAttrValue::cursor, false> cursor;
    struct _Value<int, &VZ::DefaultTextFieldAttrValue::cursor, false> selectionStart;
    struct _Value<int, &VZ::DefaultTextFieldAttrValue::cursor, false> selectionEnd;
    _Bool compareCachedText;
    CDUnknownBlockType onFocus;
    CDUnknownBlockType onBlur;
    CDUnknownBlockType onChange;
    CDUnknownBlockType onSubmit;
    CDUnknownBlockType onEnd;
    UIFont *_font;
    unsigned long long fontWeight;
};

struct TextNodeSpecs {
    NSString *text;
    UIColor *color;
    float fontSize;
    NSString *fontName;
    unsigned long long fontStyle;
    float miniScaleFactor;
    _Bool adjustsFontSize;
    long long baselineAdjustment;
    long long alignment;
    unsigned long long verticalAlignment;
    unsigned long long lineBreakMode;
    unsigned long long truncationMode;
    NSAttributedString *_attributedString;
    struct _Value<unsigned int, &VZ::DefaultFlexAttributesValue::lines, false> lines;
    float kern;
    float lineSpacing;
    UIFont *_font;
    VZFBlockAction *linkAction;
    unsigned long long textDecoration;
    unsigned long long fontWeight;
    float lineHeightMultiple;
    float lineHeight;
};

struct TextViewNodeSpecs {
    NSString *text;
    UIColor *color;
    float fontSize;
    NSString *fontName;
    unsigned long long fontStyle;
    long long alignment;
    NSString *placeholder;
    UIColor *placeholderColor;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> editable;
    struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> autoFocus;
    long long keyboardType;
    long long keyboardAppearance;
    long long returnKeyType;
    struct _Value<unsigned long, &VZ::DefaultTextViewAttrValue::defaultMaxLength, false> maxLength;
    struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> blurOnSubmit;
    _Bool compareCachedText;
    _Bool autoHeight;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> showCount;
    CDUnknownBlockType onFocus;
    CDUnknownBlockType onBlur;
    CDUnknownBlockType onChange;
    CDUnknownBlockType onSubmit;
    CDUnknownBlockType onEnd;
    CDUnknownBlockType onScroll;
    CDUnknownBlockType onHeightChange;
    NSMutableDictionary *heightCache;
    UIFont *_font;
    unsigned long long fontWeight;
};

struct Thread {
    CDUnknownFunctionPointerType *_field1;
    struct signal_with_thread_policy<sigslot::single_threaded> _field2;
    _Bool _field3;
    struct Message _field4;
    struct list<xrtc::Message, std::__1::allocator<xrtc::Message>> _field5;
    struct PriorityQueue _field6;
    unsigned int _field7;
    struct CriticalSection {
        struct _opaque_pthread_mutex_t _field1;
        struct _opaque_pthread_t *_field2;
        int _field3;
    } _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    struct SocketServer *_field12;
    struct unique_ptr<xrtc::SocketServer, std::__1::default_delete<xrtc::SocketServer>> _field13;
    struct list<xrtc::_SendMessage, std::__1::allocator<xrtc::_SendMessage>> _field14;
    basic_string_90719d97 _field15;
    struct _opaque_pthread_t *_field16;
    _Bool _field17;
    _Bool _field18;
};

struct ThreadMutex;

struct ThreadRWLock {
    struct _opaque_pthread_rwlock_t _field1;
};

struct TileReference;

struct TimedEventQueue {
    struct thread _field1;
    struct list<YoukuPlayerNS::TimedEventQueue::QueueItem, std::__1::allocator<YoukuPlayerNS::TimedEventQueue::QueueItem>> _field2;
    struct mutex _field3;
    struct condition_variable _field4;
    struct condition_variable _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    char *_field9;
    struct TLogBase *_field10;
};

struct TimestampAligner {
    int _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct Timing {
    unsigned char _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
};

struct TimingFrameTriggerThresholds {
    long long _field1;
    unsigned short _field2;
};

struct TokenParser;

struct Touch;

struct TouchEvent {
    struct vector<jscore::Touch, std::__1::allocator<jscore::Touch>> _field1;
    int _field2;
};

struct ToygerCallback {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
};

struct ToygerSensorResult {
    _Bool _field1;
    _Bool _field2;
    float _field3;
};

struct TrackResult_ {
    _Bool _field1;
    float _field2[4][4];
    int _field3;
    int _field4;
};

struct TransitionPagingNodeSpecs {
    float autoTransition;
    struct _Value<float, &VZ::TransitionPagingNodeSpecsDefault::animationDuration, false> animationDuration;
    CDUnknownBlockType switched;
};

struct Transport;

struct TransportObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct TurnCustomizer {
    CDUnknownFunctionPointerType *_field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UMatData;

struct URL {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    unsigned short _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
};

struct UniquePtr<jsi::JSContext> {
    struct JSContext *ptr_;
};

struct VZFNodeMountedInfo;

struct VZItemRecyclerState {
    id props;
    id context;
    struct CGSize constrainedSize;
    struct NodeLayout layout;
};

struct VZTVector;

struct Vec2;

struct Vec3;

struct Vector2 {
    float _field1;
    float _field2;
};

struct Vector3 {
    float x;
    float y;
    float z;
};

struct Vector3<float> {
    float _field1;
    float _field2;
    float _field3;
};

struct Vector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vector4<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vertex;

struct VertexFormat {
    struct vector<gameplay::VertexFormat::Element, std::__1::allocator<gameplay::VertexFormat::Element>> _field1;
    unsigned int _field2;
};

struct Video {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoAdapter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct optional<long long> _field9;
    struct optional<std::__1::pair<int, int>> _field10;
    struct optional<int> _field11;
    struct optional<std::__1::pair<int, int>> _field12;
    struct optional<int> _field13;
    struct optional<int> _field14;
    int _field15;
    int _field16;
    int _field17;
    struct CriticalSection {
        struct _opaque_pthread_mutex_t _field1;
        struct _opaque_pthread_t *_field2;
        int _field3;
    } _field18;
};

struct VideoBroadcaster {
    CDUnknownFunctionPointerType *_field1;
    struct vector<xrtc::VideoSourceBase::SinkPair, std::__1::allocator<xrtc::VideoSourceBase::SinkPair>> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct CriticalSection {
        struct _opaque_pthread_mutex_t _field1;
        struct _opaque_pthread_t *_field2;
        int _field3;
    } _field4;
    struct VideoSinkWants _field5;
    struct scoped_refptr<xwebrtc::VideoFrameBuffer> _field6;
    _Bool _field7;
};

struct VideoCodec {
    int _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned char _field11;
    struct SpatialLayer _field12[4];
    struct SpatialLayer _field13[5];
    int _field14;
    _Bool _field15;
    struct TimingFrameTriggerThresholds _field16;
    union VideoCodecUnion _field17;
};

struct VideoCodecH264 {
    _Bool _field1;
    int _field2;
    unsigned char _field3;
};

struct VideoCodecVP8 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoCodecVP9 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    _Bool _field9;
    int _field10;
};

struct VideoDecoder;

struct VideoDecoderFactory;

struct VideoEncoder;

struct VideoEncoderFactory;

struct VideoFrameBuffer;

struct VideoRendererAdapter;

struct VideoSinkInterface<xwebrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
};

struct VideoSinkWants {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    struct optional<int> _field4;
    int _field5;
};

struct VideoTrackInterface;

struct VideoTrackSourceInterface;

struct ViewClass {
    NSString *_identifier;
    CDUnknownBlockType _factory;
    _Bool _isCustom;
};

struct VoiceProcessingAudioUnit;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WriteOptions {
    _Bool sync;
};

struct XRTCConfiguration {
    struct vector<xwebrtc::PeerConnectionInterface::IceServer, std::__1::allocator<xwebrtc::PeerConnectionInterface::IceServer>> _field1;
    int _field2;
    int _field3;
    int _field4;
    struct vector<xrtc::scoped_refptr<xrtc::XRTCCertificate>, std::__1::allocator<xrtc::scoped_refptr<xrtc::XRTCCertificate>>> _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    struct optional<int> _field12;
    struct optional<bool> _field13;
    struct optional<bool> _field14;
    int _field15;
    int _field16;
    int _field17;
    _Bool _field18;
    int _field19;
    _Bool _field20;
    int _field21;
    int _field22;
    int _field23;
    _Bool _field24;
    struct MediaConfig _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    struct optional<int> _field30;
    struct optional<int> _field31;
    struct optional<int> _field32;
    struct optional<int> _field33;
    struct optional<int> _field34;
    struct optional<int> _field35;
    struct optional<int> _field36;
    struct optional<xrtc::IntervalRange> _field37;
    struct TurnCustomizer *_field38;
    struct optional<xrtc::AdapterType> _field39;
    int _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    struct optional<xwebrtc::CryptoOptions> _field45;
    _Bool _field46;
};

struct YGValue {
    float value;
    int unit;
};

struct YTCoreSoftwarePlayerNotify;

struct YoukuPlayer {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    CDUnknownFunctionPointerType *_field6;
    CDUnknownFunctionPointerType *_field7;
    CDUnknownFunctionPointerType *_field8;
    CDUnknownFunctionPointerType *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct AliPlayer *_field11;
    struct shared_ptr<YoukuPlayerNS::Listener> _field12;
    struct TimedEventQueue _field13;
    struct TimedEventQueue _field14;
    struct TimedEventQueue _field15;
    struct TimedEventQueue _field16;
    struct MessageDispatcher _field17;
    _Bool _field18;
    int _field19;
    struct recursive_mutex _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    struct PlaylistItemInfo _field26;
    struct PlaylistItemInfo _field27;
    struct vector<YoukuPlayerNS::PlaylistItemInfo, std::__1::allocator<YoukuPlayerNS::PlaylistItemInfo>> _field28;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field29;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field30;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field31;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field32;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field33;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field34;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field35;
    struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    struct vector<int, std::__1::allocator<int>> _field44;
    struct vector<int, std::__1::allocator<int>> _field45;
    struct vector<int, std::__1::allocator<int>> _field46;
    long long _field47;
    long long _field48;
    _Bool _field49;
    _Bool _field50;
    _Bool _field51;
    _Bool _field52;
    _Bool _field53;
    _Bool _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    int _field58;
    int _field59;
    int _field60;
    struct mutex _field61;
    int _field62;
    int _field63;
    int _field64;
    struct recursive_mutex _field65;
    int _field66;
    long long _field67;
    int _field68;
    struct mutex _field69;
    int _field70;
    int _field71;
    int _field72;
    struct mutex _field73;
    _Bool _field74;
    double _field75;
    long long _field76;
    long long _field77;
    struct RenderConfig _field78;
    int _field79;
    struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> _field80;
    int _field81;
    float _field82;
    float _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    int _field88;
    basic_string_90719d97 _field89;
    int _field90;
    float _field91;
    int _field92;
    int _field93;
    int _field94;
    int _field95;
    int _field96;
    basic_string_90719d97 _field97;
    basic_string_90719d97 _field98;
    struct mutex _field99;
    int _field100;
    _Bool _field101;
    int _field102;
    int _field103;
    long long _field104;
    int _field105;
    int _field106;
    int _field107;
    _Bool _field108;
    int _field109;
    struct mutex _field110;
    int _field111;
    basic_string_90719d97 _field112;
    int _field113;
    struct mutex _field114;
    _Bool _field115;
    _Bool _field116;
    _Bool _field117;
    _Bool _field118;
    float _field119[6];
    int _field120;
    long long _field121;
    long long _field122;
    _Bool _field123;
    _Bool _field124;
    int _field125;
    int _field126;
    int _field127;
    _Bool _field128;
    CDUnknownFunctionPointerType *_field129;
};

struct YunOS_FACE_KEY_POINT_2D {
    float x;
    float y;
};

struct ZFace;

struct _AFWStockLogIO {
    int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
};

struct _AIFinderResult {
    CDStruct_183601bc *_field1;
    CDStruct_a734b2e2 _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct _APLogIO {
    int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
};

struct _DArray;

struct _DecodeInfo {
    long long _field1;
    long long _field2;
    long long _field3;
    struct CGPoint _field4[200];
    struct CGPoint _field5[200];
    struct CGPoint _field6[200];
};

struct _EAGLContextPrivate;

struct _GLKMatrix4 {
    float _field1[16];
};

struct _GLKVector3 {
    float _field1[3];
};

struct _GSModeRuleArchiver {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct _GSSkipValidator {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct _HashMap {
    CDStruct_183601bc **_field1;
    int _field2;
    struct array_list_t *_field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
};

struct _MAProjectionContext {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
};

struct _MSSDKFileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _StatefulValue<NSString *, true> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct _StatefulValue<UIColor *, true> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, UIColor *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct _StatefulValue<UIImage *, true> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, UIImage *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct _TemplateFileNameBody {
    id _field1;
    id _field2;
    id _field3;
};

struct _Value<CGSize, &CGSizeZero, true> {
    double width;
    double height;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::flexBasis, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::height, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::margin, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginBottom, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginLeft, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginRight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginTop, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxHeight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxWidth, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::minHeight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::minWidth, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::padding, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingBottom, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingLeft, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingRight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingTop, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::width, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::lineSpacing, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::spacing, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> {
    float value;
    int type;
};

struct _Value<MKCoordinateRegion, &VZ::DefaultAttributesValue::undefinedRegion, true> {
    struct CLLocationCoordinate2D center;
    CDStruct_951efa70 span;
};

struct _Value<UIColor *, &VZ::DefaultAttributesValue::backgroundColor, false> {
    UIColor *value;
};

struct _Value<UIColor *, &VZ::DefaultAttributesValue::highlightBackgroundColor, false> {
    UIColor *value;
};

struct _Value<VZ::ScrollDirection, &VZ::DefaultFlexAttributesValue::scrollDirection, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultAttributesValue::alignSelf, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignContent, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignItems, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::justifyContent, false> {
    int value;
};

struct _Value<VZFlexLayoutDirection, &VZ::DefaultStackAttributesValue::direction, false> {
    int value;
};

struct _Value<VZFlexLayoutWrapMode, &VZ::DefaultStackAttributesValue::wrap, false> {
    int value;
};

struct _Value<bool, &VZ::DefaultAttributesValue::fixed, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultFlexAttributesValue::scrollEnabled, false> {
    _Bool value;
};

struct _Value<bool, &VZ::PagingNodeSpecsDefault::scrollEnabled, false> {
    _Bool value;
};

struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> {
    double value;
};

struct _Value<double, &VZ::DefaultFlexAttributesValue::lowerThreshold, false> {
    double value;
};

struct _Value<double, &VZ::DefaultFlexAttributesValue::scrollTop, false> {
    double value;
};

struct _Value<double, &VZ::DefaultFlexAttributesValue::upperThreshold, false> {
    double value;
};

struct _Value<float, &VZ::DefaultAttributesValue::alpha, false> {
    float value;
};

struct _Value<float, &VZ::DefaultAttributesValue::flexGrow, false> {
    float value;
};

struct _Value<float, &VZ::DefaultAttributesValue::flexShrink, false> {
    float value;
};

struct _Value<float, &VZ::PagingNodeSpecsDefault::animationDuration, false> {
    float value;
};

struct _Value<float, &VZ::PagingNodeSpecsDefault::pageControlScale, false> {
    float value;
};

struct _Value<float, &VZ::TransitionPagingNodeSpecsDefault::animationDuration, false> {
    float value;
};

struct _Value<int, &VZ::DefaultAttributesValue::userInteractionEnabled, false> {
    int value;
};

struct _Value<int, &VZ::DefaultTextFieldAttrValue::cursor, false> {
    int value;
};

struct _Value<long, &VZ::DefaultAttributesValue::noSegment, false> {
    long long value;
};

struct _Value<long, &VZ::DefaultAttributesValue::selectedIndex, false> {
    long long value;
};

struct _Value<unsigned int, &VZ::DefaultFlexAttributesValue::lines, false> {
    unsigned int value;
};

struct _Value<unsigned long, &VZ::DefaultTextFieldAttrValue::defaultMaxLength, false> {
    unsigned long long value;
};

struct _Value<unsigned long, &VZ::DefaultTextViewAttrValue::defaultMaxLength, false> {
    unsigned long long value;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*> *__next_;
};

struct __list_node_base<YoukuPlayerNS::TimedEventQueue::QueueItem, void *> {
    struct __list_node_base<YoukuPlayerNS::TimedEventQueue::QueueItem, void *> *_field1;
    struct __list_node_base<YoukuPlayerNS::TimedEventQueue::QueueItem, void *> *_field2;
};

struct __list_node_base<gameplay::Properties::Property, void *> {
    struct __list_node_base<gameplay::Properties::Property, void *> *_field1;
    struct __list_node_base<gameplay::Properties::Property, void *> *_field2;
};

struct __list_node_base<sigslot::_opaque_connection, void *> {
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field2;
};

struct __list_node_base<std::__1::function<void ()>, void *> {
    struct __list_node_base<std::__1::function<void ()>, void *> *_field1;
    struct __list_node_base<std::__1::function<void ()>, void *> *_field2;
};

struct __list_node_base<xrtc::Message, void *> {
    struct __list_node_base<xrtc::Message, void *> *_field1;
    struct __list_node_base<xrtc::Message, void *> *_field2;
};

struct __list_node_base<xrtc::_SendMessage, void *> {
    struct __list_node_base<xrtc::_SendMessage, void *> *_field1;
    struct __list_node_base<xrtc::_SendMessage, void *> *_field2;
};

struct __list_node_base<xwebrtc::ObserverInterface *, void *> {
    struct __list_node_base<xwebrtc::ObserverInterface *, void *> *_field1;
    struct __list_node_base<xwebrtc::ObserverInterface *, void *> *_field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_cond_t {
    long long _field1;
    char _field2[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _opaque_pthread_t;

struct _timer_param {
    long long _field1;
    int _field2;
    void *_field3;
    long long _field4;
};

struct _tts_config {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
};

struct _tts_play_callback {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct _tts_play_param {
    struct tts_session_internal *_field1;
    void *_field2;
    long long _field3;
    char *_field4;
    int _field5;
};

struct _util {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
    CDUnknownFunctionPointerType _field24;
    CDUnknownFunctionPointerType _field25;
    CDUnknownFunctionPointerType _field26;
    CDUnknownFunctionPointerType _field27;
    CDUnknownFunctionPointerType _field28;
    CDUnknownFunctionPointerType _field29;
    CDUnknownFunctionPointerType _field30;
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct _vm_param {
    int _field1;
    union {
        int _field1;
        unsigned char _field2;
        int _field3;
        long long _field4;
        float _field5;
        double _field6;
        char *_field7;
        struct _byte_data {
            char *_field1;
            int _field2;
            int _field3;
        } _field8;
    } _field2;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlKind {
    void *_field1;
    int _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlStd {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlStd *_field7;
    struct _xmlStd *_field8;
    struct _xmlDoc *_field9;
};

struct ahp3_t {
    void *_field1;
    CDStruct_0fcf6aa1 _field2;
    struct {
        char *_field1;
        int _field2;
        unsigned int _field3;
        char *_field4;
        int _field5;
        int _field6;
        char *_field7;
        char *_field8;
        int _field9;
        int _field10;
        unsigned int *_field11;
    } _field3;
    struct {
        char *_field1;
        char *_field2;
        char *_field3;
        unsigned int _field4;
        int _field5;
        int _field6;
        CDStruct_0fcf6aa1 _field7;
    } _field4;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        int _field4;
    } _field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned long long _field10;
};

struct am_indoor_struct {
    char _field1[64];
    char _field2[64];
    char _field3[8];
    int _field4;
    char _field5[20];
    char _field6[8];
    int _field7;
    int *_field8;
    char **_field9;
    char **_field10;
    int _field11;
    int *_field12;
    float _field13;
};

struct am_map_grid_building;

struct am_maptile_struct {
    char _field1[21];
    char _field2[20];
    short _field3;
    unsigned short _field4;
};

struct apbtoyger_tip_evaluator_t {
    _Bool pose_end;
    _Bool has_face;
    _Bool did_blink;
    _Bool pos_okay;
    _Bool quality_okay;
    _Bool under_exposure;
    _Bool face_width_too_small;
    _Bool face_width_too_big;
    _Bool integrity_fail;
    _Bool yaw_fail;
    _Bool pitch_fail;
    _Bool tremble_fail;
    _Bool did_checkSeven;
    int tip_timer_wait_cnt;
    _Bool tip_show_switch;
    int tip_message;
};

struct array_list_t;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct cameraEulerAngle {
    double yaw;
    double pitch;
    double roll;
};

struct cameraVec3 {
    double x;
    double y;
    double z;
};

struct camera_configuration_t {
    struct CGPoint focusPointOfInterest;
};

struct coll_msg_field_info;

struct coll_msg_field_infos {
    struct coll_msg_field_info *_field1;
    int _field2;
};

struct condition_variable {
    struct _opaque_pthread_cond_t _field1;
};

struct css_node {
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        float _field9;
        float _field10[6];
        float _field11[4];
        float _field12[6];
        float _field13[6];
        float _field14[2];
        float _field15[2];
        float _field16[2];
    } _field1;
    struct {
        float _field1[4];
        float _field2[2];
        int _field3;
        _Bool _field4;
        float _field5[2];
        float _field6;
        float _field7[2];
        float _field8[2];
        int _field9;
    } _field2;
    int _field3;
    int _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    void *_field9;
};

struct dummy_type {
    struct empty_struct data[8];
};

struct empty_struct;

struct fbJSON;

struct fb_core {
    struct fb_node *_field1;
    struct fb_node *_field2;
    struct fb_node *_field3;
    struct fb_script *_field4;
    char *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    CDStruct_183601bc *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    void *_field12;
    CDStruct_183601bc *_field13;
    CDStruct_183601bc *_field14;
    CDStruct_183601bc *_field15;
    CDStruct_e2b8aef9 _field16;
    CDStruct_e2b8aef9 _field17;
    CDStruct_e2b8aef9 _field18;
    CDStruct_e2b8aef9 _field19;
    CDStruct_e2b8aef9 _field20;
    struct {
        CDStruct_a086822f _field1;
        CDStruct_183601bc **_field2;
        CDStruct_183601bc *_field3;
    } _field21;
    struct fbJSON *_field22;
    char *_field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    CDUnknownFunctionPointerType _field28;
};

struct fb_node {
    struct css_node _field1;
    CDStruct_e2b8aef9 _field2;
    CDStruct_e2b8aef9 _field3;
    struct {
        CDStruct_a086822f _field1;
        struct fb_script_cb **_field2;
        struct fb_script_cb *_field3;
    } _field4;
    CDStruct_183601bc *_field5;
    char *_field6;
    int _field7;
    struct fb_node *_field8;
    struct fb_node **_field9;
    int _field10;
    int _field11;
    float _field12[2];
    float _field13[2];
    int _field14;
    void *_field15;
    void *_field16;
};

struct fb_script;

struct fb_script_cb;

struct function<void (videocore::IStreamSession &, long, void *)> {
    struct type _field1;
    struct __base<void (videocore::IStreamSession &, long, void *)> *_field2;
};

struct gyro_accumlate {
    float _field1;
    float _field2;
    float _field3;
};

struct in6_addr {
    union {
        unsigned char __u6_addr8[16];
        unsigned short __u6_addr16[8];
        unsigned int __u6_addr32[4];
    } __u6_addr;
};

struct in_addr {
    unsigned int _field1;
};

struct input_rule {
    char *_field1;
    unsigned char _field2[36];
    unsigned char _field3[36];
    char *_field4;
    char *_field5;
    char *_field6;
};

struct internal_state;

struct irrAllocator<TileReference> {
    CDUnknownFunctionPointerType *_field1;
};

struct irrAllocator<unsigned long long> {
    CDUnknownFunctionPointerType *_field1;
};

struct less<xrtc::DelayedMessage>;

struct list<YoukuPlayerNS::TimedEventQueue::QueueItem, std::__1::allocator<YoukuPlayerNS::TimedEventQueue::QueueItem>> {
    struct __list_node_base<YoukuPlayerNS::TimedEventQueue::QueueItem, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<YoukuPlayerNS::TimedEventQueue::QueueItem, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<gameplay::Properties::Property, std::__1::allocator<gameplay::Properties::Property>> {
    struct __list_node_base<gameplay::Properties::Property, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gameplay::Properties::Property, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<gameplay::Transform::TransformListener, std::__1::allocator<gameplay::Transform::TransformListener>>;

struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> {
    struct __list_node_base<sigslot::_opaque_connection, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::function<void ()>, std::__1::allocator<std::__1::function<void ()>>> {
    struct __list_node_base<std::__1::function<void ()>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::function<void ()>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<xrtc::Message, std::__1::allocator<xrtc::Message>> {
    struct __list_node_base<xrtc::Message, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<xrtc::Message, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<xrtc::_SendMessage, std::__1::allocator<xrtc::_SendMessage>> {
    struct __list_node_base<xrtc::_SendMessage, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<xrtc::_SendMessage, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<xwebrtc::ObserverInterface *, std::__1::allocator<xwebrtc::ObserverInterface *>> {
    struct __list_node_base<xwebrtc::ObserverInterface *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<xwebrtc::ObserverInterface *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct load_command {
    unsigned int _field1;
    unsigned int _field2;
};

struct map<ACKString, ACKString, std::__1::less<ACKString>, std::__1::allocator<std::__1::pair<const ACKString, ACKString>>> {
    struct __tree<std::__1::__value_type<ACKString, ACKString>, std::__1::__map_value_compare<ACKString, std::__1::__value_type<ACKString, ACKString>, std::__1::less<ACKString>, true>, std::__1::allocator<std::__1::__value_type<ACKString, ACKString>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ACKString, ACKString>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<ACKString, std::__1::__value_type<ACKString, ACKString>, std::__1::less<ACKString>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const gameplay::ScriptTarget::Event *, std::__1::vector<gameplay::ScriptTarget::CallbackFunction, std::__1::allocator<gameplay::ScriptTarget::CallbackFunction>>, std::__1::less<const gameplay::ScriptTarget::Event *>, std::__1::allocator<std::__1::pair<const gameplay::ScriptTarget::Event *const, std::__1::vector<gameplay::ScriptTarget::CallbackFunction, std::__1::allocator<gameplay::ScriptTarget::CallbackFunction>>>>>;

struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> {
    struct __tree<std::__1::__value_type<int, unsigned long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, GFrameBufferObject, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GFrameBufferObject>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, GFrameBufferObject>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, GFrameBufferObject>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, GFrameBufferObject>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, GFrameBufferObject>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, GFrameBufferObject>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const xwebrtc::RTCStats, std::__1::default_delete<const xwebrtc::RTCStats>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>, std::__1::less<xwebrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>>> {
    struct __tree<std::__1::__value_type<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>, std::__1::__map_value_compare<xwebrtc::StatsReport::StatsValueName, std::__1::__value_type<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>, std::__1::less<xwebrtc::StatsReport::StatsValueName>, true>, std::__1::allocator<std::__1::__value_type<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<xwebrtc::StatsReport::StatsValueName, std::__1::__value_type<xwebrtc::StatsReport::StatsValueName, xrtc::scoped_refptr<xwebrtc::StatsReport::Value>>, std::__1::less<xwebrtc::StatsReport::StatsValueName>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map_node_t;

struct multimap<std::__1::pair<int, int>, GFrameBufferObject *, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, GFrameBufferObject *>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<int, int>, GFrameBufferObject *>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, GFrameBufferObject *>, std::__1::less<std::__1::pair<int, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, GFrameBufferObject *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, GFrameBufferObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, GFrameBufferObject *>, std::__1::less<std::__1::pair<int, int>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct optional<RTCVideoRotation> {
    _Bool engaged_;
    CDUnion_019de37f ;
};

struct optional<bool> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        _Bool data_;
    } ;
};

struct optional<double> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        double _field2;
    } _field2;
};

struct optional<float> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        float data_;
    } ;
};

struct optional<int> {
    _Bool engaged_;
    CDUnion_1bb239ac ;
};

struct optional<long long> {
    _Bool _field1;
    CDUnion_019de37f _field2;
};

struct optional<std::__1::pair<int, int>> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct pair<int, int> _field2;
    } _field2;
};

struct optional<unsigned int> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        unsigned int _field2;
    } _field2;
};

struct optional<xrtc::AdapterType> {
    _Bool _field1;
    CDUnion_1bb239ac _field2;
};

struct optional<xrtc::IntervalRange> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct IntervalRange _field2;
    } _field2;
};

struct optional<xwebrtc::ColorSpace> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct ColorSpace _field2;
    } _field2;
};

struct optional<xwebrtc::CryptoOptions> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct CryptoOptions _field2;
    } _field2;
};

struct optional<xwebrtc::DtxStatus> {
    _Bool _field1;
    CDUnion_1bb239ac _field2;
};

struct optional<xwebrtc::GenericFrameInfo> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct GenericFrameInfo _field2;
    } _field2;
};

struct optional<xwebrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct ProfileLevelId data_;
    } ;
};

struct optional<xwebrtc::HdrMetadata> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct HdrMetadata _field2;
    } _field2;
};

struct optional<xwebrtc::PpsParser::PpsState> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct PpsState data_;
    } ;
};

struct optional<xwebrtc::RtpFecParameters> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RtpFecParameters _field2;
    } _field2;
};

struct optional<xwebrtc::RtpRtxParameters> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RtpRtxParameters _field2;
    } _field2;
};

struct optional<xwebrtc::SpsParser::SpsState> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct SpsState data_;
    } ;
};

struct optional<xwebrtc::TemplateStructure> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct TemplateStructure _field2;
    } _field2;
};

struct optional<xwebrtc::VideoTrackSourceInterface::Stats> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct Stats _field2;
    } _field2;
};

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct priority_queue<gameplay::Game::TimeEvent, std::__1::vector<gameplay::Game::TimeEvent, std::__1::allocator<gameplay::Game::TimeEvent>>, std::__1::less<gameplay::Game::TimeEvent>>;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct requestConfig {
    _Bool isHTTPs;
    unsigned long long stringEncoding;
    double requestTimeoutSeconds;
    unsigned long long cachePolicy;
    unsigned long long cacheTime;
    int requestMethod;
};

struct responseConfig {
    int responseType;
};

struct sPhyCamData {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct sRectInfoData {
    int x;
    int y;
    int width;
    int height;
    _Bool isLost;
};

struct sRenderModelData {
    float _field1;
    float _field2;
    float _field3;
    _Bool _field4;
};

struct sTrackPicData {
    int _field1;
    int _field2;
};

struct sVirtualCamData {
    float _field1;
    int _field2;
    int _field3;
    float _field4;
};

struct scoped_refptr<xrtc::RefCountedObject<xrtc::BufferT<unsigned char, false>>> {
    struct RefCountedObject<xrtc::BufferT<unsigned char, false>> *ptr_;
};

struct scoped_refptr<xrtc::XRTCCertificate>;

struct scoped_refptr<xwebrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
};

struct scoped_refptr<xwebrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
};

struct scoped_refptr<xwebrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
};

struct scoped_refptr<xwebrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
};

struct scoped_refptr<xwebrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
};

struct scoped_refptr<xwebrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
};

struct scoped_refptr<xwebrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
};

struct scoped_refptr<xwebrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
};

struct scoped_refptr<xwebrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
};

struct scoped_refptr<xwebrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
};

struct scoped_refptr<xwebrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
};

struct scoped_refptr<xwebrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
};

struct scoped_refptr<xwebrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
};

struct scoped_refptr<xwebrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
};

struct scoped_refptr<xwebrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
};

struct scoped_refptr<xwebrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
};

struct scoped_refptr<xwebrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
};

struct scoped_refptr<xwebrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
};

struct scoped_refptr<xwebrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
};

struct scoped_refptr<xwebrtc::StatsReport::IdBase> {
    struct IdBase *_field1;
};

struct scoped_refptr<xwebrtc::VideoFrameBuffer> {
    struct VideoFrameBuffer *_field1;
};

struct scoped_refptr<xwebrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
};

struct scoped_refptr<xwebrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
};

struct search_result_t {
    struct _DArray *_field1;
    unsigned int _field2;
    unsigned int _field3;
    _Bool _field4;
};

struct sensorResult {
    _Bool _field1;
    _Bool _field2;
    float _field3;
    vector_7584168e _field4;
};

struct sensor_slice_data;

struct set<APBEventType, std::__1::less<APBEventType>, std::__1::allocator<APBEventType>> {
    struct __tree<APBEventType, std::__1::less<APBEventType>, std::__1::allocator<APBEventType>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<APBEventType, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<APBEventType>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<Classify> {
    struct Classify *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<Detect> {
    struct Detect *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<HandKpDet> {
    struct HandKpDet *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<HumanPoseDetect> {
    struct HumanPoseDetect *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<OCR> {
    struct OCR *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PoseMatcher> {
    struct PoseMatcher *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<VZ::FluxAction> {
    struct FluxAction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<YTCoreSoftwarePlayerNotify> {
    struct YTCoreSoftwarePlayerNotify *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<YoukuPlayerNS::Listener> {
    struct Listener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<YoukuPlayerNS::TimedEventQueue::Event> {
    struct Event *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<bif::cache::MappedFile> {
    struct MappedFile *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<bif::cache::ProcessRWLock> {
    struct ProcessRWLock *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jscore::MessageChannelIOS> {
    struct MessageChannelIOS *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>>> {
    vector_64923fe0 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Apple::MP4Multiplexer> {
    struct MP4Multiplexer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Apple::PixelBufferSource> {
    struct PixelBufferSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::AspectTransform> {
    struct AspectTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IAudioMixer> {
    struct IAudioMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IOutputSession> {
    struct IOutputSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::ITransform> {
    struct ITransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IVideoMixer> {
    struct IVideoMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::PositionTransform> {
    struct PositionTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Split> {
    struct Split *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::MicSource> {
    struct MicSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::simpleApi::PixelBufferOutput> {
    struct PixelBufferOutput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct signal_with_thread_policy<sigslot::single_threaded> {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> _field3;
    struct __list_iterator<sigslot::_opaque_connection, void *> {
        struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    } _field4;
    _Bool _field5;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char sin6_len;
    unsigned char sin6_family;
    unsigned short sin6_port;
    unsigned int sin6_flowinfo;
    struct in6_addr sin6_addr;
    unsigned int sin6_scope_id;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct tagAMAPSRVPROJECTION {
    void *_field1;
};

struct thread {
    struct _opaque_pthread_t *_field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_unz_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tts_session_internal;

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> {
    struct __compressed_pair<ModuleData *, std::__1::default_delete<ModuleData []>> {
        struct ModuleData *__value_;
    } __ptr_;
};

struct unique_ptr<VZFNodeMountedInfo, std::__1::default_delete<VZFNodeMountedInfo>> {
    struct __compressed_pair<VZFNodeMountedInfo *, std::__1::default_delete<VZFNodeMountedInfo>> {
        struct VZFNodeMountedInfo *__value_;
    } __ptr_;
};

struct unique_ptr<__sFILE, int (*)(__sFILE *)> {
    struct __compressed_pair<__sFILE *, int (*)(__sFILE *)> {
        struct __sFILE *__value_;
        CDUnknownFunctionPointerType __value_;
    } __ptr_;
};

struct unique_ptr<signed char [], std::__1::default_delete<signed char []>> {
    struct __compressed_pair<signed char *, std::__1::default_delete<signed char []>> {
        char *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> {
    struct __compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []>> {
        char *_field1;
    } _field1;
};

struct unique_ptr<xrtc::BitrateAllocationStrategy, std::__1::default_delete<xrtc::BitrateAllocationStrategy>> {
    struct __compressed_pair<xrtc::BitrateAllocationStrategy *, std::__1::default_delete<xrtc::BitrateAllocationStrategy>> {
        struct BitrateAllocationStrategy *_field1;
    } _field1;
};

struct unique_ptr<xrtc::IntervalRange, std::__1::default_delete<xrtc::IntervalRange>> {
    struct __compressed_pair<xrtc::IntervalRange *, std::__1::default_delete<xrtc::IntervalRange>> {
        struct IntervalRange *_field1;
    } _field1;
};

struct unique_ptr<xrtc::SocketServer, std::__1::default_delete<xrtc::SocketServer>> {
    struct __compressed_pair<xrtc::SocketServer *, std::__1::default_delete<xrtc::SocketServer>> {
        struct SocketServer *_field1;
    } _field1;
};

struct unique_ptr<xrtc::Thread, std::__1::default_delete<xrtc::Thread>> {
    struct __compressed_pair<xrtc::Thread *, std::__1::default_delete<xrtc::Thread>> {
        struct Thread *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::BitrateAdjuster, std::__1::default_delete<xwebrtc::BitrateAdjuster>> {
    struct __compressed_pair<xwebrtc::BitrateAdjuster *, std::__1::default_delete<xwebrtc::BitrateAdjuster>> {
        struct BitrateAdjuster *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::DataBuffer, std::__1::default_delete<xwebrtc::DataBuffer>> {
    struct __compressed_pair<xwebrtc::DataBuffer *, std::__1::default_delete<xwebrtc::DataBuffer>> {
        struct DataBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::DataChannelDelegateAdapter, std::__1::default_delete<xwebrtc::DataChannelDelegateAdapter>> {
    struct __compressed_pair<xwebrtc::DataChannelDelegateAdapter *, std::__1::default_delete<xwebrtc::DataChannelDelegateAdapter>> {
        struct DataChannelDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::IceCandidateInterface, std::__1::default_delete<xwebrtc::IceCandidateInterface>> {
    struct __compressed_pair<xwebrtc::IceCandidateInterface *, std::__1::default_delete<xwebrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
};

struct unique_ptr<xwebrtc::MediaConstraints, std::__1::default_delete<xwebrtc::MediaConstraints>> {
    struct __compressed_pair<xwebrtc::MediaConstraints *, std::__1::default_delete<xwebrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::MediaTransportFactory, std::__1::default_delete<xwebrtc::MediaTransportFactory>> {
    struct __compressed_pair<xwebrtc::MediaTransportFactory *, std::__1::default_delete<xwebrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::NetworkControllerFactoryInterface, std::__1::default_delete<xwebrtc::NetworkControllerFactoryInterface>> {
    struct __compressed_pair<xwebrtc::NetworkControllerFactoryInterface *, std::__1::default_delete<xwebrtc::NetworkControllerFactoryInterface>> {
        struct NetworkControllerFactoryInterface *_field1;
    } _field1;
};

struct unique_ptr<xwebrtc::PeerConnectionDelegateAdapter, std::__1::default_delete<xwebrtc::PeerConnectionDelegateAdapter>> {
    struct __compressed_pair<xwebrtc::PeerConnectionDelegateAdapter *, std::__1::default_delete<xwebrtc::PeerConnectionDelegateAdapter>> {
        struct PeerConnectionDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::RTPFragmentationHeader, std::__1::default_delete<xwebrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<xwebrtc::RTPFragmentationHeader *, std::__1::default_delete<xwebrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
};

struct unique_ptr<xwebrtc::RtpReceiverDelegateAdapter, std::__1::default_delete<xwebrtc::RtpReceiverDelegateAdapter>> {
    struct __compressed_pair<xwebrtc::RtpReceiverDelegateAdapter *, std::__1::default_delete<xwebrtc::RtpReceiverDelegateAdapter>> {
        struct RtpReceiverDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::VideoDecoder, std::__1::default_delete<xwebrtc::VideoDecoder>> {
    struct __compressed_pair<xwebrtc::VideoDecoder *, std::__1::default_delete<xwebrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::VideoDecoderFactory, std::__1::default_delete<xwebrtc::VideoDecoderFactory>> {
    struct __compressed_pair<xwebrtc::VideoDecoderFactory *, std::__1::default_delete<xwebrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::VideoEncoder, std::__1::default_delete<xwebrtc::VideoEncoder>> {
    struct __compressed_pair<xwebrtc::VideoEncoder *, std::__1::default_delete<xwebrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::VideoEncoderFactory, std::__1::default_delete<xwebrtc::VideoEncoderFactory>> {
    struct __compressed_pair<xwebrtc::VideoEncoderFactory *, std::__1::default_delete<xwebrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<xwebrtc::VideoRendererAdapter, std::__1::default_delete<xwebrtc::VideoRendererAdapter>> {
    struct __compressed_pair<xwebrtc::VideoRendererAdapter *, std::__1::default_delete<xwebrtc::VideoRendererAdapter>> {
        struct VideoRendererAdapter *__value_;
    } __ptr_;
};

struct unordered_map<NSString *, bool, VZ::NSStringHashFunctor, VZ::NSStringEqualFunctor, std::__1::allocator<std::__1::pair<NSString *const, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, bool>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringHashFunctor, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringEqualFunctor, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringHashFunctor, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringEqualFunctor, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GFontGlyphInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GFontGlyphInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GFontGlyphInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, std::__1::hash<long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, YoukuPlayerNS::MessageDispatcher::Dispatcher>, std::__1::equal_to<long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<bif::cache::Entry>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph, key_hash, key_equal, std::__1::allocator<std::__1::pair<const std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, std::__1::__unordered_map_hasher<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, key_hash, true>, std::__1::__unordered_map_equal<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, key_equal, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, key_hash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, std::__1::__hash_value_type<std::__1::tuple<std::__1::basic_string<char>, wchar_t, std::__1::basic_string<char>, bool>, GGlyph>, key_equal, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unz_file_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    struct tm_unz_s _field15;
};

struct vImage_Buffer {
    void *data;
    unsigned long long height;
    unsigned long long width;
    unsigned long long rowBytes;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
};

struct vector<CKStyleRect, std::__1::allocator<CKStyleRect>> {
    struct CKStyleRect *__begin_;
    struct CKStyleRect *__end_;
    struct __compressed_pair<CKStyleRect *, std::__1::allocator<CKStyleRect>> {
        struct CKStyleRect *__value_;
    } __end_cap_;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *_field1;
    struct CLLocationCoordinate2D *_field2;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *_field1;
    } _field3;
};

struct vector<FeaturePoint, std::__1::allocator<FeaturePoint>> {
    struct FeaturePoint *__begin_;
    struct FeaturePoint *__end_;
    struct __compressed_pair<FeaturePoint *, std::__1::allocator<FeaturePoint>> {
        struct FeaturePoint *__value_;
    } __end_cap_;
};

struct vector<GCanvasState, std::__1::allocator<GCanvasState>> {
    struct GCanvasState *_field1;
    struct GCanvasState *_field2;
    struct __compressed_pair<GCanvasState *, std::__1::allocator<GCanvasState>> {
        struct GCanvasState *_field1;
    } _field3;
};

struct vector<GCanvasVertexShaderProperty, std::__1::allocator<GCanvasVertexShaderProperty>> {
    struct GCanvasVertexShaderProperty *_field1;
    struct GCanvasVertexShaderProperty *_field2;
    struct __compressed_pair<GCanvasVertexShaderProperty *, std::__1::allocator<GCanvasVertexShaderProperty>> {
        struct GCanvasVertexShaderProperty *_field1;
    } _field3;
};

struct vector<GPoint, std::__1::allocator<GPoint>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<GPoint *, std::__1::allocator<GPoint>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<MA3DModleObjFile::Vec2, std::__1::allocator<MA3DModleObjFile::Vec2>> {
    struct Vec2 *_field1;
    struct Vec2 *_field2;
    struct __compressed_pair<MA3DModleObjFile::Vec2 *, std::__1::allocator<MA3DModleObjFile::Vec2>> {
        struct Vec2 *_field1;
    } _field3;
};

struct vector<MA3DModleObjFile::Vec3, std::__1::allocator<MA3DModleObjFile::Vec3>> {
    struct Vec3 *_field1;
    struct Vec3 *_field2;
    struct __compressed_pair<MA3DModleObjFile::Vec3 *, std::__1::allocator<MA3DModleObjFile::Vec3>> {
        struct Vec3 *_field1;
    } _field3;
};

struct vector<MA3DModleObjFile::Vertex, std::__1::allocator<MA3DModleObjFile::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MA3DModleObjFile::Vertex *, std::__1::allocator<MA3DModleObjFile::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<MAClipper::IntersectState *, std::__1::allocator<MAClipper::IntersectState>> {
        int *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MAGradientColoredLine::Vertex *, std::__1::allocator<MAGradientColoredLine::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MANormalLineBuilder::Vertex *, std::__1::allocator<MANormalLineBuilder::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MeshFeature, autonavi::irrAllocator<MeshFeature>>;

struct vector<PointFeature<short>*, autonavi::irrAllocator<PointFeature<short>*>>;

struct vector<PolygonFeature<short>*, autonavi::irrAllocator<PolygonFeature<short>*>>;

struct vector<RoadFeature<short>*, autonavi::irrAllocator<RoadFeature<short>*>>;

struct vector<TGFrame, std::__1::allocator<TGFrame>> {
    struct TGFrame *__begin_;
    struct TGFrame *__end_;
    struct __compressed_pair<TGFrame *, std::__1::allocator<TGFrame>> {
        struct TGFrame *__value_;
    } __end_cap_;
};

struct vector<TileReference, autonavi::irrAllocator<TileReference>> {
    struct TileReference *_field1;
    unsigned int _field2;
    unsigned int _field3;
    struct irrAllocator<TileReference> _field4;
    unsigned int :4;
    unsigned int :1;
};

struct vector<UIView *, std::__1::allocator<UIView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UIView *__strong *, std::__1::allocator<UIView *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<VZ::MapAnnotationSpecs, std::__1::allocator<VZ::MapAnnotationSpecs>> {
    struct MapAnnotationSpecs *__begin_;
    struct MapAnnotationSpecs *__end_;
    struct __compressed_pair<VZ::MapAnnotationSpecs *, std::__1::allocator<VZ::MapAnnotationSpecs>> {
        struct MapAnnotationSpecs *__value_;
    } __end_cap_;
};

struct vector<VZ::MapOverlaySpecs, std::__1::allocator<VZ::MapOverlaySpecs>> {
    struct MapOverlaySpecs *__begin_;
    struct MapOverlaySpecs *__end_;
    struct __compressed_pair<VZ::MapOverlaySpecs *, std::__1::allocator<VZ::MapOverlaySpecs>> {
        struct MapOverlaySpecs *__value_;
    } __end_cap_;
};

struct vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>> {
    struct NodeLayout *__begin_;
    struct NodeLayout *__end_;
    struct __compressed_pair<VZ::NodeLayout *, std::__1::allocator<VZ::NodeLayout>> {
        struct NodeLayout *__value_;
    } __end_cap_;
};

struct vector<VZFBlockGesture *, std::__1::allocator<VZFBlockGesture *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VZFBlockGesture *__strong *, std::__1::allocator<VZFBlockGesture *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<VZFNode *, std::__1::allocator<VZFNode *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VZFNode *__strong *, std::__1::allocator<VZFNode *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<VZFStackChildNode, std::__1::allocator<VZFStackChildNode>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VZFStackChildNode *, std::__1::allocator<VZFStackChildNode>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
};

struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> {
    struct Vector4<float> *_field1;
    struct Vector4<float> *_field2;
    struct __compressed_pair<Vector4<float>*, std::__1::allocator<Vector4<float>>> {
        struct Vector4<float> *_field1;
    } _field3;
};

struct vector<YoukuPlayerNS::PlaylistItemInfo, std::__1::allocator<YoukuPlayerNS::PlaylistItemInfo>> {
    struct PlaylistItemInfo *_field1;
    struct PlaylistItemInfo *_field2;
    struct __compressed_pair<YoukuPlayerNS::PlaylistItemInfo *, std::__1::allocator<YoukuPlayerNS::PlaylistItemInfo>> {
        struct PlaylistItemInfo *_field1;
    } _field3;
};

struct vector<__weak id<APMAudioSessionDelegate>, std::__1::allocator<__weak id<APMAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<APMAudioSessionDelegate>*, std::__1::allocator<__weak id<APMAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<__weak id<XRTCAudioSessionDelegate>, std::__1::allocator<__weak id<XRTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<XRTCAudioSessionDelegate>*, std::__1::allocator<__weak id<XRTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<am_map_grid_building, std::__1::allocator<am_map_grid_building>> {
    struct am_map_grid_building *_field1;
    struct am_map_grid_building *_field2;
    struct __compressed_pair<am_map_grid_building *, std::__1::allocator<am_map_grid_building>> {
        struct am_map_grid_building *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<gameplay::Animation::Channel *, std::__1::allocator<gameplay::Animation::Channel *>>;

struct vector<gameplay::Ant3dUIManager *, std::__1::allocator<gameplay::Ant3dUIManager *>> {
    struct Ant3dUIManager **_field1;
    struct Ant3dUIManager **_field2;
    struct __compressed_pair<gameplay::Ant3dUIManager **, std::__1::allocator<gameplay::Ant3dUIManager *>> {
        struct Ant3dUIManager **_field1;
    } _field3;
};

struct vector<gameplay::Node *, std::__1::allocator<gameplay::Node *>> {
    struct Node **_field1;
    struct Node **_field2;
    struct __compressed_pair<gameplay::Node **, std::__1::allocator<gameplay::Node *>> {
        struct Node **_field1;
    } _field3;
};

struct vector<gameplay::Properties *, std::__1::allocator<gameplay::Properties *>> {
    struct Properties **_field1;
    struct Properties **_field2;
    struct __compressed_pair<gameplay::Properties **, std::__1::allocator<gameplay::Properties *>> {
        struct Properties **_field1;
    } _field3;
};

struct vector<gameplay::Properties::Property, std::__1::allocator<gameplay::Properties::Property>>;

struct vector<gameplay::VertexFormat::Element, std::__1::allocator<gameplay::VertexFormat::Element>> {
    struct Element *_field1;
    struct Element *_field2;
    struct __compressed_pair<gameplay::VertexFormat::Element *, std::__1::allocator<gameplay::VertexFormat::Element>> {
        struct Element *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<jscore::Touch, std::__1::allocator<jscore::Touch>> {
    struct Touch *_field1;
    struct Touch *_field2;
    struct __compressed_pair<jscore::Touch *, std::__1::allocator<jscore::Touch>> {
        struct Touch *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<slamcv::KeyPoint, std::__1::allocator<slamcv::KeyPoint>> {
    struct KeyPoint *__begin_;
    struct KeyPoint *__end_;
    struct __compressed_pair<slamcv::KeyPoint *, std::__1::allocator<slamcv::KeyPoint>> {
        struct KeyPoint *__value_;
    } __end_cap_;
};

struct vector<slamcv::Mat, std::__1::allocator<slamcv::Mat>> {
    struct Mat *__begin_;
    struct Mat *__end_;
    struct __compressed_pair<slamcv::Mat *, std::__1::allocator<slamcv::Mat>> {
        struct Mat *__value_;
    } __end_cap_;
};

struct vector<slamcv::Point_<float>, std::__1::allocator<slamcv::Point_<float>>> {
    struct Point_<float> *__begin_;
    struct Point_<float> *__end_;
    struct __compressed_pair<slamcv::Point_<float>*, std::__1::allocator<slamcv::Point_<float>>> {
        struct Point_<float> *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *__begin_;
    basic_string_90719d97 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *__value_;
    } __end_cap_;
};

struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
};

struct vector<tSubPath, std::__1::allocator<tSubPath>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<tSubPath *, std::__1::allocator<tSubPath>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned long long, autonavi::irrAllocator<unsigned long long>> {
    unsigned long long *_field1;
    unsigned int _field2;
    unsigned int _field3;
    struct irrAllocator<unsigned long long> _field4;
    unsigned int :4;
    unsigned int :1;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct vector<void *, std::__1::allocator<void *>> {
    void **_field1;
    void **_field2;
    struct __compressed_pair<void **, std::__1::allocator<void *>> {
        void **_field1;
    } _field3;
};

struct vector<xrtc::DelayedMessage, std::__1::allocator<xrtc::DelayedMessage>> {
    struct DelayedMessage *_field1;
    struct DelayedMessage *_field2;
    struct __compressed_pair<xrtc::DelayedMessage *, std::__1::allocator<xrtc::DelayedMessage>> {
        struct DelayedMessage *_field1;
    } _field3;
};

struct vector<xrtc::VideoSourceBase::SinkPair, std::__1::allocator<xrtc::VideoSourceBase::SinkPair>> {
    struct SinkPair *_field1;
    struct SinkPair *_field2;
    struct __compressed_pair<xrtc::VideoSourceBase::SinkPair *, std::__1::allocator<xrtc::VideoSourceBase::SinkPair>> {
        struct SinkPair *_field1;
    } _field3;
};

struct vector<xrtc::scoped_refptr<xrtc::XRTCCertificate>, std::__1::allocator<xrtc::scoped_refptr<xrtc::XRTCCertificate>>> {
    struct scoped_refptr<xrtc::XRTCCertificate> *_field1;
    struct scoped_refptr<xrtc::XRTCCertificate> *_field2;
    struct __compressed_pair<xrtc::scoped_refptr<xrtc::XRTCCertificate>*, std::__1::allocator<xrtc::scoped_refptr<xrtc::XRTCCertificate>>> {
        struct scoped_refptr<xrtc::XRTCCertificate> *_field1;
    } _field3;
};

struct vector<xwebrtc::GenericFrameInfo, std::__1::allocator<xwebrtc::GenericFrameInfo>> {
    struct GenericFrameInfo *_field1;
    struct GenericFrameInfo *_field2;
    struct __compressed_pair<xwebrtc::GenericFrameInfo *, std::__1::allocator<xwebrtc::GenericFrameInfo>> {
        struct GenericFrameInfo *_field1;
    } _field3;
};

struct vector<xwebrtc::PeerConnectionInterface::IceServer, std::__1::allocator<xwebrtc::PeerConnectionInterface::IceServer>> {
    struct IceServer *_field1;
    struct IceServer *_field2;
    struct __compressed_pair<xwebrtc::PeerConnectionInterface::IceServer *, std::__1::allocator<xwebrtc::PeerConnectionInterface::IceServer>> {
        struct IceServer *_field1;
    } _field3;
};

struct vector<xwebrtc::RtcpFeedback, std::__1::allocator<xwebrtc::RtcpFeedback>> {
    struct RtcpFeedback *_field1;
    struct RtcpFeedback *_field2;
    struct __compressed_pair<xwebrtc::RtcpFeedback *, std::__1::allocator<xwebrtc::RtcpFeedback>> {
        struct RtcpFeedback *_field1;
    } _field3;
};

struct vector<xwebrtc::RtpCodecParameters, std::__1::allocator<xwebrtc::RtpCodecParameters>> {
    struct RtpCodecParameters *_field1;
    struct RtpCodecParameters *_field2;
    struct __compressed_pair<xwebrtc::RtpCodecParameters *, std::__1::allocator<xwebrtc::RtpCodecParameters>> {
        struct RtpCodecParameters *_field1;
    } _field3;
};

struct vector<xwebrtc::RtpEncodingParameters, std::__1::allocator<xwebrtc::RtpEncodingParameters>> {
    struct RtpEncodingParameters *_field1;
    struct RtpEncodingParameters *_field2;
    struct __compressed_pair<xwebrtc::RtpEncodingParameters *, std::__1::allocator<xwebrtc::RtpEncodingParameters>> {
        struct RtpEncodingParameters *_field1;
    } _field3;
};

struct vector<xwebrtc::RtpExtension, std::__1::allocator<xwebrtc::RtpExtension>> {
    struct RtpExtension *_field1;
    struct RtpExtension *_field2;
    struct __compressed_pair<xwebrtc::RtpExtension *, std::__1::allocator<xwebrtc::RtpExtension>> {
        struct RtpExtension *_field1;
    } _field3;
};

struct vector<zsensor::sensor_slice_data, std::__1::allocator<zsensor::sensor_slice_data>> {
    struct sensor_slice_data *_field1;
    struct sensor_slice_data *_field2;
    struct __compressed_pair<zsensor::sensor_slice_data *, std::__1::allocator<zsensor::sensor_slice_data>> {
        struct sensor_slice_data *_field1;
    } _field3;
};

struct weak_ptr<videocore::IOutput> {
    struct IOutput *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<videocore::iOS::MicSource> {
    struct MicSource *_field1;
    struct __shared_weak_count *_field2;
};

struct xNN {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    void *_field3;
};

struct xNNArray<xPrediction> {
    unsigned int _field1;
    unsigned int _field2;
    struct xPrediction *_field3;
};

struct xNNSharedModel {
    CDUnknownFunctionPointerType *_field1;
};

struct xPrediction;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

struct zoloz_motion_data_t {
    struct zoloz_vec4_t attitude;
    struct zoloz_vec3_t acceleration;
    struct zoloz_vec3_t rotation;
    struct zoloz_vec3_t gravity;
    struct zoloz_vec3_t magnetic;
};

struct zoloz_vec3_t {
    float x;
    float y;
    float z;
};

struct zoloz_vec4_t {
    float w;
    float x;
    float y;
    float z;
};

struct zsensor {
    struct sensorResult _field1;
    struct gyro_accumlate _field2;
    struct zsensor_result _field3;
    vector_7584168e _field4;
    vector_7584168e _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    float _field8;
    int _field9;
    float _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    _Bool _field16;
    int _field17;
    int _field18;
    float _field19;
    _Bool _field20;
    _Bool _field21;
    float _field22;
    float _field23;
    float _field24;
    vector_7584168e _field25;
};

struct zsensor_result {
    struct vector<zsensor::sensor_slice_data, std::__1::allocator<zsensor::sensor_slice_data>> _field1;
    vector_7584168e _field2;
    _Bool _field3;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct Vector3 _field1;
    struct Vector3 _field2;
} BoundingBox_98987733;

typedef struct {
    struct _opaque_pthread_mutex_t _field1;
    struct _opaque_pthread_t *_field2;
    int _field3;
} CriticalSection_9d330470;

typedef struct {
    struct _opaque_pthread_mutex_t mutex_;
    struct _opaque_pthread_t *thread_;
    int recursion_count_;
} CriticalSection_e2a1dca8;

typedef struct {
    struct _opaque_pthread_mutex_t mutex_;
} CriticalSection_b058bf81;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
} Drawable_98991264;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
    vector_195fe69b _field3;
    vector_195fe69b _field4;
} Drawable_97df83bd;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
        vector_195fe69b _field3;
        vector_195fe69b _field4;
    } _field4;
    vector_f60ea51c _field5;
    vector_7584168e _field6;
} MALineBuilder_926dbdc5;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Vector4<float> _field4;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
    } _field5;
    vector_f60ea51c _field6;
    vector_7584168e _field7;
    struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> _field8;
} MALineBuilder_7821c81d;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool set;
    unsigned char flags;
    int value;
} CDStruct_2ea23212;

typedef struct {
    _Bool _field1;
    unsigned int _field2;
} CDStruct_06d3d77b;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned short _field6;
    int _field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_0fcf6aa1;

typedef struct {
    unsigned int width;
    unsigned int height;
} CDStruct_3e356df7;

typedef struct {
    unsigned long long width;
    unsigned long long height;
    unsigned long long depth;
} CDStruct_da2e99ad;

typedef struct {
    unsigned long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_aa2c26fd;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    long long _field2;
    void *_field3;
} CDStruct_ca286a4d;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
    CDUnknownFunctionPointerType _field24;
    CDUnknownFunctionPointerType _field25;
    CDUnknownFunctionPointerType _field26;
    CDUnknownFunctionPointerType _field27;
    CDUnknownFunctionPointerType _field28;
    CDUnknownFunctionPointerType _field29;
    CDUnknownFunctionPointerType _field30;
    CDUnknownFunctionPointerType _field31;
    CDUnknownFunctionPointerType _field32;
} CDStruct_5b658558;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
} CDStruct_e6af4fdc;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_ba543347;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
} CDStruct_2921ca3b;

typedef struct {
    char *_field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
} CDStruct_0d2672ab;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    unsigned int isStarted:1;
    unsigned int retryCount:2;
    unsigned int retryInterval:9;
} CDStruct_7976d84f;

typedef struct {
    unsigned int state:2;
} CDStruct_4fc7c3d9;

typedef struct {
    double doubleValue;
    unsigned int dLength;
} CDStruct_dd4ade68;

typedef struct {
    double topLeft;
    double topRight;
    double bottomLeft;
    double bottomRight;
} CDStruct_ba12166d;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    float _field1;
    int _field2;
} CDStruct_1253fce2;

typedef struct {
    int timeflag;
    unsigned int year;
    unsigned int month;
    unsigned int day;
    unsigned int hour;
    unsigned int minute;
    unsigned int second;
} CDStruct_7f4a1e90;

typedef struct {
    int _field1;
    char *_field2;
    char *_field3;
    int _field4;
    int _field5;
    int *_field6;
} CDStruct_62c536c8;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    int status;
    int icon;
} CDStruct_a846bce0;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        char *_field1;
        double _field2;
    } _field4;
} CDStruct_e9679665;

typedef struct {
    struct map_node_t **_field1;
    unsigned int _field2;
    unsigned int _field3;
} CDStruct_a086822f;

typedef struct {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    CDStruct_183601bc *_field3;
    CDStruct_183601bc *_field4;
    char *_field5;
    void *_field6;
} CDStruct_ab87bf77;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
    CDStruct_183601bc *_field3;
    int _field4;
    CDStruct_183601bc *_field5;
    int _field6;
} CDStruct_9fdde268;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
    double _field3;
    double _field4;
    double _field5;
    int _field6;
} CDStruct_e63a7e61;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    float _field1;
    int _field2;
    int _field3;
    int _field4;
    CDStruct_a734b2e2 _field5;
    int _field6;
    int _field7;
    char *_field8;
    char *_field9;
} CDStruct_b0c48cec;

typedef struct {
    float _field1;
    struct CGPoint _field2;
    int _field3;
} CDStruct_25cfa38e;

typedef struct {
    int _field1;
    int _field2;
    char _field3[8192];
    char _field4[2048];
    int _field5;
    float _field6;
    int _field7;
    char _field8;
    int _field9;
    int _field10;
    float _field11;
    int _field12;
    int _field13;
    CDStruct_a734b2e2 _field14;
} CDStruct_be7567d2;

typedef struct {
    CDStruct_951efa70 _field1;
    CDStruct_951efa70 _field2;
} CDStruct_1f1f9651;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CLLocationCoordinate2D center;
    CDStruct_951efa70 span;
} CDStruct_b7cb895d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    double *_field1;
    int _field2;
    double _field3;
    double _field4;
    unsigned long long _field5;
    double _field6;
    struct {
        CDStruct_183601bc *_field1;
        int _field2;
    } _field7;
    double _field8;
    double _field9[2];
    _Bool _field10;
    int _field11;
} CDStruct_6e855a40;

typedef struct {
    unsigned int searchState:2;
    struct CGRect originSearchBarFrame;
    struct CGRect searchBarFrame;
} CDStruct_5a3e4123;

typedef struct {
    int keyCode;
    struct CGRect frame;
    int keyType;
    _Bool hidePressLightStyle;
    long long mode;
    long long position;
} CDStruct_eaf340f0;

typedef struct {
    CDStruct_a086822f _field1;
    char **_field2;
    char *_field3;
} CDStruct_e2b8aef9;

typedef struct {
    CDStruct_12c6646e leftStyles;
    CDStruct_12c6646e rightStyles;
    CDStruct_12c6646e topStyles;
    CDStruct_12c6646e middleStyles;
    CDStruct_12c6646e bottomStyles;
    CDStruct_12c6646e extStyles;
    CDStruct_12c6646e crossPointStyles;
    double xData;
    double yData;
    unsigned long long lineColor;
    double lineWidth;
    double dashs[2];
} CDStruct_5fe77336;

typedef struct {
    struct CGRect rect;
    struct TSGAffineTransform *transform;
} CDStruct_10bb0cb9;

typedef struct {
    char *_field1;
    char _field2;
    double _field3;
    unsigned long long _field4;
    CDStruct_10bb0cb9 _field5;
    long long _field6;
} CDStruct_e6592e86;

typedef struct {
    char *_field1;
    struct UIEdgeInsets _field2;
    struct UIEdgeInsets _field3;
    CDStruct_10bb0cb9 _field4;
} CDStruct_8f8bf3aa;

typedef struct {
    CDStruct_10bb0cb9 frame;
    CDStruct_12c6646e styles;
    unsigned long long backgroundColor;
} CDStruct_bedd0ad2;

typedef struct {
    unsigned long long _field1;
    struct {
        union {
            CDStruct_10bb0cb9 _field1;
            struct {
                double *_field1;
                double *_field2;
                int _field3;
                struct TSGAffineTransform *_field4;
            } _field2;
            struct {
                struct CGPoint _field1;
                double _field2;
                struct TSGAffineTransform *_field3;
            } _field3;
        } _field1;
        unsigned int _field2;
    } _field2;
} CDStruct_55329785;

typedef struct {
    union {
        CDStruct_e6592e86 _field1;
        CDStruct_8f8bf3aa _field2;
        CDStruct_55329785 _field3;
    } _field1;
    unsigned int _field2;
} CDStruct_cae28819;

// Ambiguous groups
typedef struct {
    unsigned int isLoaded:1;
} CDStruct_9c7706e8;

typedef struct {
    unsigned int isStarted:1;
} CDStruct_3f8c4f5d;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    long long one;
    long long second;
} CDStruct_ecd63665;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
} CDStruct_af61540b;

typedef struct {
    CDStruct_183601bc *lines;
    int lineCount;
} CDStruct_b8655885;

typedef struct {
    CDStruct_183601bc *styles;
    int stylesCount;
} CDStruct_12c6646e;

typedef struct VideoSinkInterface<xwebrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
} VideoSinkInterface_1edf566e;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct map<ACKString, ACKString, std::__1::less<ACKString>, std::__1::allocator<std::__1::pair<const ACKString, ACKString>>> {
    struct __tree<std::__1::__value_type<ACKString, ACKString>, std::__1::__map_value_compare<ACKString, std::__1::__value_type<ACKString, ACKString>, std::__1::less<ACKString>, true>, std::__1::allocator<std::__1::__value_type<ACKString, ACKString>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ACKString, ACKString>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<ACKString, std::__1::__value_type<ACKString, ACKString>, std::__1::less<ACKString>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_c2514eff;

typedef struct optional<xwebrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct ProfileLevelId data_;
    } ;
} optional_634d75e6;

typedef struct scoped_refptr<xwebrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
} scoped_refptr_af3cb9e0;

typedef struct scoped_refptr<xwebrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
} scoped_refptr_aa4473e2;

typedef struct scoped_refptr<xwebrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
} scoped_refptr_42cd09f7;

typedef struct scoped_refptr<xwebrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
} scoped_refptr_c20f3a81;

typedef struct scoped_refptr<xwebrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
} scoped_refptr_eba4ae4e;

typedef struct scoped_refptr<xwebrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
} scoped_refptr_0c226b42;

typedef struct scoped_refptr<xwebrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
} scoped_refptr_b14d5032;

typedef struct scoped_refptr<xwebrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
} scoped_refptr_83716e8f;

typedef struct scoped_refptr<xwebrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
} scoped_refptr_aebd4c67;

typedef struct scoped_refptr<xwebrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
} scoped_refptr_f7b03e2c;

typedef struct scoped_refptr<xwebrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
} scoped_refptr_0f5e2d94;

typedef struct scoped_refptr<xwebrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
} scoped_refptr_6ecb7cd9;

typedef struct scoped_refptr<xwebrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
} scoped_refptr_f19a86cd;

typedef struct scoped_refptr<xwebrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
} scoped_refptr_c7a55e34;

typedef struct scoped_refptr<xwebrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
} scoped_refptr_0c19019f;

typedef struct scoped_refptr<xwebrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
} scoped_refptr_cd0bba88;

typedef struct scoped_refptr<xwebrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
} scoped_refptr_e373c7a7;

typedef struct scoped_refptr<xwebrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
} scoped_refptr_e01e3c46;

typedef struct scoped_refptr<xwebrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
} scoped_refptr_97b7538b;

typedef struct scoped_refptr<xwebrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
} scoped_refptr_8612b81e;

typedef struct scoped_refptr<xwebrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
} scoped_refptr_55e36087;

typedef struct shared_ptr<YTCoreSoftwarePlayerNotify> {
    struct YTCoreSoftwarePlayerNotify *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a57c96c8;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct unique_ptr<xrtc::BitrateAllocationStrategy, std::__1::default_delete<xrtc::BitrateAllocationStrategy>> {
    struct __compressed_pair<xrtc::BitrateAllocationStrategy *, std::__1::default_delete<xrtc::BitrateAllocationStrategy>> {
        struct BitrateAllocationStrategy *_field1;
    } _field1;
} unique_ptr_ccaf4088;

typedef struct unique_ptr<xrtc::IntervalRange, std::__1::default_delete<xrtc::IntervalRange>> {
    struct __compressed_pair<xrtc::IntervalRange *, std::__1::default_delete<xrtc::IntervalRange>> {
        struct IntervalRange *_field1;
    } _field1;
} unique_ptr_eec6004e;

typedef struct unique_ptr<xwebrtc::IceCandidateInterface, std::__1::default_delete<xwebrtc::IceCandidateInterface>> {
    struct __compressed_pair<xwebrtc::IceCandidateInterface *, std::__1::default_delete<xwebrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
} unique_ptr_7ce33b21;

typedef struct unique_ptr<xwebrtc::MediaConstraints, std::__1::default_delete<xwebrtc::MediaConstraints>> {
    struct __compressed_pair<xwebrtc::MediaConstraints *, std::__1::default_delete<xwebrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
} unique_ptr_02e3266d;

typedef struct unique_ptr<xwebrtc::MediaTransportFactory, std::__1::default_delete<xwebrtc::MediaTransportFactory>> {
    struct __compressed_pair<xwebrtc::MediaTransportFactory *, std::__1::default_delete<xwebrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
} unique_ptr_13d4d920;

typedef struct unique_ptr<xwebrtc::NetworkControllerFactoryInterface, std::__1::default_delete<xwebrtc::NetworkControllerFactoryInterface>> {
    struct __compressed_pair<xwebrtc::NetworkControllerFactoryInterface *, std::__1::default_delete<xwebrtc::NetworkControllerFactoryInterface>> {
        struct NetworkControllerFactoryInterface *_field1;
    } _field1;
} unique_ptr_084c4018;

typedef struct unique_ptr<xwebrtc::RTPFragmentationHeader, std::__1::default_delete<xwebrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<xwebrtc::RTPFragmentationHeader *, std::__1::default_delete<xwebrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
} unique_ptr_d59eb9dc;

typedef struct unique_ptr<xwebrtc::VideoDecoder, std::__1::default_delete<xwebrtc::VideoDecoder>> {
    struct __compressed_pair<xwebrtc::VideoDecoder *, std::__1::default_delete<xwebrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
} unique_ptr_bae5bacd;

typedef struct unique_ptr<xwebrtc::VideoDecoderFactory, std::__1::default_delete<xwebrtc::VideoDecoderFactory>> {
    struct __compressed_pair<xwebrtc::VideoDecoderFactory *, std::__1::default_delete<xwebrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
} unique_ptr_67a3a803;

typedef struct unique_ptr<xwebrtc::VideoEncoder, std::__1::default_delete<xwebrtc::VideoEncoder>> {
    struct __compressed_pair<xwebrtc::VideoEncoder *, std::__1::default_delete<xwebrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
} unique_ptr_ca3e2b3d;

typedef struct unique_ptr<xwebrtc::VideoEncoderFactory, std::__1::default_delete<xwebrtc::VideoEncoderFactory>> {
    struct __compressed_pair<xwebrtc::VideoEncoderFactory *, std::__1::default_delete<xwebrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
} unique_ptr_6acb4f88;

typedef struct vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>> {
    struct NodeLayout *__begin_;
    struct NodeLayout *__end_;
    struct __compressed_pair<VZ::NodeLayout *, std::__1::allocator<VZ::NodeLayout>> {
        struct NodeLayout *__value_;
    } __end_cap_;
} vector_64923fe0;

typedef struct vector<VZFNode *, std::__1::allocator<VZFNode *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VZFNode *__strong *, std::__1::allocator<VZFNode *>> {
        id *__value_;
    } __end_cap_;
} vector_cb893a28;

typedef struct vector<VZFStackChildNode, std::__1::allocator<VZFStackChildNode>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VZFStackChildNode *, std::__1::allocator<VZFStackChildNode>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
} vector_994f9055;

typedef struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
} vector_f60ea51c;

typedef struct vector<__weak id<APMAudioSessionDelegate>, std::__1::allocator<__weak id<APMAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<APMAudioSessionDelegate>*, std::__1::allocator<__weak id<APMAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
} vector_22992324;

typedef struct vector<__weak id<XRTCAudioSessionDelegate>, std::__1::allocator<__weak id<XRTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<XRTCAudioSessionDelegate>*, std::__1::allocator<__weak id<XRTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
} vector_79838ee4;

typedef struct vector<am_map_grid_building, std::__1::allocator<am_map_grid_building>> {
    struct am_map_grid_building *_field1;
    struct am_map_grid_building *_field2;
    struct __compressed_pair<am_map_grid_building *, std::__1::allocator<am_map_grid_building>> {
        struct am_map_grid_building *_field1;
    } _field3;
} vector_33a92eff;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
} vector_7584168e;

typedef struct vector<slamcv::KeyPoint, std::__1::allocator<slamcv::KeyPoint>> {
    struct KeyPoint *__begin_;
    struct KeyPoint *__end_;
    struct __compressed_pair<slamcv::KeyPoint *, std::__1::allocator<slamcv::KeyPoint>> {
        struct KeyPoint *__value_;
    } __end_cap_;
} vector_3626872a;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *__begin_;
    basic_string_90719d97 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *__value_;
    } __end_cap_;
} vector_ebb6ef3e;

typedef struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
} vector_aac46ba0;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
} vector_195fe69b;

typedef struct weak_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_48e2a55c;

typedef struct xNNArray<xPrediction> {
    unsigned int _field1;
    unsigned int _field2;
    struct xPrediction *_field3;
} xNNArray_d6166336;

#pragma mark Named Unions

union CodecSpecificInfoUnion {
    struct CodecSpecificInfoVP8 _field1;
    struct CodecSpecificInfoVP9 _field2;
    struct CodecSpecificInfoH264 _field3;
};

union VideoCodecUnion {
    struct VideoCodecVP8 _field1;
    struct VideoCodecVP9 _field2;
    struct VideoCodecH264 _field3;
};

union _GLKMatrix3 {
    struct {
        float m00;
        float m01;
        float m02;
        float m10;
        float m11;
        float m12;
        float m20;
        float m21;
        float m22;
    } ;
    float m[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKQuaternion {
    struct {
        union _GLKVector3 v;
        float s;
    } ;
    CDStruct_f2e236b6 ;
    float q[4];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

#if 0
// Names with conflicting types:
typedef union {
    struct Allocated {
        int *_field1;
        unsigned long long _field2;
    } _field1;
    struct Inlined _field2;
} Data_36c55096;

#endif

#pragma mark Typedef'd Unions

typedef union {
    int _enump;
    int _int32p;
    long long _int64p;
    unsigned int _uint32p;
    unsigned long long _uint64p;
    _Bool _boolp;
    float _float32p;
    double _float64p;
} CDUnion_9d145f3c;

typedef union {
    CDStruct_f2e236b6 _field1;
    float _field2[4];
} CDUnion_2664f680;

typedef union {
    struct dummy_type dummy_;
    int data_;
} CDUnion_1bb239ac;

typedef union {
    struct dummy_type dummy_;
    long long data_;
} CDUnion_019de37f;

