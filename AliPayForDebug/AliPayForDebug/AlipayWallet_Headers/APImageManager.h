//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ImageCache2, NSLock, NSMutableDictionary, NSOperationQueue, TaskSchedulerMarket;
@protocol OS_dispatch_queue;

@interface APImageManager : NSObject
{
    ImageCache2 *_imageCache;
    NSMutableDictionary *_compressDictionary;
    NSLock *_compressLock;
    NSOperationQueue *_compressQueue;
    NSOperationQueue *_resizeQueue;
    NSOperationQueue *_uploadQueue;
    NSObject<OS_dispatch_queue> *_taskQueue;
    NSMutableDictionary *_uploadDictionary;
    NSLock *_uploadLock;
    NSLock *_oneCompressTaskLock;
    NSObject<OS_dispatch_queue> *_pjpegDecodeQueue;
    NSMutableDictionary *_cacheInfoForPhasset;
    NSLock *_cacheLockForPhasset;
    NSOperationQueue *_iCloudLowQualityImageQueue;
    NSObject<OS_dispatch_queue> *_updateAliasKeyQueue;
    TaskSchedulerMarket *_taskSchedulerMarket;
}

+ (void)setReqestRemoteOriginalUrl:(id)arg1 request:(id)arg2;
+ (id)convergeDomainWithUrl:(id)arg1;
+ (struct CGSize)convertRealSize:(struct CGSize)arg1;
+ (id)getOriginalImageFilePathWithUrl:(id)arg1;
+ (id)manager;
@property(retain, nonatomic) TaskSchedulerMarket *taskSchedulerMarket; // @synthesize taskSchedulerMarket=_taskSchedulerMarket;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *updateAliasKeyQueue; // @synthesize updateAliasKeyQueue=_updateAliasKeyQueue;
@property(retain, nonatomic) NSOperationQueue *iCloudLowQualityImageQueue; // @synthesize iCloudLowQualityImageQueue=_iCloudLowQualityImageQueue;
@property(retain, nonatomic) NSLock *cacheLockForPhasset; // @synthesize cacheLockForPhasset=_cacheLockForPhasset;
@property(retain, nonatomic) NSMutableDictionary *cacheInfoForPhasset; // @synthesize cacheInfoForPhasset=_cacheInfoForPhasset;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pjpegDecodeQueue; // @synthesize pjpegDecodeQueue=_pjpegDecodeQueue;
@property(retain, nonatomic) NSLock *oneCompressTaskLock; // @synthesize oneCompressTaskLock=_oneCompressTaskLock;
@property(retain, nonatomic) NSLock *uploadLock; // @synthesize uploadLock=_uploadLock;
@property(retain, nonatomic) NSMutableDictionary *uploadDictionary; // @synthesize uploadDictionary=_uploadDictionary;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(retain, nonatomic) NSOperationQueue *uploadQueue; // @synthesize uploadQueue=_uploadQueue;
@property(retain, nonatomic) NSOperationQueue *resizeQueue; // @synthesize resizeQueue=_resizeQueue;
@property(retain, nonatomic) NSOperationQueue *compressQueue; // @synthesize compressQueue=_compressQueue;
@property(retain, nonatomic) NSLock *compressLock; // @synthesize compressLock=_compressLock;
@property(retain, nonatomic) NSMutableDictionary *compressDictionary; // @synthesize compressDictionary=_compressDictionary;
- (void).cxx_destruct;
- (void)associateThumbnailId:(id)arg1 withGifId:(id)arg2;
- (id)thumbnailIdforGif:(id)arg1;
- (_Bool)isPublicLocalID:(id)arg1;
- (id)AutoImgComPress2:(id)arg1 Quality:(long long)arg2;
- (_Bool)hasZeroValueInSize:(struct CGSize)arg1;
- (id)defaultImageRequest;
- (void)queryImageInTaskManager4Url:(id)arg1 request:(id)arg2 originalImage:(id)arg3;
- (CDUnknownBlockType)generateDownloadOriginalImageCompleteBlockWithRequest:(id)arg1 url:(id)arg2;
- (struct CGSize)scaleSizeWithOriginalSize:(struct CGSize)arg1 zoo:(struct CGSize)arg2;
- (id)imageRequestWithBusiness:(id)arg1 progress:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (id)locationFromUIImage:(id)arg1;
- (id)locationFromPHAsset:(id)arg1;
- (id)locationFromALAsset:(id)arg1;
- (id)locationFromImage:(id)arg1;
- (id)replaceZoomResolution:(id)arg1 resolution:(struct CGSize)arg2;
- (void)setAliasKey:(id)arg1 forKey:(id)arg2;
- (_Bool)checkCosistencyWithKey:(id)arg1 aliasKey:(id)arg2;
- (void)checkCosistencyAndUpdateWithKey:(id)arg1 request:(id)arg2 sync:(_Bool)arg3;
- (void)storeImageWithALAssetLibrary:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)storeImageToPHPhotoLibrary:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)storeImageToPhotoAblum:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)storeImageToPhotoWithIdentifier:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3 complete:(CDUnknownBlockType)arg4;
- (unsigned long long)getImageCacheTypeBySize:(struct CGSize)arg1 originalSize:(struct CGSize)arg2;
- (double)getProgressOfCloudID:(id)arg1 request:(id)arg2;
- (double)getProgressOfCloudID:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (unsigned long long)getStatusOfCloudID:(id)arg1 request:(id)arg2;
- (unsigned long long)getStatusOfCloudID:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (void)setTaskExecuteSequenceWithRequest:(id)arg1 forTask:(id)arg2;
- (void)doCompleteCallback:(id)arg1 object:(id)arg2 error:(id)arg3 userInfo:(id)arg4;
- (void)doProgressWithDic:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (id)createProgressDictionary:(double)arg1 partialBytes:(long long)arg2 totalBytes:(long long)arg3;
- (_Bool)needStoreOriginalMemImage2CacheWithImage:(id)arg1 compareWithSize:(struct CGSize)arg2;
- (_Bool)canIdentifierBeParsedAsNsurl:(id)arg1;
- (_Bool)isRequestRedirected:(id)arg1 identifier:(id)arg2 imageTask:(id)arg3;
- (_Bool)isRequestRedirectd:(id)arg1 complete:(CDUnknownBlockType)arg2 identifier:(id)arg3;
- (id)getCompressKeyForLocalId:(id)arg1 imageType:(unsigned long long)arg2 size:(struct CGSize)arg3;
- (id)queryUploadImageInfoForLocalId:(id)arg1;
- (void)removeUploadImageInfoForLocalId:(id)arg1;
- (void)setUploadImageInfo:(id)arg1 forLocalId:(id)arg2;
- (id)queryCompressForLocalId:(id)arg1;
- (void)removeCompressForLocalId:(id)arg1;
- (void)setCompressForObject:(id)arg1 forLocalId:(id)arg2;
- (id)getImageFromRepresentation:(id)arg1;
- (id)getDataFromRepresentation:(id)arg1;
- (id)asynCompresseImage:(id)arg1 request:(id)arg2 localId:(id)arg3 uncompressedData:(id)arg4;
- (_Bool)needCompressWithCompressLevel:(unsigned long long)arg1 dataSize:(long long)arg2;
- (id)getDataFromAssetRepresentation:(id)arg1 representData:(id)arg2;
- (id)getWillCompressImageFromAssetRepresentation:(id)arg1 representData:(id)arg2;
- (id)getCompressedDataFromAsset:(id)arg1 compress:(unsigned long long)arg2 representData:(id)arg3 gifOption:(unsigned long long)arg4;
- (unsigned long long)getImageTypeWithCompressLevel:(unsigned long long)arg1 andFileSize:(long long)arg2;
- (unsigned long long)getImageTypeWithCompressLevel:(unsigned long long)arg1;
- (unsigned long long)getCompressLevelFromLocalId:(id)arg1;
- (id)getLocalIdFromMd5:(id)arg1 withRequest:(id)arg2;
- (id)getLocalIdWithIdentifier:(id)arg1 withRequest:(id)arg2;
- (id)getLocalIdFromMd5:(id)arg1 withCompress:(unsigned long long)arg2;
- (id)buildUrl:(id)arg1;
- (id)addBusiness:(id)arg1 toUrlString:(id)arg2;
- (id)resolveImageUrlString:(id)arg1 size:(struct CGSize)arg2;
- (void)cancelTaskWithLocalIds:(id)arg1;
- (void)batchUploadImageWithLocalIds:(id)arg1 business:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)batchUploadImageWithLocalIds:(id)arg1 request:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)getLocalIdsWithArray:(id)arg1 size:(struct CGSize)arg2 compressLevel:(unsigned long long)arg3;
- (void)storeImageintoCache:(id)arg1 WithCacheKey:(id)arg2 imageType:(unsigned long long)arg3 size:(struct CGSize)arg4 cacheOptions:(id)arg5;
- (_Bool)storeImageIntoCache:(id)arg1 withIdentifier:(id)arg2 imageRequest:(id)arg3;
- (id)queryImageFromDiskCacheWithKey:(id)arg1 request:(id)arg2;
- (id)queryImageFromMemCacheWithKey:(id)arg1 request:(id)arg2;
- (id)cachePathWithIdentifier:(id)arg1 request:(id)arg2;
- (_Bool)isImageCacheExsitFor:(id)arg1 request:(id)arg2;
- (_Bool)isImageCacheExsitFor:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (void)clearCacheForIdentifier:(id)arg1;
- (id)syncGetImageCacheForIdentifier:(id)arg1 request:(id)arg2 waitForiCloud:(_Bool)arg3;
- (id)syncGetImageCacheForIdentifier:(id)arg1 request:(id)arg2;
- (id)getImageCacheDataForIdentifier:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (void)asyncGetImageCacheForIdentifier:(id)arg1 request:(id)arg2;
- (void)getImageCacheForIdentifier:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3 complete:(CDUnknownBlockType)arg4;
- (id)getCacheDataForIdentifier:(id)arg1 imageType:(unsigned long long)arg2 size:(struct CGSize)arg3;
- (id)getCacheImageForCloudId:(id)arg1 imageType:(unsigned long long)arg2 size:(struct CGSize)arg3;
- (id)getImageCacheForIdentifier:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (void)handleExtenalImageWithUrl:(id)arg1 image:(id)arg2 cacheKey:(id)arg3 request:(id)arg4 Data:(id)arg5 withTaskRecord:(id)arg6 useMass:(_Bool)arg7;
- (void)downloadExternalImageUseMass:(id)arg1 cacheKey:(id)arg2 request:(id)arg3 taskRecord:(id)arg4 progress:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
- (_Bool)downloadDjangoUrlImageUseMass:(id)arg1 cacheKey:(id)arg2 request:(id)arg3 taskRecord:(id)arg4;
- (void)downloadImageWithUrl:(id)arg1 request:(id)arg2 task:(id)arg3;
- (void)downloadExternalImageUseMassDistribute:(id)arg1 cacheKey:(id)arg2 request:(id)arg3 taskRecord:(id)arg4;
- (void)handleBase64Url:(id)arg1 cacheKey:(id)arg2 request:(id)arg3 taskRecord:(id)arg4;
- (_Bool)isUrlInWhiteList:(id)arg1;
- (void)addTaskToUrlScheduler:(id)arg1 withUrlString:(id)arg2;
- (void)addURLDownloadTask:(id)arg1 request:(id)arg2 cacheKey:(id)arg3;
- (id)getExternalImageWithUrlInternal:(id)arg1 request:(id)arg2;
- (id)getExternalImageWithUrl:(id)arg1 request:(id)arg2;
- (id)generalKeyForGetImage:(id)arg1 imageType:(unsigned long long)arg2 width:(double)arg3 height:(double)arg4;
- (_Bool)cancelGetImage:(id)arg1 zoom:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (void)storeImage:(id)arg1 imageData:(id)arg2 withKey:(id)arg3 type:(unsigned long long)arg4 size:(struct CGSize)arg5 options:(id)arg6;
- (void)downloadOriginalImageWithId:(id)arg1 request:(id)arg2 taskRecord:(id)arg3 isRetry:(_Bool)arg4;
- (void)downloadImage:(id)arg1 request:(id)arg2 taskRecord:(id)arg3 useHttps:(_Bool)arg4;
- (id)getStoreDiskCacheDataWithNetworkData:(id)arg1 image:(id)arg2 bizType:(id)arg3;
- (void)handleDownloadResp:(id)arg1 request:(id)arg2 imageType:(unsigned long long)arg3 size:(struct CGSize)arg4 zoomAppend:(id)arg5 taskRecord:(id)arg6 imagedata:(id)arg7 useHttps:(_Bool)arg8 error:(id)arg9 urlString:(id)arg10;
- (id)createPJPEGConfiguration;
- (void)downloadImageWithId:(id)arg1 zoom:(id)arg2 request:(id)arg3 taskRecord:(id)arg4 urlString:(id)arg5 isRetry:(_Bool)arg6;
- (void)downloadImage:(id)arg1 zoom:(id)arg2 request:(id)arg3 taskRecord:(id)arg4 useHttps:(_Bool)arg5 urlString:(id)arg6;
- (void)getImageWithUploadLocalId:(id)arg1 zoom:(struct CGSize)arg2 withIdCompletion:(CDUnknownBlockType)arg3;
- (void)getImageWithUploadLocalId:(id)arg1 zoom:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addDownloadTask:(id)arg1 request:(id)arg2 idendifier:(id)arg3 imageType:(unsigned long long)arg4 realSize:(struct CGSize)arg5;
- (void)getTheBestLowQualityImage:(id)arg1 identifier:(id)arg2 request:(id)arg3;
- (void)handleRequestIniCloud:(id)arg1 withLocalId:(id)arg2;
- (id)doGetImage:(id)arg1 request:(id)arg2;
- (id)getImage:(id)arg1 request:(id)arg2;
- (id)getImage:(id)arg1 business:(id)arg2 zoom:(struct CGSize)arg3 originalSize:(struct CGSize)arg4 progress:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
- (id)getImage:(id)arg1 business:(id)arg2 zoom:(struct CGSize)arg3 originalSize:(struct CGSize)arg4 progress:(CDUnknownBlockType)arg5 withIdCompletion:(CDUnknownBlockType)arg6;
- (id)getImage:(id)arg1 business:(id)arg2 zoom:(struct CGSize)arg3 progress:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)getLocalIdWithImage:(id)arg1 request:(id)arg2;
- (id)getLocalIdWithImage:(id)arg1 compressLevel:(unsigned long long)arg2;
- (id)getLocalIdWithImageData:(id)arg1 request:(id)arg2;
- (_Bool)isiOS8AndLater;
- (id)compress:(id)arg1 compressLevel:(unsigned long long)arg2;
- (void)compressImageWithPHAsset:(id)arg1 localID:(id)arg2 request:(id)arg3;
- (id)getLocalIdWithPHAsset:(id)arg1 request:(id)arg2;
- (id)getLocalIdWithALAsset:(id)arg1 request:(id)arg2;
- (id)getLocalIdWithAsset:(id)arg1 request:(id)arg2;
- (id)getLocalIdWithAsset:(id)arg1 compressLevel:(unsigned long long)arg2;
- (id)getLocalIdWithImage:(id)arg1 compress:(_Bool)arg2;
- (void)registeriCloudStatusHandler:(CDUnknownBlockType)arg1 progressHandler:(CDUnknownBlockType)arg2 forLocalID:(id)arg3;
- (double)getiCloudProgressWithLocalID:(id)arg1;
- (unsigned long long)getiCloudStatusWithLocalID:(id)arg1;
- (_Bool)cancelTaskWithLocalId:(id)arg1;
- (id)getUploadDataWithLocalId:(id)arg1 request:(id)arg2;
- (void)addUploadTaskWithLocalId:(id)arg1 imageType:(unsigned long long)arg2 needJudgeQuick:(_Bool)arg3 uploadRequest:(id)arg4;
- (id)uploadRetryWithLocalIdInternal:(id)arg1 needJudgeQuick:(_Bool)arg2 uploadRequest:(id)arg3;
- (id)generateTaskIdWithLocalId:(id)arg1 request:(id)arg2;
- (id)uploadRetryWithLocalId:(id)arg1 request:(id)arg2;
- (id)uploadRetryWithLocalId:(id)arg1 business:(id)arg2 progress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (unsigned long long)getCompressByNet;
- (void)doUploadWithFilePath:(id)arg1 localId:(id)arg2 data:(id)arg3 taskRecord:(id)arg4 needJudgeQuick:(_Bool)arg5 request:(id)arg6;
- (id)uploadWithALAsset:(id)arg1 business:(id)arg2 compress:(unsigned long long)arg3 progress:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)uploadWithALAsset:(id)arg1 request:(id)arg2;
- (id)uploadWithImageData:(id)arg1 request:(id)arg2;
- (id)uploadWithImageData:(id)arg1 business:(id)arg2 compress:(unsigned long long)arg3 progress:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)uploadWithImage:(id)arg1 request:(id)arg2;
- (id)uploadWithImage:(id)arg1 business:(id)arg2 compress:(unsigned long long)arg3 progress:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)scaleImage:(id)arg1 size:(struct CGSize)arg2;
- (id)cropImage:(id)arg1 size:(struct CGSize)arg2 mode:(unsigned long long)arg3 degradeMode:(unsigned long long)arg4;
- (void)dealloc;
- (id)init;
- (_Bool)cancelGetWaterMarkImage:(id)arg1;
- (void)generateWatermarkUsingMASS:(id)arg1 task:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 fail:(CDUnknownBlockType)arg5;
- (id)generalWaterMarkImageWithId:(id)arg1 sourceId:(id)arg2 zoom:(struct CGSize)arg3 position:(unsigned long long)arg4 transparency:(unsigned long long)arg5 width:(unsigned long long)arg6 height:(unsigned long long)arg7 xgap:(unsigned long long)arg8 ygap:(unsigned long long)arg9 p:(unsigned long long)arg10 progress:(CDUnknownBlockType)arg11 completion:(CDUnknownBlockType)arg12;
- (void)downloadWatermarkUseMASS:(id)arg1 task:(id)arg2;
- (void)addWatermarkDownloadTask:(id)arg1;
- (void)downloadWaterMarkUseMMTC:(id)arg1 task:(id)arg2;
- (void)handleWaterMarkCallbackWithResponse:(id)arg1 request:(id)arg2 task:(id)arg3;
- (void)handleWaterMarkErrorCallbackWithError:(id)arg1 request:(id)arg2 task:(id)arg3;
- (void)handleWaterMarkProgressCallback:(id)arg1 task:(id)arg2 percent:(double)arg3 partialBytes:(long long)arg4 totalBytes:(long long)arg5;
- (id)getWaterMarkImageWithId:(id)arg1 business:(id)arg2 sourceId:(id)arg3 zoom:(struct CGSize)arg4 position:(unsigned long long)arg5 transparency:(unsigned long long)arg6 width:(unsigned long long)arg7 height:(unsigned long long)arg8 xgap:(unsigned long long)arg9 ygap:(unsigned long long)arg10 p:(unsigned long long)arg11 progress:(CDUnknownBlockType)arg12 withIdCompletion:(CDUnknownBlockType)arg13;
- (id)generalKeyForGetWaterWithId:(id)arg1 sourceId:(id)arg2 zoom:(struct CGSize)arg3 position:(unsigned long long)arg4 transparency:(unsigned long long)arg5 width:(unsigned long long)arg6 height:(unsigned long long)arg7 xgap:(unsigned long long)arg8 ygap:(unsigned long long)arg9;
- (id)doResizeImage:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3;
- (id)thumbnailWithCloudId:(id)arg1 imageType:(unsigned long long)arg2 zoom:(struct CGSize)arg3;
- (id)thumbnailWithId:(id)arg1 zoom:(struct CGSize)arg2;
- (id)thumbnailWithCloudId:(id)arg1 zoom:(struct CGSize)arg2;
- (id)thumbnailWithLocalId:(id)arg1 zoom:(struct CGSize)arg2;
- (id)thumbnailWithData:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3;
- (void)thumbnailWithAsset:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3 progress:(CDUnknownBlockType)arg4 complete:(CDUnknownBlockType)arg5;
- (void)thumbnailWithPHAsset:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3 progress:(CDUnknownBlockType)arg4 complete:(CDUnknownBlockType)arg5;
- (id)thumbnailWithALAsset:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3;
- (id)thumbnailWithAsset:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3;
- (id)thumbnailWithFilePath:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3;
- (id)thumbnailWithImage:(id)arg1 zoom:(struct CGSize)arg2 smartCut:(unsigned long long)arg3;
- (id)compressImageFromLocalID:(id)arg1 compressLevel:(unsigned long long)arg2 business:(id)arg3 maxWidth:(unsigned long long)arg4 maxHeight:(unsigned long long)arg5;
- (id)compressImageFromLocalID:(id)arg1 compressLevel:(unsigned long long)arg2 business:(id)arg3;
- (void)clearCacheForExternameImageUrl:(id)arg1;
- (id)getCacheDataForCloudId:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;
- (void)getCacheImageForCloudId:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3 complete:(CDUnknownBlockType)arg4;
- (id)getCacheExternalImageForUrl:(id)arg1;
- (id)getExternalImageWithUrl:(id)arg1 business:(id)arg2 progress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (id)getCacheImageForCloudId:(id)arg1 size:(struct CGSize)arg2 originalSize:(struct CGSize)arg3;

@end

