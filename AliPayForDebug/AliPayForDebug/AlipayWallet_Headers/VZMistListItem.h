//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "VZFNodeListItem.h"

#import "VZMistAsyncDisplayItem-Protocol.h"
#import "VZMistListItem-Protocol.h"

@class JSContext, NSDictionary, NSIndexPath, NSMutableArray, NSMutableDictionary, NSString, UITableView, UIViewController, VZFNode, VZMistAppearMap, VZMistSelectorMap, VZMistTemplate, VZMistTemplateController, VZTExpressionContext;
@protocol VZFPageProtocol;

@interface VZMistListItem : VZFNodeListItem <VZMistListItem, VZMistAsyncDisplayItem>
{
    NSMutableArray *_stateUpdatesQueue;
    UITableView *_tableView;
    UIViewController *_viewController;
    NSDictionary *_rawData;
    NSDictionary *_processedData;
    _Bool _didLoad;
    _Bool _asyncDisplay;
    _Bool _autoRender;
    JSContext *_jsContext;
    VZMistTemplateController *_tplController;
    NSDictionary *_state;
    VZTExpressionContext *_expressionContext;
    NSMutableDictionary *_customData;
    VZMistTemplate *_tpl;
    double _heightAnimationDuration;
    VZMistSelectorMap *_selectorMap;
    VZMistAppearMap *_appearMap;
    NSString *_rootNodeId;
    VZFNode *_node;
    CDUnknownBlockType _updateStateCompletion;
    struct CGSize _constrainedSize;
}

+ (id)nodeForItem:(id)arg1 Store:(id)arg2 Context:(id)arg3;
+ (id)_stateUpdateQueue;
+ (id)builtinVars;
@property(copy, nonatomic) CDUnknownBlockType updateStateCompletion; // @synthesize updateStateCompletion=_updateStateCompletion;
@property(retain, nonatomic) VZFNode *node; // @synthesize node=_node;
@property(retain, nonatomic) NSString *rootNodeId; // @synthesize rootNodeId=_rootNodeId;
@property(readonly, nonatomic) VZMistAppearMap *appearMap; // @synthesize appearMap=_appearMap;
@property(readonly, nonatomic) VZMistSelectorMap *selectorMap; // @synthesize selectorMap=_selectorMap;
@property(nonatomic) struct CGSize constrainedSize; // @synthesize constrainedSize=_constrainedSize;
@property(nonatomic) double heightAnimationDuration; // @synthesize heightAnimationDuration=_heightAnimationDuration;
@property(nonatomic) _Bool autoRender; // @synthesize autoRender=_autoRender;
@property(nonatomic) _Bool asyncDisplay; // @synthesize asyncDisplay=_asyncDisplay;
@property(readonly, nonatomic) VZMistTemplate *tpl; // @synthesize tpl=_tpl;
@property(retain, nonatomic) NSMutableDictionary *customData; // @synthesize customData=_customData;
@property(readonly, nonatomic) VZTExpressionContext *expressionContext; // @synthesize expressionContext=_expressionContext;
@property(readonly, nonatomic) NSDictionary *state; // @synthesize state=_state;
@property(readonly, nonatomic) VZMistTemplateController *tplController; // @synthesize tplController=_tplController;
- (void).cxx_destruct;
@property(readonly, nonatomic) JSContext *jsContext; // @synthesize jsContext=_jsContext;
@property(readonly, nonatomic) __weak UIViewController *viewController;
- (id)tableView;
- (id)mistInstance;
- (Class)templateControllerClass;
- (void)_reloadTableView;
- (void)_rebuild:(_Bool)arg1;
- (void)prepareVariables:(id)arg1;
- (void)_doUpdateState;
@property(readonly, nonatomic) struct CGSize windowSize;
@property(readonly, nonatomic) __weak id <VZFPageProtocol> page;
@property(readonly, nonatomic) _Bool isApp;
@property(readonly, nonatomic) NSDictionary *data;
@property(readonly, nonatomic) NSDictionary *rawData;
- (void)detachFromView;
- (void)startImageAnimating:(id)arg1;
- (void)attachToView:(id)arg1;
- (void)attachToView:(id)arg1 atIndexPath:(id)arg2;
- (void)updateState:(CDUnknownBlockType)arg1;
- (void)updateState:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)refreshCell;
- (void)setData:(id)arg1 keepState:(_Bool)arg2;
- (void)render;
- (id)initWithData:(id)arg1 customData:(id)arg2 template:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSIndexPath *indexPath;
@property(readonly) Class superclass;

@end

