//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NBDebugAppService, NSDictionary, NSMutableArray, NSString;
@protocol APConfigService, NBDebugConfigDelegate;

@interface NBDebugConfig : NSObject
{
    _Bool _showIcon;
    _Bool _hybridSwitch;
    _Bool _weinreSwitch;
    _Bool _networkAvailable;
    _Bool _nebulaAppDebug;
    NSString *_customServer;
    NSString *_weinreServer;
    NSString *_domScriptUrl;
    NSString *_userSource;
    id <NBDebugConfigDelegate> _delegate;
    NSMutableArray *_viewIdBlackList;
    NBDebugAppService *_appService;
    id <APConfigService> _configService;
    NSDictionary *_currentDumpConfig;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSDictionary *currentDumpConfig; // @synthesize currentDumpConfig=_currentDumpConfig;
@property(retain, nonatomic) id <APConfigService> configService; // @synthesize configService=_configService;
@property(retain, nonatomic) NBDebugAppService *appService; // @synthesize appService=_appService;
@property(retain, nonatomic) NSMutableArray *viewIdBlackList; // @synthesize viewIdBlackList=_viewIdBlackList;
@property __weak id <NBDebugConfigDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool nebulaAppDebug; // @synthesize nebulaAppDebug=_nebulaAppDebug;
@property _Bool networkAvailable; // @synthesize networkAvailable=_networkAvailable;
@property _Bool weinreSwitch; // @synthesize weinreSwitch=_weinreSwitch;
@property _Bool hybridSwitch; // @synthesize hybridSwitch=_hybridSwitch;
@property(retain, nonatomic) NSString *userSource; // @synthesize userSource=_userSource;
@property(retain, nonatomic) NSString *domScriptUrl; // @synthesize domScriptUrl=_domScriptUrl;
@property(retain, nonatomic) NSString *weinreServer; // @synthesize weinreServer=_weinreServer;
@property(retain, nonatomic) NSString *customServer; // @synthesize customServer=_customServer;
- (void).cxx_destruct;
- (void)updateConfig:(id)arg1;
- (id)parseDumpConfig:(id)arg1;
@property(readonly, nonatomic) int logDumpUpperLimit;
@property(readonly, nonatomic) _Bool dumpCollectSwitch;
@property(readonly, nonatomic) int singleSegmentLengthLimit;
@property _Bool showIcon; // @synthesize showIcon=_showIcon;
- (_Bool)hasPermissionToDebugUrl:(id)arg1 withViewId:(id)arg2;
- (_Bool)checkWithoutRecordingDebugUrl:(id)arg1 withViewId:(id)arg2;
- (_Bool)checkDelegateAnswerForUrl:(id)arg1;
- (_Bool)ifViewIdBlockedForDebug:(id)arg1;
- (_Bool)ifSuperUserFromSpecialSource;
@property(readonly, nonatomic) NSString *weinreServerUrl;
@property(readonly, nonatomic) NSString *debugBatchUploadUrl;
@property(readonly, nonatomic) NSString *debugServerUrl;
- (void)resetSwitches;
- (void)networkChanged:(id)arg1;
- (void)dealloc;
- (id)initPrivate;
- (id)init;

@end

