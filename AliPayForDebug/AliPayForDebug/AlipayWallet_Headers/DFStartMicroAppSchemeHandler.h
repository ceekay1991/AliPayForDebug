//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DTSchemeHandler.h"

@class NSArray, NSCondition, NSDictionary, NSMutableDictionary, NSString, NSURL;

@interface DFStartMicroAppSchemeHandler : DTSchemeHandler
{
    _Bool _fromLaunching;
    _Bool _userChanged;
    _Bool _isLoginState;
    _Bool _isFirstLogin;
    _Bool _isCallbackAfterLogin;
    NSArray *_legacyAppsList;
    NSDictionary *_launchOptions;
    NSCondition *_taskPenddingCondition;
    long long _instanceSequence;
    NSURL *_url;
    NSString *_fromSourceId;
    NSString *_region;
    NSDictionary *_userInfo;
    NSString *_sourceBundleId;
    NSString *_startAppId;
    NSString *_fltClusterId;
    NSString *_fltSessionId;
    NSMutableDictionary *_alnDic;
    long long _currentTimeFrom1970;
}

+ (id)methodFromURL:(id)arg1;
+ (_Bool)checkSupportedMiniFormat:(id)arg1;
+ (_Bool)checkSupportedCommonFormat:(id)arg1;
+ (id)getCurrentRegionWithScheme:(id)arg1;
+ (_Bool)checkMutiRegionSupportedScheme:(id)arg1;
+ (_Bool)checkSupportedScheme:(id)arg1;
+ (_Bool)canHandleOpenURL:(id)arg1;
@property(nonatomic) long long currentTimeFrom1970; // @synthesize currentTimeFrom1970=_currentTimeFrom1970;
@property(retain, nonatomic) NSMutableDictionary *alnDic; // @synthesize alnDic=_alnDic;
@property(retain, nonatomic) NSString *fltSessionId; // @synthesize fltSessionId=_fltSessionId;
@property(retain, nonatomic) NSString *fltClusterId; // @synthesize fltClusterId=_fltClusterId;
@property(retain, nonatomic) NSString *startAppId; // @synthesize startAppId=_startAppId;
@property(retain, nonatomic) NSString *sourceBundleId; // @synthesize sourceBundleId=_sourceBundleId;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) NSString *region; // @synthesize region=_region;
@property(retain, nonatomic) NSString *fromSourceId; // @synthesize fromSourceId=_fromSourceId;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) long long instanceSequence; // @synthesize instanceSequence=_instanceSequence;
@property(nonatomic) _Bool isCallbackAfterLogin; // @synthesize isCallbackAfterLogin=_isCallbackAfterLogin;
@property(nonatomic) _Bool isFirstLogin; // @synthesize isFirstLogin=_isFirstLogin;
@property(nonatomic) _Bool isLoginState; // @synthesize isLoginState=_isLoginState;
@property(nonatomic) _Bool userChanged; // @synthesize userChanged=_userChanged;
@property(nonatomic) _Bool fromLaunching; // @synthesize fromLaunching=_fromLaunching;
@property(retain, nonatomic) NSCondition *taskPenddingCondition; // @synthesize taskPenddingCondition=_taskPenddingCondition;
@property(retain, nonatomic) NSDictionary *launchOptions; // @synthesize launchOptions=_launchOptions;
@property(retain, nonatomic) NSArray *legacyAppsList; // @synthesize legacyAppsList=_legacyAppsList;
- (void).cxx_destruct;
- (void)logForTinyAppPerformanceWithSeedId:(id)arg1;
- (void)parseLaunchParams:(id)arg1;
- (void)markSchemeInfoWithSource:(id)arg1;
- (id)schemeConfigForKey:(id)arg1;
- (_Bool)checkAppIdOnWhitelist:(id)arg1;
- (void)logExternalScheme:(id)arg1 appId:(id)arg2 userInfo:(id)arg3;
- (_Bool)skipLoginStepWithUserInfo:(id)arg1;
- (void)reportAllSchemeLogWithScheme:(id)arg1 appId:(id)arg2;
- (void)reportWidgetLogWithAppId:(id)arg1;
- (void)mappingLaunchOptions:(id)arg1;
- (void)loginControllerDidDissmiss:(id)arg1;
- (void)notifyStartingApp;
- (_Bool)isLegacyApp:(id)arg1;
- (_Bool)isTinyApp:(id)arg1;
- (id)handleStartAppSceneParams;
- (void)startAppWithId:(id)arg1;
- (void)startApp:(id)arg1 afterAuthScheme:(id)arg2 authType:(unsigned long long)arg3;
- (id)parseAppIdFromUrl;
- (id)getAppIdFromUrl;
- (long long)compareAppVersion:(id)arg1;
- (_Bool)checkVersion;
- (void)waitForLoginCallback:(_Bool)arg1;
- (void)waitForGestrueAndLoginWithTarget:(id)arg1;
- (_Bool)checkUserLoginStateAfterCallback:(_Bool)arg1;
- (void)checkUserLoginState;
- (void)startAppWithId:(id)arg1 source:(id)arg2 userInfo:(id)arg3 schemeUrl:(id)arg4;
- (_Bool)handleOpenURL:(id)arg1 userInfo:(id)arg2;
- (id)init;
- (void)dealloc;

@end

