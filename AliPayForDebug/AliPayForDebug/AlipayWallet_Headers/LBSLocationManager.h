//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"

@class CLLocationManager, CTTelephonyNetworkInfo, LBSLocationCache, NSError, NSLock, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface LBSLocationManager : NSObject <CLLocationManagerDelegate>
{
    _Bool _locatingErrorOnWifiRPC;
    _Bool _isLocating;
    _Bool _currentIsChineseMainLand;
    CLLocationManager *_appleLocationManager;
    LBSLocationCache *_cache;
    double _uploadLocationTime;
    NSLock *_locationTimeLock;
    NSObject<OS_dispatch_queue> *_uploadLocationQueue;
    NSMutableArray *_bestLocations;
    NSLock *_locationArrayLock;
    NSObject<OS_dispatch_queue> *_countryChangedQueue;
    NSObject<OS_dispatch_queue> *_locationQueue;
    NSObject<OS_dispatch_queue> *_archiveCacheQueue;
    NSObject<OS_dispatch_queue> *_lbsAuthQueue;
    NSObject<OS_dispatch_queue> *_overAllCallBackForTimeOutQueue;
    NSObject<OS_dispatch_queue> *_logQueue;
    NSObject<OS_dispatch_semaphore> *_authLocatingSemaphore;
    NSMutableDictionary *_requestContexts;
    NSMutableDictionary *_requestBiztypeMapping;
    NSError *_lastCoreLocationError;
    CTTelephonyNetworkInfo *_networkInfo;
    NSString *_currentCountryCode;
    NSString *_currentProvinceCode;
}

+ (_Bool)getLogFirstLBSConfig;
+ (_Bool)getLastKnownLogConfig;
+ (void)logFirstLocationBiz:(id)arg1;
+ (void)lastLocationLogWithBiz:(id)arg1 Location:(id)arg2;
+ (long long)finalLevelForLegacyType:(long long)arg1 andLevel:(long long)arg2;
+ (_Bool)isAppStoreBundle;
+ (id)loadLastLocationDataWithBizType:(id)arg1;
+ (id)loadLastLocationDataFromKV;
+ (id)loadLastLocationData;
+ (id)converToAPLBSLocationWithCLLocation:(id)arg1;
+ (id)locationToDict:(id)arg1;
+ (void)getResidentService:(id)arg1 callBack:(CDUnknownBlockType)arg2;
+ (id)loadLastLocationDataWithBizType:(id)arg1 accuracy:(double)arg2 cacheTime:(double)arg3;
+ (void)privateLocatingWithRequest:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
+ (void)hookRequestWithDelegate:(id)arg1 instance:(id)arg2;
+ (void)getLBSAuthStatus:(CDUnknownBlockType)arg1;
+ (void)cancelWithBizType:(id)arg1;
+ (void)geoCodeWithAddress:(id)arg1 bizType:(id)arg2 onFinishedReversingGeocode:(CDUnknownBlockType)arg3;
+ (void)locationWithRequestBlock:(CDUnknownBlockType)arg1 onFinishedLocating:(CDUnknownBlockType)arg2 onFinishedReversingGeocode:(CDUnknownBlockType)arg3;
+ (void)locationWithRequestBlock:(CDUnknownBlockType)arg1 onFinishedReversingGeocode:(CDUnknownBlockType)arg2;
+ (void)locationWithRequestBlock:(CDUnknownBlockType)arg1 onFinishedLocating:(CDUnknownBlockType)arg2;
+ (id)defaultLocationCache;
+ (id)defaultCoreLocationManagerWithSource:(_Bool)arg1;
+ (void)load;
@property(nonatomic) _Bool currentIsChineseMainLand; // @synthesize currentIsChineseMainLand=_currentIsChineseMainLand;
@property(retain, nonatomic) NSString *currentProvinceCode; // @synthesize currentProvinceCode=_currentProvinceCode;
@property(retain, nonatomic) NSString *currentCountryCode; // @synthesize currentCountryCode=_currentCountryCode;
@property(retain, nonatomic) CTTelephonyNetworkInfo *networkInfo; // @synthesize networkInfo=_networkInfo;
@property(copy) NSError *lastCoreLocationError; // @synthesize lastCoreLocationError=_lastCoreLocationError;
@property(retain) NSMutableDictionary *requestBiztypeMapping; // @synthesize requestBiztypeMapping=_requestBiztypeMapping;
@property _Bool isLocating; // @synthesize isLocating=_isLocating;
@property(retain) NSMutableDictionary *requestContexts; // @synthesize requestContexts=_requestContexts;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *authLocatingSemaphore; // @synthesize authLocatingSemaphore=_authLocatingSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *logQueue; // @synthesize logQueue=_logQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *overAllCallBackForTimeOutQueue; // @synthesize overAllCallBackForTimeOutQueue=_overAllCallBackForTimeOutQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *lbsAuthQueue; // @synthesize lbsAuthQueue=_lbsAuthQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *archiveCacheQueue; // @synthesize archiveCacheQueue=_archiveCacheQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *locationQueue; // @synthesize locationQueue=_locationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *countryChangedQueue; // @synthesize countryChangedQueue=_countryChangedQueue;
@property(retain, nonatomic) NSLock *locationArrayLock; // @synthesize locationArrayLock=_locationArrayLock;
@property(retain, nonatomic) NSMutableArray *bestLocations; // @synthesize bestLocations=_bestLocations;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *uploadLocationQueue; // @synthesize uploadLocationQueue=_uploadLocationQueue;
@property(retain, nonatomic) NSLock *locationTimeLock; // @synthesize locationTimeLock=_locationTimeLock;
@property(nonatomic) double uploadLocationTime; // @synthesize uploadLocationTime=_uploadLocationTime;
@property(retain, nonatomic) LBSLocationCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) CLLocationManager *appleLocationManager; // @synthesize appleLocationManager=_appleLocationManager;
@property _Bool locatingErrorOnWifiRPC; // @synthesize locatingErrorOnWifiRPC=_locatingErrorOnWifiRPC;
- (void).cxx_destruct;
- (_Bool)ifFixSempCrash;
- (_Bool)isOpenNewCacheFromConfig;
- (_Bool)isOpenCountryCodeChangeNotiConfig;
- (_Bool)isOpenoverAllTimeOut;
- (_Bool)isOpenCacheListForAddress;
- (_Bool)getOpenAuthApply;
- (id)currentUserId;
- (id)bizTypeListForWifiLocation;
- (id)bizTypeListForLocationWithoutAuthorization;
- (void)notifyRegionChangedWithAddress:(id)arg1;
- (void)notifyCountryChangedWithAddress:(id)arg1;
- (id)appendExtendInfo:(id)arg1;
- (id)appendExtendInfo:(id)arg1 offset:(_Bool)arg2;
- (id)getAdcode:(id)arg1 withLevel:(long long)arg2;
- (void)selectAdocdeOfAddressInfo:(id)arg1 withLevel:(long long)arg2;
- (id)constructLBSAddressInfo:(id)arg1 type:(long long)arg2 level:(long long)arg3 location:(id)arg4;
- (id)biztypeAuthGuide;
- (id)biztypeBlacklistInBg;
- (id)biztypeBlacklist;
- (void)backgourndStateChanged;
- (void)checkAndUpdateCache;
- (void)memCacheToDisk;
- (void)tryToAuthGuide:(id)arg1;
- (void)getCacheFromDisk;
- (void)becomeActive;
- (void)leaveBackgournd;
- (void)enterBackgournd;
- (void)writeAnalysisLog;
- (void)writeCoreLocationError:(id)arg1;
- (void)getOptimizedLocationByRpc:(id)arg1 withLocation:(id)arg2 andCallback:(CDUnknownBlockType)arg3;
- (void)getLocationByWifiAndRpc:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)reGeoCodeWithRequest:(id)arg1 andCallBack:(CDUnknownBlockType)arg2;
- (void)completeWithUniqueKey:(id)arg1 withCancelled:(_Bool)arg2;
- (void)completeWithUniqueKey:(id)arg1;
- (void)cancelLocationRequestWithBizType:(id)arg1;
- (id)chooseBestLocation:(id)arg1 andCandidates:(id)arg2;
- (void)waitAndHandleLocation:(id)arg1;
- (void)startLocatingWithRequestContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

