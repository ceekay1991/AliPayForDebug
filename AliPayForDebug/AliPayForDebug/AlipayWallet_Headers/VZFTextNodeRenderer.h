//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "VZFRenderer.h"

@class NSArray, NSAttributedString;

@interface VZFTextNodeRenderer : VZFRenderer
{
    _Bool _calculated;
    struct CGSize _textSize;
    struct CGSize _postLayoutSize;
    NSArray *_lines;
    NSAttributedString *_unfixedText;
    _Bool _adjustsFontSizeToFitWidth;
    NSAttributedString *_text;
    unsigned long long _lineBreakMode;
    unsigned long long _truncatingMode;
    unsigned long long _verticalAlignment;
    long long _alignment;
    unsigned long long _maxNumberOfLines;
    double _minimumScaleFactor;
    long long _baselineAdjustment;
    struct CGSize _maxSize;
    struct UIEdgeInsets _edgeInsets;
}

+ (void)initialize;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic) long long baselineAdjustment; // @synthesize baselineAdjustment=_baselineAdjustment;
@property(nonatomic) double minimumScaleFactor; // @synthesize minimumScaleFactor=_minimumScaleFactor;
@property(nonatomic) _Bool adjustsFontSizeToFitWidth; // @synthesize adjustsFontSizeToFitWidth=_adjustsFontSizeToFitWidth;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) unsigned long long maxNumberOfLines; // @synthesize maxNumberOfLines=_maxNumberOfLines;
@property(nonatomic) long long alignment; // @synthesize alignment=_alignment;
@property(nonatomic) unsigned long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) unsigned long long truncatingMode; // @synthesize truncatingMode=_truncatingMode;
@property(nonatomic) unsigned long long lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(retain, nonatomic) NSAttributedString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (long long)characterIndexAtPoint:(struct CGPoint)arg1;
- (void)drawContentInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2;
- (double)lastBaselineInBounds:(struct CGRect)arg1;
- (double)firstBaselineInBounds:(struct CGRect)arg1;
- (double)baselineOfLineAtIndex:(unsigned long long)arg1 inBounds:(struct CGRect)arg2;
- (double)offsetYWithBounds:(struct CGRect)arg1;
- (void)postLayout:(struct CGSize)arg1;
- (void)_calculate;
- (_Bool)isLineSeparator:(unsigned short)arg1;
- (_Bool)isIncludingEmoji:(id)arg1 inRange:(struct _NSRange)arg2;
- (_Bool)isEmoji:(id)arg1;
- (struct __CTLine *)truncateLine:(struct __CTLine *)arg1 text:(id)arg2 typesetter:(struct __CTTypesetter *)arg3 start:(long long)arg4;
- (unsigned long long)linesCount;
- (struct CGSize)textSize;

@end

