//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MASSChannelInstance.h"

@class AMNetAvailbleStatistic, MASSTokenTask, NSMutableArray, NSMutableDictionary, NSString;
@protocol AMLogDelegate, MAStorageDelegate, NetAccessInfo;

@interface MASSMainModeInstance : MASSChannelInstance
{
    _Bool _started;
    _Bool _shouldStop;
    _Bool _isUsingMMDP;
    _Bool _isUsingMMUP;
    _Bool _sentryGuard;
    NSString *_token;
    long long _tokenExpireTime;
    NSMutableArray *_uploadQueue;
    NSMutableArray *_downloadQueue;
    NSMutableArray *_quickUploadJudeQueue;
    NSMutableArray *_recordingUploadQueue;
    NSMutableArray *_tfsDownloadQueue;
    NSMutableArray *_tfsLowPriorityQueue;
    NSMutableArray *_markDownloadQueue;
    NSMutableArray *_offlineUploadQueue;
    NSMutableDictionary *_businessToCallback;
    NSString *_uid;
    NSString *_utdid;
    NSString *_uuid;
    NSString *_uidAuthority;
    NSMutableArray *_infoProviders;
    id <MAStorageDelegate> _storageInterface;
    id <NetAccessInfo> _netAccessInfoProvider;
    id <AMLogDelegate> _logWriter;
    NSMutableArray *_errorListenners;
    AMNetAvailbleStatistic *_djgAvailbleStatistic;
    AMNetAvailbleStatistic *_tfsAvailbleStatistic;
    NSMutableDictionary *_uploadFileWholes;
    NSMutableDictionary *_downloadFilePaths;
    long long _loopCounter;
    MASSTokenTask *_tokenTask;
}

+ (void)ThreadStartSyncLockOnOrOff:(_Bool)arg1;
+ (id)shareInstance;
@property(retain, nonatomic) MASSTokenTask *tokenTask; // @synthesize tokenTask=_tokenTask;
@property long long loopCounter; // @synthesize loopCounter=_loopCounter;
@property _Bool sentryGuard; // @synthesize sentryGuard=_sentryGuard;
@property(retain, nonatomic) NSMutableDictionary *downloadFilePaths; // @synthesize downloadFilePaths=_downloadFilePaths;
@property(retain, nonatomic) NSMutableDictionary *uploadFileWholes; // @synthesize uploadFileWholes=_uploadFileWholes;
@property(retain, nonatomic) AMNetAvailbleStatistic *tfsAvailbleStatistic; // @synthesize tfsAvailbleStatistic=_tfsAvailbleStatistic;
@property(retain, nonatomic) AMNetAvailbleStatistic *djgAvailbleStatistic; // @synthesize djgAvailbleStatistic=_djgAvailbleStatistic;
@property(nonatomic) _Bool isUsingMMUP; // @synthesize isUsingMMUP=_isUsingMMUP;
@property(nonatomic) _Bool isUsingMMDP; // @synthesize isUsingMMDP=_isUsingMMDP;
@property(retain, nonatomic) NSMutableArray *errorListenners; // @synthesize errorListenners=_errorListenners;
@property(retain, nonatomic) id <AMLogDelegate> logWriter; // @synthesize logWriter=_logWriter;
@property(retain, nonatomic) id <NetAccessInfo> netAccessInfoProvider; // @synthesize netAccessInfoProvider=_netAccessInfoProvider;
@property(retain, nonatomic) id <MAStorageDelegate> storageInterface; // @synthesize storageInterface=_storageInterface;
@property(retain, nonatomic) NSMutableArray *infoProviders; // @synthesize infoProviders=_infoProviders;
@property(retain, nonatomic) NSString *uidAuthority; // @synthesize uidAuthority=_uidAuthority;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *utdid; // @synthesize utdid=_utdid;
@property(retain, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property(retain, nonatomic) NSMutableDictionary *businessToCallback; // @synthesize businessToCallback=_businessToCallback;
@property(retain, nonatomic) NSMutableArray *offlineUploadQueue; // @synthesize offlineUploadQueue=_offlineUploadQueue;
@property(retain, nonatomic) NSMutableArray *markDownloadQueue; // @synthesize markDownloadQueue=_markDownloadQueue;
@property(retain, nonatomic) NSMutableArray *tfsLowPriorityQueue; // @synthesize tfsLowPriorityQueue=_tfsLowPriorityQueue;
@property(retain, nonatomic) NSMutableArray *tfsDownloadQueue; // @synthesize tfsDownloadQueue=_tfsDownloadQueue;
@property(retain, nonatomic) NSMutableArray *recordingUploadQueue; // @synthesize recordingUploadQueue=_recordingUploadQueue;
@property(retain, nonatomic) NSMutableArray *quickUploadJudeQueue; // @synthesize quickUploadJudeQueue=_quickUploadJudeQueue;
@property(retain, nonatomic) NSMutableArray *downloadQueue; // @synthesize downloadQueue=_downloadQueue;
@property(retain, nonatomic) NSMutableArray *uploadQueue; // @synthesize uploadQueue=_uploadQueue;
@property(nonatomic) long long tokenExpireTime; // @synthesize tokenExpireTime=_tokenExpireTime;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property _Bool shouldStop; // @synthesize shouldStop=_shouldStop;
@property _Bool started; // @synthesize started=_started;
- (void).cxx_destruct;
- (id)getStatisInfoOfUrlRequest:(id)arg1;
- (id)getFidUploadStatisInfo:(id)arg1;
- (id)getFidDownloadStatisInfo:(id)arg1 nbnet:(_Bool)arg2;
- (id)getUrlDownloadLastError:(id)arg1;
- (id)getFidDownloadLastError:(id)arg1;
- (_Bool)fetchFilter;
- (id)toString;
- (void)flushDownloadTmpPathsToStorage;
- (void)flushUploadHolesToStorage;
- (void)eraseExpiredFileholesAndPaths;
- (unsigned long long)OfflineQueueSize;
- (id)OfflineQueueFront;
- (void)DeQueueOfflineUpload;
- (void)EnQueueOfflineUpload:(id)arg1;
- (unsigned long long)MarkQueueSize;
- (id)MarkFront;
- (void)DeQueueMark;
- (void)EnqueueMark:(id)arg1;
- (unsigned long long)isTfsLowPriorityQueueSize;
- (id)TfsLowPriorityFront;
- (void)DequeueTfsLowPriority;
- (void)EnqueueTfsLowPriority:(id)arg1;
- (id)getTfsQueueStatistic;
- (unsigned long long)TfsQueueSize;
- (id)TfsFront;
- (void)DequeueTfs;
- (void)EnqueueTfs:(id)arg1;
- (unsigned long long)RecordingQueueSize;
- (id)RecordingFront;
- (void)DequeueRecording;
- (void)EnqueueRecording:(id)arg1;
- (unsigned long long)DownloadQueueSize;
- (void)DequeueDownload;
- (id)DownloadFront;
- (void)EnQueueDownload:(id)arg1;
- (unsigned long long)QuickUploadQueueSize;
- (void)DequeueQuickUpload;
- (id)QuickUploadFront;
- (void)EnQueueQuickUpload:(id)arg1;
- (void)startFreshToken;
- (void)tokenExpireToReget;
- (void)tokenRefresh:(id)arg1 serverNow:(long long)arg2 expireTime:(long long)arg3;
- (void)downloadFileProgressFile:(id)arg1 taskId:(id)arg2 fileId:(id)arg3;
- (void)downloadFileFailTaskID:(id)arg1;
- (void)downloadFileSuccFile:(id)arg1 taskId:(id)arg2 fileId:(id)arg3 content:(id)arg4;
- (void)offlineUploadSuccTaskId:(id)arg1 discription:(id)arg2;
- (void)offlineUploadSuccTaskId:(id)arg1;
- (void)tfsDownloadHttpHeadRcved:(id)arg1;
- (void)tfsDownloadNewProgressTaskId:(id)arg1;
- (void)tfsDownloadSuccTaskId:(id)arg1;
- (void)uploadFileFailIsQuick:(_Bool)arg1 reason:(id)arg2 taskId:(id)arg3;
- (void)uploadFilePieceProgress:(id)arg1 taskId:(id)arg2;
- (void)recordingUploadFailTaskId:(id)arg1 error:(id)arg2;
- (void)recordingUploadSuccTaskId:(id)arg1 fileId:(id)arg2 resultJson:(id)arg3;
- (void)uploadFileSucc:(id)arg1 taskId:(id)arg2 fileId:(id)arg3 zooms:(id)arg4 discriptions:(id)arg5;
- (void)quickUploadFile:(id)arg1 taskId:(id)arg2 fromModel:(id)arg3 success:(_Bool)arg4 fileId:(id)arg5 zooms:(id)arg6 discriptions:(id)arg7;
- (void)massTaskStart:(id)arg1 fromModel:(id)arg2;
- (_Bool)tokenNearExpire;
- (_Bool)tokenIsInvalid;
- (void)recordingUploadTaskCancelTaskKey:(id)arg1;
- (void)recordingTaskTimeout:(id)arg1;
- (void)cancelRecordingTask:(id)arg1;
- (void)tfsDownloadCancelTaskKey:(id)arg1;
- (void)tfsDownloadTimeout:(id)arg1;
- (void)cancelTfsDownloadTask:(id)arg1;
- (void)fileDownloadCancelTaskKey:(id)arg1;
- (void)fileDownloadCancelName:(id)arg1 fileId:(id)arg2 taskKey:(id)arg3;
- (void)fileDownloadTimeoutName:(id)arg1 fileId:(id)arg2 taskKey:(id)arg3;
- (void)fileUpCancelTaskKey:(id)arg1;
- (void)fileUploadCancel:(id)arg1 taskKey:(id)arg2;
- (void)fileUploadTimeout:(id)arg1 taskKey:(id)arg2;
- (void)recordingData:(id)arg1;
- (void)checkAndStartRecording;
- (void)checkAndStartTfsDownloadLowPriority;
- (void)checkAndStartTfsDownload;
- (void)checkAndStartDownload;
- (void)checkAndStartUpload;
- (void)checkAndStartTasks;
- (void)eraseQuickTask:(id)arg1;
- (void)eraseRecordingTask:(id)arg1;
- (id)getArupRecordingTaskID:(id)arg1 fromModel:(id)arg2 firstPartData:(id)arg3 needCrypto:(_Bool)arg4;
- (void)startARUPRecordingTask;
- (id)getARUPUploadTaskWithTaskid:(id)arg1 fileName:(id)arg2 fineContent:(id)arg3 fileMd5:(id)arg4 needQuic:(_Bool)arg5 fromModel:(id)arg6 needCrpto:(_Bool)arg7 oldProgress:(float)arg8;
- (void)startARUPTask;
- (void)sendTfsDownloadTaskToMassFrom:(id)arg1 Url:(id)arg2 resultForm:(long long)arg3 filePath:(id)arg4 bizType:(id)arg5 taskKey:(id)arg6 extralHeaders:(id)arg7 needGradual:(_Bool)arg8 isPost:(_Bool)arg9 postBody:(id)arg10 needContinueDown:(_Bool)arg11 hostIp:(id)arg12 dnsCostMS:(double)arg13 isSysDns:(_Bool)arg14 emergency:(_Bool)arg15 dnsFromCache:(_Bool)arg16 pageSession:(id)arg17 ignore30x:(_Bool)arg18;
- (void)sendRecordingDataTaskId:(id)arg1 data:(id)arg2 hasNext:(_Bool)arg3;
- (void)sendRecordingUploadTaskToMASS:(id)arg1 fileName:(id)arg2 taskId:(id)arg3 firstPart:(id)arg4 needCrypto:(_Bool)arg5;
- (void)sendDownloadTaskToMASS:(id)arg1 fileName:(id)arg2 fileID:(id)arg3 filePath:(id)arg4 resultForm:(long long)arg5 isPic:(_Bool)arg6 zoom:(id)arg7 needCrypto:(_Bool)arg8 needGradual:(_Bool)arg9 bizType:(id)arg10 massExtraUrlParams:(id)arg11 expectecMD5:(id)arg12 taskKey:(id)arg13;
- (void)sendUploadTaskToMASS:(id)arg1 content:(id)arg2 fileName:(id)arg3 needJudgeQic:(_Bool)arg4 needCrypto:(_Bool)arg5 bizType:(id)arg6 routerDir:(long long)arg7 extralParams:(id)arg8 extralHeaders:(id)arg9 taskKey:(id)arg10;
- (void)addTaskModel:(id)arg1 instance:(id)arg2;
- (id)getTraceId;
- (void)MASSRpcResponse:(id)arg1;
- (void)dealNetAccessChange;
- (void)applicationNetAccessPointChange;
- (void)arupThreadLoop;
- (void)workFunction;
- (void)start;
- (void)dealloc;
- (id)init;

@end

