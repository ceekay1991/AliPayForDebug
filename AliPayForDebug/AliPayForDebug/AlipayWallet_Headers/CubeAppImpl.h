//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CKApp-Protocol.h"

@class NSString;
@protocol CKEngineProtocol;

@interface CubeAppImpl : NSObject <CKApp>
{
    // Error parsing type: ^{CKAppInstance=^^?^^?{atomic<int>=Ai}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}{ACKString=ii^v{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}}^{CKJSContext}{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}B}, name: _appInstance
    NSString *jsfmError;
    NSString *_appInstanceID;
    id <CKEngineProtocol> _engine;
    NSString *_appId;
}

@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(nonatomic) __weak id <CKEngineProtocol> engine; // @synthesize engine=_engine;
@property(copy, nonatomic) NSString *appInstanceID; // @synthesize appInstanceID=_appInstanceID;
- (void)setJsfmError:(id)arg1;
- (id)jsfmError;
- (void).cxx_destruct;
- (void)sendAppEvent:(id)arg1 params:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)createView:(id)arg1 frame:(struct CGRect)arg2 container:(id)arg3 option:(id)arg4;
- (id)initWithCode:(id)arg1 engine:(id)arg2 option:(id)arg3;
- (void)dealloc;

@end

