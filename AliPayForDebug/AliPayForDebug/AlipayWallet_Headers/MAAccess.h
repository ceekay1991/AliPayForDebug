//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MAAccessInterface-Protocol.h"

@class AMNetAvailbleStatistic, NSMutableArray, NSMutableDictionary, NSString, NSThread, NSTimer;
@protocol AMLogDelegate, MACtlInterface, MAStorageDelegate, ManualNetCheckResultInterface, NetAccessInfo, OS_dispatch_queue;

@interface MAAccess : NSObject <MAAccessInterface>
{
    _Bool _started;
    _Bool _linkRestrict;
    _Bool _needNetcheckButton;
    _Bool _shortLinkChannelOpen;
    _Bool _netCardIpV6Only;
    _Bool _isLaunchFinised;
    _Bool _bifrostLoaded;
    _Bool _isBackground;
    _Bool _netOK;
    _Bool _usrSpecialAttention;
    _Bool _netInterfaceInfoFreshed;
    _Bool _isStarted;
    _Bool _needStatics;
    _Bool _isBackFetching;
    _Bool _isZstdUpgrading;
    _Bool _isRedBarShowed;
    _Bool _bifrostStarted;
    _Bool _bifrostDowngrading;
    _Bool _isDebuggable;
    int _bifrostTargetType;
    NSString *_name;
    NSThread *_workThread;
    NSString *_restrictionMemo;
    NSString *_mTag;
    AMNetAvailbleStatistic *_availbleStatistic;
    NSMutableArray *_infoProviders;
    NSMutableArray *_errorListeners;
    NSMutableArray *_statusListeners;
    NSMutableDictionary *_dataRecievers;
    id <MAStorageDelegate> _storageInterface;
    id <MACtlInterface> _ctlInterface;
    id <NetAccessInfo> _netAccessInfoProvider;
    id <AMLogDelegate> _logWriter;
    long long _netStatus;
    NSString *_mobileEmei;
    unsigned long long _bgTask;
    id <ManualNetCheckResultInterface> _netCheckCallback;
    unsigned long long _sendInitTime;
    long long _forgroundTime;
    unsigned long long _backGroudBeforeLink;
    long long _backGroudTimeSeconds;
    unsigned long long _rpcTotalTraffic;
    unsigned long long _syncTotalTraffic;
    unsigned long long _mmtpTotalTraffic;
    unsigned long long _trafficStartTime;
    long long _scene;
    double _startTime;
    NSTimer *_canNotConnectTimer;
    long long _bifrostRPCFailedCount;
    long long _bifrostActivateCount;
    unsigned long long _lastBifrostRPCFailTime;
    long long _hpackErrCount;
    NSObject<OS_dispatch_queue> *_amnetQueue;
    NSObject<OS_dispatch_queue> *_rpcCacheQueue;
    NSMutableDictionary *_tcpConnectInfos;
    struct _opaque_pthread_mutex_t _lock;
}

+ (id)shareInstance;
@property _Bool isDebuggable; // @synthesize isDebuggable=_isDebuggable;
@property int bifrostTargetType; // @synthesize bifrostTargetType=_bifrostTargetType;
@property _Bool bifrostDowngrading; // @synthesize bifrostDowngrading=_bifrostDowngrading;
@property(retain, nonatomic) NSMutableDictionary *tcpConnectInfos; // @synthesize tcpConnectInfos=_tcpConnectInfos;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *rpcCacheQueue; // @synthesize rpcCacheQueue=_rpcCacheQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *amnetQueue; // @synthesize amnetQueue=_amnetQueue;
@property long long hpackErrCount; // @synthesize hpackErrCount=_hpackErrCount;
@property(nonatomic) unsigned long long lastBifrostRPCFailTime; // @synthesize lastBifrostRPCFailTime=_lastBifrostRPCFailTime;
@property(nonatomic) long long bifrostActivateCount; // @synthesize bifrostActivateCount=_bifrostActivateCount;
@property(nonatomic) long long bifrostRPCFailedCount; // @synthesize bifrostRPCFailedCount=_bifrostRPCFailedCount;
@property _Bool bifrostStarted; // @synthesize bifrostStarted=_bifrostStarted;
@property _Bool isRedBarShowed; // @synthesize isRedBarShowed=_isRedBarShowed;
@property(retain, nonatomic) NSTimer *canNotConnectTimer; // @synthesize canNotConnectTimer=_canNotConnectTimer;
@property(nonatomic) _Bool isZstdUpgrading; // @synthesize isZstdUpgrading=_isZstdUpgrading;
@property(nonatomic) _Bool isBackFetching; // @synthesize isBackFetching=_isBackFetching;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool needStatics; // @synthesize needStatics=_needStatics;
@property(nonatomic) _Bool isStarted; // @synthesize isStarted=_isStarted;
@property(nonatomic) struct _opaque_pthread_mutex_t lock; // @synthesize lock=_lock;
@property(nonatomic) _Bool netInterfaceInfoFreshed; // @synthesize netInterfaceInfoFreshed=_netInterfaceInfoFreshed;
@property(nonatomic) long long scene; // @synthesize scene=_scene;
@property(nonatomic) unsigned long long trafficStartTime; // @synthesize trafficStartTime=_trafficStartTime;
@property(nonatomic) unsigned long long mmtpTotalTraffic; // @synthesize mmtpTotalTraffic=_mmtpTotalTraffic;
@property(nonatomic) unsigned long long syncTotalTraffic; // @synthesize syncTotalTraffic=_syncTotalTraffic;
@property(nonatomic) unsigned long long rpcTotalTraffic; // @synthesize rpcTotalTraffic=_rpcTotalTraffic;
@property(nonatomic) long long backGroudTimeSeconds; // @synthesize backGroudTimeSeconds=_backGroudTimeSeconds;
@property(nonatomic) unsigned long long backGroudBeforeLink; // @synthesize backGroudBeforeLink=_backGroudBeforeLink;
@property(nonatomic) _Bool usrSpecialAttention; // @synthesize usrSpecialAttention=_usrSpecialAttention;
@property(nonatomic) long long forgroundTime; // @synthesize forgroundTime=_forgroundTime;
@property(nonatomic) _Bool netOK; // @synthesize netOK=_netOK;
@property unsigned long long sendInitTime; // @synthesize sendInitTime=_sendInitTime;
@property(nonatomic) __weak id <ManualNetCheckResultInterface> netCheckCallback; // @synthesize netCheckCallback=_netCheckCallback;
@property unsigned long long bgTask; // @synthesize bgTask=_bgTask;
@property(retain) NSString *mobileEmei; // @synthesize mobileEmei=_mobileEmei;
@property long long netStatus; // @synthesize netStatus=_netStatus;
@property(retain) id <AMLogDelegate> logWriter; // @synthesize logWriter=_logWriter;
@property(retain) id <NetAccessInfo> netAccessInfoProvider; // @synthesize netAccessInfoProvider=_netAccessInfoProvider;
@property(retain) id <MACtlInterface> ctlInterface; // @synthesize ctlInterface=_ctlInterface;
@property(retain) id <MAStorageDelegate> storageInterface; // @synthesize storageInterface=_storageInterface;
@property(retain) NSMutableDictionary *dataRecievers; // @synthesize dataRecievers=_dataRecievers;
@property(retain) NSMutableArray *statusListeners; // @synthesize statusListeners=_statusListeners;
@property(retain) NSMutableArray *errorListeners; // @synthesize errorListeners=_errorListeners;
@property(retain) NSMutableArray *infoProviders; // @synthesize infoProviders=_infoProviders;
@property(nonatomic) _Bool isBackground; // @synthesize isBackground=_isBackground;
@property(retain, nonatomic) AMNetAvailbleStatistic *availbleStatistic; // @synthesize availbleStatistic=_availbleStatistic;
@property _Bool bifrostLoaded; // @synthesize bifrostLoaded=_bifrostLoaded;
@property(nonatomic) _Bool isLaunchFinised; // @synthesize isLaunchFinised=_isLaunchFinised;
@property(nonatomic) _Bool netCardIpV6Only; // @synthesize netCardIpV6Only=_netCardIpV6Only;
@property(retain, nonatomic) NSString *mTag; // @synthesize mTag=_mTag;
@property(nonatomic) _Bool shortLinkChannelOpen; // @synthesize shortLinkChannelOpen=_shortLinkChannelOpen;
@property(nonatomic) _Bool needNetcheckButton; // @synthesize needNetcheckButton=_needNetcheckButton;
@property(retain) NSString *restrictionMemo; // @synthesize restrictionMemo=_restrictionMemo;
@property(nonatomic) _Bool linkRestrict; // @synthesize linkRestrict=_linkRestrict;
@property(retain) NSThread *workThread; // @synthesize workThread=_workThread;
@property(retain) NSString *name; // @synthesize name=_name;
@property _Bool started; // @synthesize started=_started;
- (void).cxx_destruct;
- (void)downgradeBifrost:(id)arg1;
- (_Bool)isBifrostH2InDowngrade;
- (id)getTcpConnectInfos;
- (void)saveTcpConnectInfos:(id)arg1;
- (void)activateBifrost:(id)arg1;
- (_Bool)netAccess;
- (void)bifrostFlag:(id)arg1;
- (_Bool)useBifrost;
- (void)needSessionIdComponsate;
- (id)getQOSInfo;
- (id)getMTAG;
- (void)bifrostDownUpLogReport:(id)arg1;
- (void)uninitBifrost;
- (_Bool)isBifrost;
- (void)stopBifrostThread;
- (void)stopRedBarTimer;
- (void)onTimer;
- (void)startRedBarTimer;
- (void)updateBifrostSwitch:(id)arg1;
- (id)SyncSocketSendAndRcvHost:(id)arg1 port:(unsigned short)arg2 dataToSend:(id)arg3 timeoutSec:(long long)arg4 errCode:(long long *)arg5;
- (void)noticeBifrostSwitch:(_Bool)arg1 useH2:(_Bool)arg2;
- (void)noticeZstdUpgradeInternal:(unsigned long long)arg1;
- (void)noticeZstdSpannerSwitch:(_Bool)arg1;
- (void)noticeZstdGraySwitch:(_Bool)arg1 grayStr:(id)arg2;
- (int)getQosLevel;
- (void)updateQosConfig:(id)arg1;
- (void)updateNewFunctionSwitch:(id)arg1;
- (void)updateStorage:(id)arg1;
- (void)getNetWifiSSID;
- (void)dealloc;
- (void)freshNetInterfacefInfo;
- (id)getIpV6OxcStringFromPointSepIpV4:(id)arg1;
- (void)setUsingIpV6JudgeLogic:(_Bool)arg1;
- (void)RpcSendToTcpId:(long long)arg1 dataHeadLen:(long long)arg2 payloadlen:(long long)arg3 mmtpLen:(long long)arg4;
- (_Bool)isAppBackground;
- (void)sendMMTPDownNotice;
- (void)SendReloginNotice;
- (void)bifrostInfoReport:(id)arg1;
- (void)connectInfoReportTcp:(id)arg1;
- (void)sendLongLinkStatusNotice:(long long)arg1;
- (void)LogDiagnose:(id)arg1 content:(id)arg2;
- (void)LogToMdapSubtype:(id)arg1 content:(id)arg2;
- (void)callBackErrorHappensWithCode:(long long)arg1 andMsg:(id)arg2 isNetDomain:(_Bool)arg3;
- (void)callBackOfDataSendingTimeoutWithChannel:(long long)arg1 withHead:(id)arg2;
- (void)callBackOfDataCommingWithchanne:(long long)arg1 withHead:(id)arg2 withData:(id)arg3;
- (void)callBackOfInitNotice;
- (void)startTimer:(int)arg1;
- (void)startRunThread;
- (void)startAmnetByAmnet;
- (void)checkTimeToUpgrade;
- (void)delayRegisterAtExitCallback:(id)arg1;
- (void)applicationWillTerminate;
- (void)applicationDidBecomeActive;
- (void)applicationDidEnterBackground;
- (void)applicationWillEnterForground;
- (void)setDefaultNetCardIpV6Info;
- (void)backgroundFetchStateChanged:(id)arg1;
- (void)applicationNetAccessPointChange;
- (_Bool)netChangeNeedReconnect;
- (void)setMultipleEthChooseStartCount:(long long)arg1;
- (void)reconnectLinerCount:(unsigned long long)arg1 radicalness:(long long)arg2;
- (void)httpHost:(id)arg1 ipList:(id)arg2 andPort:(unsigned int)arg3 ttd:(long long)arg4;
- (void)httpHost:(id)arg1 ipList:(id)arg2 andPort:(unsigned int)arg3;
- (void)h2LinkHost:(id)arg1 port:(unsigned long long)arg2 iplist:(id)arg3;
- (void)longLinkHost:(id)arg1 port:(unsigned long long)arg2 iplist:(id)arg3;
- (void)userLogInOut:(_Bool)arg1 userId:(id)arg2 cachedSessionId:(id)arg3 extInfo:(id)arg4;
- (void)userLogInOut:(_Bool)arg1 userId:(id)arg2 cachedSessionId:(id)arg3;
- (void)cancelNetCheck;
- (void)startNetCheckWithcallbackItem:(id)arg1;
- (_Bool)canNetCheck;
- (void)setAbTag:(id)arg1 hit:(_Bool)arg2;
- (void)setComposeSwitch:(_Bool)arg1;
- (void)setShortChannelTimeoutConfig:(unsigned long long)arg1;
- (void)noticeStatusTimerSwitch:(_Bool)arg1 grayStr:(id)arg2;
- (void)noticeRPCRetrySwitch:(_Bool)arg1;
- (void)noticeShortFrequencySwitch:(_Bool)arg1 grayStr:(id)arg2;
- (void)noticeHttpShortChannelSwitch:(_Bool)arg1 grayStr:(id)arg2;
- (void)noticeUseNewOpenssl:(_Bool)arg1;
- (void)cancelData:(unsigned long long)arg1;
- (void)registerLogWriter:(id)arg1;
- (void)registerNetInfoProvider:(id)arg1;
- (long long)accessStatus;
- (void)dataAckNotice:(unsigned long long)arg1 isTimeOut:(_Bool)arg2 timeoutInternal:(long long)arg3;
- (void)sendData:(id)arg1 channel:(long long)arg2 passSpanner:(_Bool)arg3;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 forwardIP:(unsigned int)arg7 params:(id)arg8;
- (void)networkCtlPkgSend:(id)arg1;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 canHttp:(_Bool)arg7 canZstd:(_Bool)arg8;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 canHttp:(_Bool)arg7;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4;
- (void)exactSendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 forwardIP:(unsigned int)arg7 canHttp:(_Bool)arg8 canZstd:(_Bool)arg9 extraParams:(id)arg10;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 forwardIP:(unsigned int)arg7 canHttp:(_Bool)arg8 canZstd:(_Bool)arg9 extraParams:(id)arg10;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 forwardIP:(unsigned int)arg7 canHttp:(_Bool)arg8 canZstd:(_Bool)arg9;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 forwardIP:(unsigned int)arg7 canHttp:(_Bool)arg8;
- (void)sendHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 needRetry:(_Bool)arg6 forwardIP:(unsigned int)arg7;
- (void)sendThroughHttpHead:(id)arg1 body:(id)arg2 channel:(long long)arg3 dataId:(unsigned long long)arg4 passSpanner:(_Bool)arg5 forwardIP:(unsigned int)arg6;
- (void)addStatusObserver:(id)arg1;
- (void)addInfoProvider:(id)arg1;
- (void)addErrorObserver:(id)arg1;
- (void)registerCtlObserver:(id)arg1;
- (void)registerDataObserver:(id)arg1 channel:(long long)arg2;
- (void)breakAMNetLongLink;
- (void)stopAMNetThread;
- (void)startAMNetThread:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

