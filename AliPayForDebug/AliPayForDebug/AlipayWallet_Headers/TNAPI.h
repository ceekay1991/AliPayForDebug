//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AUDialogDelegate-Protocol.h"
#import "RCTBridgeModule-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class NSString, RCTBridge;
@protocol OS_dispatch_queue;

@interface TNAPI : NSObject <UIAlertViewDelegate, AUDialogDelegate, RCTBridgeModule>
{
    RCTBridge *_bridge;
}

+ (void)load;
+ (id)moduleName;
+ (const struct RCTMethodInfo *)__rct_export__190;
+ (const struct RCTMethodInfo *)__rct_export__190;
+ (const struct RCTMethodInfo *)__rct_export__260;
+ (const struct RCTMethodInfo *)__rct_export__422;
+ (const struct RCTMethodInfo *)__rct_export__301;
+ (const struct RCTMethodInfo *)__rct_export__180;
+ (const struct RCTMethodInfo *)__rct_export__230;
+ (const struct RCTMethodInfo *)__rct_export__1674;
+ (const struct RCTMethodInfo *)__rct_export__1113;
+ (const struct RCTMethodInfo *)__rct_export__852;
+ (const struct RCTMethodInfo *)__rct_export__231;
+ (const struct RCTMethodInfo *)__rct_export__572;
+ (const struct RCTMethodInfo *)__rct_export__231;
+ (const struct RCTMethodInfo *)__rct_export__1283;
+ (const struct RCTMethodInfo *)__rct_export__902;
+ (const struct RCTMethodInfo *)__rct_export__631;
+ (const struct RCTMethodInfo *)__rct_export__200;
+ (const struct RCTMethodInfo *)__rct_export__3146;
+ (const struct RCTMethodInfo *)__rct_export__2725;
+ (const struct RCTMethodInfo *)__rct_export__1904;
+ (const struct RCTMethodInfo *)__rct_export__1453;
+ (const struct RCTMethodInfo *)__rct_export__1152;
+ (const struct RCTMethodInfo *)__rct_export__331;
@property(readonly, nonatomic) __weak RCTBridge *bridge; // @synthesize bridge=_bridge;
- (void).cxx_destruct;
- (id)getBridgeInternal;
- (_Bool)checkMethodPermission:(id)arg1 data:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)checkMethodPermission:(id)arg1 data:(id)arg2;
- (void)invokeJSAPIManually:(id)arg1;
- (id)getApp;
- (id)init;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
- (void)dealloc;
- (id)callSync:(id)arg1 parameters:(id)arg2;
- (void)switchTab:(id)arg1 params:(id)arg2;
- (void)setShowShareMenu:(id)arg1;
- (void)getFreeDiskSpace:(CDUnknownBlockType)arg1;
- (void)getTotalDiskSpace:(CDUnknownBlockType)arg1;
- (void)getSandBoxSize:(CDUnknownBlockType)arg1;
- (void)call:(id)arg1 parameters:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)hideLoading;
- (void)showLoading:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)hideToast;
- (void)showToast:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)dialogView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)confirm:(id)arg1 successCallback:(CDUnknownBlockType)arg2;
- (void)alert:(id)arg1 successCallback:(CDUnknownBlockType)arg2;
- (void)exitApp;
- (void)navigateBack:(long long)arg1;
- (void)redirectTo:(id)arg1 params:(id)arg2;
- (void)navigateTo:(id)arg1 params:(id)arg2;
- (id)createNavItem:(id)arg1 app:(id)arg2;
- (void)addOptionMenu:(long long)arg1 params:(id)arg2;
- (void)removeOptionMenu:(long long)arg1;
- (void)tapGesture:(id)arg1;
- (void)showPopMenu:(id)arg1;
- (void)popItemTapGesture:(id)arg1;
- (void)hideNavigationBarLoading:(id)arg1;
- (void)showNavigationBarLoading:(id)arg1;
- (void)setNavigationBar:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)invokeJSAPIManually:(id)arg1 param:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)context;
- (void)setContext:(id)arg1;
- (void)jsApiCall:(id)arg1 parameters:(id)arg2 callback:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

