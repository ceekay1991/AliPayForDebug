//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NBPluginBase.h"

@class NSDictionary, NSString, NSTimer, TAHardwareUsageInfo;

@interface TAPlugin4HardwareUsageIcon : NBPluginBase
{
    TAHardwareUsageInfo *_permessionWaitingItem;
    NSDictionary *_hardwareMap;
    NSTimer *_timer;
    NSString *_synchronized_t;
    unsigned long long _audiorecordState;
}

@property(nonatomic) unsigned long long audiorecordState; // @synthesize audiorecordState=_audiorecordState;
@property(retain, nonatomic) NSString *synchronized_t; // @synthesize synchronized_t=_synchronized_t;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSDictionary *hardwareMap; // @synthesize hardwareMap=_hardwareMap;
@property(retain, nonatomic) TAHardwareUsageInfo *permessionWaitingItem; // @synthesize permessionWaitingItem=_permessionWaitingItem;
- (void).cxx_destruct;
- (void)dealloc;
- (id)findTargetScene:(id)arg1 uniqueId:(id)arg2;
- (void)checkPermissionStateChange;
- (void)stopTimer;
- (void)startTimer;
- (void)setPermessionWaitingItemWithType:(long long)arg1 sceneId:(id)arg2;
- (void)decreaseUsageCount:(long long)arg1 count:(long long)arg2 forScene:(id)arg3;
- (void)increaseUsageCount:(long long)arg1 forScene:(id)arg2;
- (long long)getCurrentHardwareType:(id)arg1;
- (id)getHardwareStackForScene:(id)arg1;
- (void)setHardWareStack:(id)arg1 forScene:(id)arg2;
- (_Bool)isHardwareInuse:(long long)arg1 forScene:(id)arg2;
- (void)resetHardwareStack:(id)arg1;
- (id)noticeText:(long long)arg1;
- (void)updateHardwareIcon:(id)arg1 type:(long long)arg2 delay:(double)arg3;
- (unsigned long long)getTAPermessionState:(id)arg1 apiName:(id)arg2;
- (unsigned long long)hasLocationPermission:(id)arg1;
- (unsigned long long)hasAudioPermission:(id)arg1;
- (_Bool)enablePlugin:(id)arg1;
- (id)invokeCompleteHandler:(id)arg1;
- (id)invokeEventHandler:(id)arg1;
- (void)handleEvent:(id)arg1;
- (int)priority;
- (void)pluginDidLoad;
- (id)init;

@end

