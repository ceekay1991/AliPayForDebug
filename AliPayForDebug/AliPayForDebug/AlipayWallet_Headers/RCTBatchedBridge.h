//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RCTBridge.h"

#import "RCTInvalidating-Protocol.h"

@class NSArray, NSDictionary, NSLock, NSMutableArray, NSString, RCTDisplayLink, RCTPerformanceLogger;
@protocol RCTJavaScriptExecutor;

@interface RCTBatchedBridge : RCTBridge <RCTInvalidating>
{
    // Error parsing type: {atomic<bool>="__a_"AB}, name: _wasBatchActive
    NSMutableArray *_pendingCalls;
    NSDictionary *_moduleDataByName;
    NSArray *_moduleDataByID;
    NSArray *_moduleClassesByID;
    unsigned long long _modulesInitializedOnMainQueue;
    RCTDisplayLink *_displayLink;
    _Bool _loading;
    _Bool _valid;
    _Bool _jSLoadedNotiPosted;
    _Bool _moduleSetupComplete;
    long long _flowID;
    struct __CFDictionary *_flowIDMap;
    NSLock *_flowIDMapLock;
    RCTPerformanceLogger *_performanceLogger;
    NSString *_bridgeDescription;
    RCTBridge *_parentBridge;
    id <RCTJavaScriptExecutor> _javaScriptExecutor;
}

@property(readonly, nonatomic) _Bool moduleSetupComplete; // @synthesize moduleSetupComplete=_moduleSetupComplete;
@property(readonly, nonatomic) __weak id <RCTJavaScriptExecutor> javaScriptExecutor; // @synthesize javaScriptExecutor=_javaScriptExecutor;
@property(readonly, nonatomic) __weak RCTBridge *parentBridge; // @synthesize parentBridge=_parentBridge;
- (void)setBridgeDescription:(id)arg1;
- (id)bridgeDescription;
- (id)performanceLogger;
- (void)setFlowIDMapLock:(id)arg1;
- (id)flowIDMapLock;
- (void)setFlowIDMap:(struct __CFDictionary *)arg1;
- (struct __CFDictionary *)flowIDMap;
- (void)setFlowID:(long long)arg1;
- (long long)flowID;
- (void).cxx_destruct;
- (id)jsContext;
- (struct OpaqueJSContext *)jsContextRef;
- (_Bool)isBatchActive;
- (void)stopProfiling:(CDUnknownBlockType)arg1;
- (void)startProfiling;
- (id)callNativeModule:(unsigned long long)arg1 method:(unsigned long long)arg2 params:(id)arg3;
- (void)batchDidComplete;
- (void)partialBatchDidFlush;
- (void)handleBuffer:(id)arg1;
- (void)handleBuffer:(id)arg1 batchEnded:(_Bool)arg2;
- (void)_processResponse:(id)arg1 error:(id)arg2;
- (void)_actuallyInvokeCallback:(id)arg1 arguments:(id)arg2;
- (void)_actuallyInvokeAndProcessModule:(id)arg1 method:(id)arg2 arguments:(id)arg3;
- (void)enqueueApplicationScript:(id)arg1 url:(id)arg2 onComplete:(CDUnknownBlockType)arg3;
- (void)_immediatelyCallTimer:(id)arg1;
- (id)callFunctionOnModule:(id)arg1 method:(id)arg2 arguments:(id)arg3 error:(id *)arg4;
- (void)enqueueCallback:(id)arg1 args:(id)arg2;
- (void)enqueueJSCall:(id)arg1 method:(id)arg2 args:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)logMessage:(id)arg1 level:(id)arg2;
- (void)invalidate;
- (void)dispatchBlock:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (_Bool)isJSLoadedNotiPosted;
- (_Bool)isValid;
- (_Bool)isLoading;
- (id)delegate;
- (void)setBundleURL:(id)arg1;
- (id)bundleURL;
- (void)setExecutorClass:(Class)arg1;
- (Class)executorClass;
- (void)requestReload;
- (void)reload;
- (void)setUp;
- (void)stopLoadingWithError:(id)arg1;
- (void)_flushPendingCalls;
- (void)executeSourceCode:(id)arg1;
- (void)injectJSONConfiguration:(id)arg1 onComplete:(CDUnknownBlockType)arg2;
- (id)moduleConfig;
- (void)registerModuleForFrameUpdates:(id)arg1 withModuleData:(id)arg2;
- (void)setUpExecutor;
- (void)prepareModulesWithDispatchGroup:(id)arg1;
- (void)initModulesWithDispatchGroup:(id)arg1;
- (id)configForModuleName:(id)arg1;
- (_Bool)moduleIsInitialized:(Class)arg1;
- (id)moduleForName:(id)arg1;
- (id)moduleDataForName:(id)arg1;
- (id)moduleClasses;
- (void)loadSource:(CDUnknownBlockType)arg1 onProgress:(CDUnknownBlockType)arg2;
- (void)start;
- (id)initWithBundleURL:(id)arg1 moduleProvider:(CDUnknownBlockType)arg2 launchOptions:(id)arg3;
- (id)initWithDelegate:(id)arg1 bundleURL:(id)arg2 moduleProvider:(CDUnknownBlockType)arg3 launchOptions:(id)arg4;
- (id)initWithParentBridge:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

